<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Flutter：TextField</title>
      <link href="/blog/2019/09/11/Flutter%EF%BC%9ATextField/"/>
      <url>/blog/2019/09/11/Flutter%EF%BC%9ATextField/</url>
      
        <content type="html"><![CDATA[<!-- build time:Tue Jan 07 2020 15:15:23 GMT+0800 (GMT+08:00) --><h5 id="TextField-输入框"><a href="#TextField-输入框" class="headerlink" title="TextField 输入框"></a>TextField 输入框</h5><p>属性如下：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">    controller: controller,</span><br><span class="line"></span><br><span class="line">    <span class="comment">//允许输入的最大长度，一个字母一个符号一个汉字都算1 且右下角有字数显示</span></span><br><span class="line">    maxLength: <span class="number">20</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//超过最大长度后是否还允许继续输入</span></span><br><span class="line">    <span class="comment">//  maxLengthEnforced: true,//默认true  超过长度后输入无效  右下角数字 显示10/10   此时onchange方法依然会调用，返回值就是限制了长度的值 超过后的输入不显示</span></span><br><span class="line">    maxLengthEnforced: <span class="keyword">false</span>, <span class="comment">//超过后可继续输入  右下角数字显示，比如 23/10</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//不是允许输入的最大行数,指的是输入框内可显示的高度是几行，超过设定行数后，scroll滚动显示</span></span><br><span class="line">    maxLines: <span class="number">3</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">//是否自动更正</span></span><br><span class="line">    autocorrect: <span class="keyword">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 该输入框的焦点处理，当获取/失去焦点时回调方法</span></span><br><span class="line">    focusNode: _focusNode,</span><br><span class="line"></span><br><span class="line">    <span class="comment">//是否自动获取焦点  跳转到该页面后 光标自动显示到该输入框  键盘弹起</span></span><br><span class="line">    autofocus: <span class="keyword">true</span>,</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//是否是密码  非密码以明文显示，密码以点显示</span></span><br><span class="line">    obscureText: <span class="keyword">false</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">//文本对齐方式  输入文字后，文字显示时是靠左靠右还是居中</span></span><br><span class="line">    textAlign: TextAlign.right, <span class="comment">// 靠右  textDirection的设置无效</span></span><br><span class="line">    <span class="comment">//  textAlign: TextAlign.left,// 靠左   textDirection的设置无效</span></span><br><span class="line">    <span class="comment">//  textAlign: TextAlign.center,// 居中</span></span><br><span class="line">    <span class="comment">//  textAlign: TextAlign.start,// TextDirection.ltr时靠左，TextDirection.rtl时靠右</span></span><br><span class="line">    <span class="comment">//  textAlign: TextAlign.end,// TextDirection.ltr时靠右，TextDirection.rtl时靠左</span></span><br><span class="line">    <span class="comment">//  textAlign: TextAlign.justify,// 两端对齐</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 从左边还是右边开始输入文字</span></span><br><span class="line">    textDirection: TextDirection.ltr, <span class="comment">//从左边输入  光标在左边</span></span><br><span class="line">    <span class="comment">//  textDirection: TextDirection.rtl, //从右边输入  光标在右边</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//输入文本的样式  字体大小  颜色 等</span></span><br><span class="line">    style: TextStyle(fontSize: <span class="number">50.0</span>, color: Colors.blue),</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//是否启用输入  如果是false 就无法输入了，且errorText失效</span></span><br><span class="line">    enabled: <span class="keyword">true</span>,</span><br><span class="line">    <span class="comment">//  enabled: false,</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//白名单校验，只允许输入符合规则的文本</span></span><br><span class="line">    <span class="comment">//  inputFormatters: [WhitelistingTextInputFormatter.digitsOnly],//允许的输入格式,不是控制的键盘，只有符合格式的输入才会显示 digitsOnly表示只允许数字。</span></span><br><span class="line">    <span class="comment">//  inputFormatters: [WhitelistingTextInputFormatter(RegExp("[a-z]"))],//只允许输入a-z小写字母。</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//允许输入的最大长度，一个字母一个符号一个汉字都算1 不会显示右下角的字数</span></span><br><span class="line">    <span class="comment">//如果设置了maxLength  那么长度限制以这里的限制为准，但是会显示右下角的字数</span></span><br><span class="line">    <span class="comment">//  inputFormatters: [LengthLimitingTextInputFormatter(15)],</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//黑名单校验，只允许输入给定规则以外的文本</span></span><br><span class="line">    <span class="comment">//  inputFormatters: [BlacklistingTextInputFormatter(RegExp("[a-z]"))],//不允许输入a-z小写字母</span></span><br><span class="line">    <span class="comment">//  inputFormatters: [BlacklistingTextInputFormatter(RegExp("[a-z]"),replacementString: "-")],//不允许输入a-z小写字母  如果输入了 用“-”替代</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//弹出的键盘的类型</span></span><br><span class="line">    keyboardType: TextInputType.text, <span class="comment">// 文本</span></span><br><span class="line">    <span class="comment">//  keyboardType: TextInputType.number,//数字  数字键盘  + 部分常用数学符合</span></span><br><span class="line">    <span class="comment">//  keyboardType: TextInputType.phone,//手机号  数字键盘  + 部分手机号常用符合"*", and "#".</span></span><br><span class="line">    <span class="comment">//  keyboardType: TextInputType.datetime,// 时间  数字键盘  + 部分时间常用符合":", and "-".</span></span><br><span class="line">    <span class="comment">//  keyboardType: TextInputType.emailAddress,//邮件  英文键盘 + 邮件符合  "@" and "."</span></span><br><span class="line">    <span class="comment">//  keyboardType: TextInputType.multiline,// 多行输入   控制enter键的功能为换行了</span></span><br><span class="line">    <span class="comment">//  keyboardType: TextInputType.url,//url格式 英文键盘+url符合 "/" and "."</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//设置键盘上enter键的显示内容</span></span><br><span class="line">    textInputAction: TextInputAction.search, <span class="comment">//搜索</span></span><br><span class="line">    <span class="comment">//  textInputAction: TextInputAction.none,//默认回车符号</span></span><br><span class="line">    <span class="comment">//  textInputAction: TextInputAction.done,//安卓显示 回车符号</span></span><br><span class="line">    <span class="comment">//  textInputAction: TextInputAction.go,//开始</span></span><br><span class="line">    <span class="comment">//  textInputAction: TextInputAction.next,//下一步</span></span><br><span class="line">    <span class="comment">//  textInputAction: TextInputAction.send,//发送</span></span><br><span class="line">    <span class="comment">//  textInputAction: TextInputAction.continueAction,//android  不支持</span></span><br><span class="line">    <span class="comment">//  textInputAction: TextInputAction.emergencyCall,//android  不支持</span></span><br><span class="line">    <span class="comment">//  textInputAction: TextInputAction.newline,//安卓显示 回车符号</span></span><br><span class="line">    <span class="comment">//  textInputAction: TextInputAction.route,//android  不支持</span></span><br><span class="line">    <span class="comment">//  textInputAction: TextInputAction.join,//android  不支持</span></span><br><span class="line">    <span class="comment">//  textInputAction: TextInputAction.previous,//安卓显示 回车符号</span></span><br><span class="line">    <span class="comment">//  textInputAction: TextInputAction.unspecified,//安卓显示 回车符号</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 控制键盘大小写切换的   试过了 但是好像没有效果？？</span></span><br><span class="line">    <span class="comment">//  textCapitalization: TextCapitalization.characters,  // 输入时键盘的英文都是大写</span></span><br><span class="line">    <span class="comment">//  textCapitalization: TextCapitalization.none,  //  键盘英文默认显示小写</span></span><br><span class="line">    <span class="comment">//  textCapitalization: TextCapitalization.sentences, // 在输入每个句子的第一个字母时，键盘大写形式，输入后续字母时键盘小写形式</span></span><br><span class="line">    <span class="comment">//  textCapitalization: TextCapitalization.words,// 在输入每个单词的第一个字母时，键盘大写形式，输入其他字母时键盘小写形式</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">//光标颜色</span></span><br><span class="line">    cursorColor: Colors.red,</span><br><span class="line">    <span class="comment">//光标圆角</span></span><br><span class="line">    cursorRadius: Radius.circular(<span class="number">5</span>),</span><br><span class="line">    <span class="comment">//光标宽度</span></span><br><span class="line">    cursorWidth: <span class="number">10</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">//输入框的边框样式</span></span><br><span class="line">    decoration: InputDecoration(</span><br><span class="line">      border: OutlineInputBorder(</span><br><span class="line">          borderRadius: BorderRadius.circular(<span class="number">10.0</span>),</span><br><span class="line">          borderSide: BorderSide(color: Colors.transparent)),</span><br><span class="line">      <span class="comment">//输入内容距离上下左右的距离 ，可通过这个属性来控制 TextField的高度</span></span><br><span class="line">      contentPadding: EdgeInsets.all(<span class="number">10.0</span>),</span><br><span class="line">      fillColor: Colors.white, filled: <span class="keyword">true</span>,</span><br><span class="line">    <span class="comment">//  abelText: 'Hello',</span></span><br><span class="line">      <span class="comment">// 以下属性可用来去除TextField的边框</span></span><br><span class="line">      disabledBorder: InputBorder.none,</span><br><span class="line">      enabledBorder: InputBorder.none,</span><br><span class="line">      focusedBorder: InputBorder.none,</span><br><span class="line">    ),</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 键盘外观  仅ios有效</span></span><br><span class="line">    <span class="comment">//  keyboardAppearance: Brightness.light,</span></span><br><span class="line">    keyboardAppearance: Brightness.dark,</span><br><span class="line"></span><br><span class="line">    <span class="comment">//？？？暂未发现什么用途</span></span><br><span class="line">    scrollPadding: EdgeInsets.all(<span class="number">50</span>),</span><br><span class="line"></span><br><span class="line">    <span class="comment">//？？？暂未发现什么用途</span></span><br><span class="line">    <span class="comment">//   dragStartBehavior: DragStartBehavior.start,</span></span><br><span class="line">    dragStartBehavior: DragStartBehavior.down,</span><br><span class="line"></span><br><span class="line">    <span class="comment">//长按输入的文字时，true显示系统的粘贴板  false不显示</span></span><br><span class="line">    enableInteractiveSelection: <span class="keyword">true</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">//自定义数字显示   指定maxLength后 右下角会出现字数，flutter有默认实现  可以通过这个自定义</span></span><br><span class="line">    buildCounter: buildcount,</span><br><span class="line"></span><br><span class="line">    <span class="comment">//点击一次输入就调用</span></span><br><span class="line">    onTap: () &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">'ontap'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    onChanged: (text) &#123;</span><br><span class="line">      <span class="comment">//输入内容变化后，调用</span></span><br><span class="line">      <span class="built_in">print</span>(<span class="string">'change <span class="subst">$text</span>'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    onSubmitted: (text) &#123;</span><br><span class="line">      <span class="comment">//键盘按回车后调用</span></span><br><span class="line">      <span class="built_in">print</span>(<span class="string">'submit <span class="subst">$text</span>'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="comment">//按回车时调用 先调用此方法  然后调用onSubmitted方法</span></span><br><span class="line">    onEditingComplete: () &#123;</span><br><span class="line">      <span class="built_in">print</span>(<span class="string">'onEditingComplete'</span>);</span><br><span class="line">    &#125;,</span><br><span class="line">),</span><br></pre></td></tr></table></figure><h5 id="buildCounter"><a href="#buildCounter" class="headerlink" title="buildCounter"></a>buildCounter</h5><p>当设置了maxLength后，右下角会出现如图红圈内的字数。buildCounter属性，可以自定义右下角的字数显示。</p><p><img src="https://s2.ax1x.com/2019/09/11/nwiDYT.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Widget buildcount(</span><br><span class="line">    <span class="comment">/// The build context for the TextField</span></span><br><span class="line">    BuildContext context, &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 当前字数长度</span></span><br><span class="line">    <span class="meta">@required</span> <span class="built_in">int</span> currentLength,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 最大字数长度</span></span><br><span class="line">    <span class="meta">@required</span> <span class="built_in">int</span> maxLength,</span><br><span class="line"></span><br><span class="line">    <span class="comment">/// 当前输入框是否有焦点</span></span><br><span class="line">    <span class="meta">@required</span> <span class="built_in">bool</span> isFocused,</span><br><span class="line">  &#125;) &#123;</span><br><span class="line">  <span class="comment">//自定义的显示格式</span></span><br><span class="line">    <span class="keyword">return</span> Text(<span class="string">"<span class="subst">$currentLength</span> <span class="subst">$maxLength</span>"</span>);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="TextEditingController和FocusNode"><a href="#TextEditingController和FocusNode" class="headerlink" title="TextEditingController和FocusNode"></a>TextEditingController和FocusNode</h5><ul><li>TextEditingController，可以看做TextField的一个引用，通过controller可以获取输入框的文本、设置光标位置、清空输入框等操作。</li><li>FocusNode，管理TextField的焦点。</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_FlutterTextFieldPageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">FlutterTextFieldPage</span>&gt; </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> controller = TextEditingController();</span><br><span class="line">    FocusNode _focusNode = <span class="keyword">new</span> FocusNode();</span><br><span class="line">  </span><br><span class="line">    <span class="comment">//焦点变化时回调</span></span><br><span class="line">    <span class="keyword">void</span> focusListener() &#123;</span><br><span class="line">      <span class="built_in">print</span>(_focusNode.hasFocus);<span class="comment">//当前的输入框的焦点</span></span><br><span class="line">    <span class="comment">// _focusNode.unfocus();//释放焦点</span></span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="comment">//输入框内容变化时回调</span></span><br><span class="line">    <span class="keyword">void</span> controllerListener() &#123;</span><br><span class="line">      <span class="built_in">print</span>(controller.text);<span class="comment">//获取输入框内的值</span></span><br><span class="line">      <span class="comment">// controller.text = "aaa";//设置输入框内的值</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// if(controller.text.length&gt;5) &#123;</span></span><br><span class="line">      <span class="comment">//   controller.clear(); //清空输入框内的内容</span></span><br><span class="line">      <span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">// print(controller.selection);//获取当前选中的文字，如果没有选中那么显示当前光标的位置  TextSelection(baseOffset: 4, extentOffset: 4, affinity: TextAffinity.downstream, isDirectional: false)</span></span><br><span class="line">      </span><br><span class="line">      <span class="comment">//设置文字选中，baseOffset起始index  extentOffset结束index(不含）如果二者相同则是设置光标位置  如果二者不同则是选中它们之间的文字</span></span><br><span class="line">      <span class="comment">//  controller.selection = TextSelection(baseOffset: 2, extentOffset: 4, affinity: TextAffinity.downstream, isDirectional: false);</span></span><br><span class="line">      controller.selection = TextSelection(baseOffset: <span class="number">1</span>, extentOffset: <span class="number">1</span>, affinity: TextAffinity.upstream, isDirectional: <span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@override</span></span><br><span class="line">    <span class="keyword">void</span> initState() &#123;</span><br><span class="line">      <span class="comment">// <span class="doctag">TODO:</span> implement initState</span></span><br><span class="line">      <span class="keyword">super</span>.initState();</span><br><span class="line">      <span class="comment">//添加焦点版本的监听</span></span><br><span class="line">      _focusNode.addListener(focusListener);</span><br><span class="line">      <span class="comment">//添加输入内容改变时的监听</span></span><br><span class="line">      controller.addListener(controllerListener);</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@override</span></span><br><span class="line">    <span class="keyword">void</span> dispose() &#123;</span><br><span class="line">      <span class="comment">//disponse时需要处理</span></span><br><span class="line">      controller.removeListener(controllerListener);</span><br><span class="line">      _focusNode.removeListener(focusListener);</span><br><span class="line">      controller.dispose();</span><br><span class="line">      _focusNode.dispose();</span><br><span class="line">      <span class="keyword">super</span>.dispose();</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line">    <span class="meta">@override</span></span><br><span class="line">    Widget build(BuildContext context) &#123;</span><br><span class="line">      <span class="keyword">return</span> Scaffold(</span><br><span class="line">        appBar: AppBar(</span><br><span class="line">          title: Text(widget.title),</span><br><span class="line">        ),</span><br><span class="line">        body: SingleChildScrollView(</span><br><span class="line">          child: Column(</span><br><span class="line">            mainAxisAlignment: MainAxisAlignment.center,</span><br><span class="line">            crossAxisAlignment: CrossAxisAlignment.start,</span><br><span class="line">            children: &lt;Widget&gt;[</span><br><span class="line">              Divider(</span><br><span class="line">                height: <span class="number">20</span>,</span><br><span class="line">                color: Colors.grey,</span><br><span class="line">              ),</span><br><span class="line">              TextField(</span><br><span class="line">                controller: controller,  <span class="comment">//设置controller</span></span><br><span class="line">                focusNode: _focusNode, <span class="comment">//设置焦点管理</span></span><br><span class="line">              )</span><br><span class="line">            ]</span><br><span class="line">          )</span><br><span class="line">        )</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>​</p><h5 id="decoration-输入框的边框样式，InputDecoration类型"><a href="#decoration-输入框的边框样式，InputDecoration类型" class="headerlink" title="decoration 输入框的边框样式，InputDecoration类型"></a>decoration 输入框的边框样式，InputDecoration类型</h5><p>属性总览如下：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    icon: Icon(Icons.phone), <span class="comment">//显示在输入框前面的图标，在文字和下划线前面</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//输入框光标前面的图标和文字</span></span><br><span class="line">    prefixIcon: Icon(Icons.phone),<span class="comment">//显示在输入框内，光标前面的图标，注意icon是在输入框外</span></span><br><span class="line">    prefixText: <span class="string">"prefixText"</span>,<span class="comment">//显示在输入框内，光标前面的文字   获得焦点后显示</span></span><br><span class="line">    prefixStyle: TextStyle(color:Colors.yellow),</span><br><span class="line">    prefix: Image.asset(<span class="string">"images/img04.jpg"</span>,width: <span class="number">20</span>, height: <span class="number">20</span>,),<span class="comment">//显示在输入框内，光标前面的指定图片或其他Widget   获取焦点后显示。注意prefix不能与prefixIcon prefixText同时指定</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//输入框光标后面的图标和文字</span></span><br><span class="line">    suffixIcon: Icon(Icons.phone), <span class="comment">//显示在输入框内，光标文字后面，输入框最后面的图标</span></span><br><span class="line">    suffixText: <span class="string">"suffixText"</span>, <span class="comment">//显示在输入框内，输入框最后面的文字    但是在suffixIcon之前。 注意suffixText不能与suffix共存</span></span><br><span class="line">    suffixStyle: TextStyle(color: Colors.yellow),</span><br><span class="line">    suffix: Image.asset(<span class="string">"images/img04.jpg"</span>,width: <span class="number">20</span>,height: <span class="number">20</span>,),  <span class="comment">//显示在输入框内，最后面的指定图片或其他Widget</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 显示在输入的下划线外右下角的文字提示</span></span><br><span class="line">    counterText:<span class="string">"counterText"</span>, <span class="comment">//显示在输入的下划线外右下角的文字提示,会覆盖maxLength的右下角显示的字数限制。</span></span><br><span class="line">    counterStyle: TextStyle(color: Colors.pink),</span><br><span class="line">    counter: Icon(Icons.send),<span class="comment">//显示在输入的下划线外右下角的提示,可以是任何Widget ，counterText与counter只能存在一个</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 输入框的文字提示</span></span><br><span class="line">    labelText:<span class="string">"labelText"</span>, <span class="comment">//显示在输入框内的提示语，一旦输入框获取焦点就字体缩小并上移到输入上方，作为提示使用</span></span><br><span class="line">    labelStyle: TextStyle(color: Colors.green),</span><br><span class="line">    helperText: <span class="string">"helperText"</span>, <span class="comment">//显示在输入框下划线下面的提示语，提示使用</span></span><br><span class="line">    helperStyle: TextStyle(color: Colors.blue),</span><br><span class="line">    hasFloatingPlaceholder:<span class="keyword">true</span>, <span class="comment">//默认为true，表示labelText是否上浮，true上浮，false表示获取焦点后labelText消失</span></span><br><span class="line">    hintText: <span class="string">"hintText"</span>, <span class="comment">//显示在输入框内的提示信息，当输入框为空时显示，一旦开始输入内容就消失</span></span><br><span class="line">    hintStyle: TextStyle(color: Colors.grey),</span><br><span class="line">    hintMaxLines: <span class="number">2</span>, <span class="comment">//提示语的做多显示行数，超过行数显示...</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">// 错误提示相关</span></span><br><span class="line">    errorText:<span class="string">"errorText"</span>, <span class="comment">//在输入框下方的提示语，通常用于错误提示，比如密码错误 用户名错误等  同时输入框的下划线修改为了红色</span></span><br><span class="line">    errorStyle: TextStyle(color: Colors.orange),</span><br><span class="line">    errorMaxLines: <span class="number">1</span>, <span class="comment">//做多显示的行数  ，超过行数显示...</span></span><br><span class="line">    errorBorder: UnderlineInputBorder(borderSide: BorderSide( width: <span class="number">5</span>,color: Colors.orange,style: BorderStyle.solid)), <span class="comment">//失去焦点时，error时下划线显示的边框样式，不设置则使用默认的的下划线</span></span><br><span class="line">    focusedErrorBorder: UnderlineInputBorder(borderSide: BorderSide( width: <span class="number">5</span>, color: Colors.green, style: BorderStyle .solid)), <span class="comment">//获取焦点时，error时下划线显示的边框样式，不设置则使用默认的的下划线</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//输入框内文字 密集显示</span></span><br><span class="line">    isDense: <span class="keyword">true</span>, <span class="comment">//改变输入框是否为密集型，默认为false，修改为true时，图标及间距会变小  行间距减小</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//内部padding</span></span><br><span class="line">    contentPadding: EdgeInsets.all(<span class="number">20</span>), <span class="comment">//输入框的padding  对内部的文字有效</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//背景色</span></span><br><span class="line">    fillColor: Colors.red, <span class="comment">//输入框内部的填充颜色  需filled=true</span></span><br><span class="line">    filled: <span class="keyword">true</span>,</span><br><span class="line"></span><br><span class="line">  <span class="comment">//启用和禁用输入框时的边框样式</span></span><br><span class="line">    disabledBorder: UnderlineInputBorder(borderSide: BorderSide(width: <span class="number">5</span>,color: Colors.blue,style: BorderStyle.solid)), <span class="comment">//输入框禁用时，下划线的样式.如果设置了errorText，则此属性无效</span></span><br><span class="line">    enabledBorder: UnderlineInputBorder(borderSide: BorderSide(width: <span class="number">5</span>,color: Colors.orange,style: BorderStyle.solid)), <span class="comment">//输入框启用时，下划线的样式</span></span><br><span class="line">    enabled: <span class="keyword">false</span>,<span class="comment">//是否启用输入框</span></span><br><span class="line">    focusedBorder: UnderlineInputBorder( borderSide: BorderSide(width: <span class="number">5</span>,color: Colors.blue,style: BorderStyle.solid)), <span class="comment">//获取焦点时，下划线的样式</span></span><br><span class="line">    border: OutlineInputBorder(borderSide: BorderSide(width: <span class="number">5</span>,color: Colors.yellow,style: BorderStyle.solid)), <span class="comment">//级别最低的border，没有设置其他border时显示的border</span></span><br><span class="line">    <span class="comment">// border: InputBorder.none, //隐藏输入框的线</span></span><br><span class="line"></span><br><span class="line">    ),</span><br><span class="line">  ),</span><br></pre></td></tr></table></figure><p>分解如下：</p><ul><li>icon 显示在输入框前面的图标，在文字和下划线前面。注意icon是在输入框外面<br><img src="https://s2.ax1x.com/2019/09/11/nwiio6.jpg" alt></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    icon: Icon(Icons.phone), <span class="comment">//显示在输入框前面的图标，在文字和下划线前面</span></span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>prefix 显示在输入框内，光标前面的指定图片或其他Widge。注意实在输入内部<br><img src="https://s2.ax1x.com/2019/09/11/nwikFK.jpg" alt></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    prefix: Image.asset(<span class="string">"images/img04.jpg"</span>,width: <span class="number">40</span>,height: <span class="number">40</span>, ) <span class="comment">//显示在输入框内，光标前面的指定图片或其他Widget   获取焦点后显示。注意prefix不能与prefixIcon prefixText同时指定</span></span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>prefixIcon 显示在输入框内，光标前面的图标，注意icon是在输入框外</li><li>prefixText 显示在输入框内，光标前面的文本<br><img src="https://s2.ax1x.com/2019/09/11/nwiAJO.jpg" alt></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    prefixIcon: Icon(Icons.phone),<span class="comment">//显示在输入框内，光标前面的图标，注意icon是在输入框外</span></span><br><span class="line">    prefixText: <span class="string">"prefixText"</span>,<span class="comment">//显示在输入框内，光标前面的文字   获得焦点后显示</span></span><br><span class="line">    prefixStyle: TextStyle(color:Colors.red),<span class="comment">//文本样式</span></span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>suffixIcon 显示在输入框内，光标文字后面，输入框最后面的图标</li><li>suffixText 显示在输入框内，光标文字后面，输入框最后面的文本</li></ul><p><img src="https://s2.ax1x.com/2019/09/11/nwiPdx.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    suffixIcon: Icon(Icons.phone), <span class="comment">//显示在输入框内，光标文字后面，输入框最后面的图标</span></span><br><span class="line">    suffixText: <span class="string">"suffixText"</span>, <span class="comment">//显示在输入框内，输入框最后面的文字    但是在suffixIcon之前。 注意suffixText不能与suffix共存</span></span><br><span class="line">    suffixStyle: TextStyle(color: Colors.red),<span class="comment">//文本样式</span></span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>suffix 显示在输入框内，最后面的指定图片或其他Widget。注意suffixText不能与suffix共存</li></ul><p><img src="https://s2.ax1x.com/2019/09/11/nwiCe1.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    suffix: Image.asset(<span class="string">"images/img04.jpg"</span>,width: <span class="number">40</span>,height: <span class="number">40</span>,)  <span class="comment">//显示在输入框内，最后面的指定图片或其他Widget </span></span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>counterText显示在输入的下划线外右下角的文字提示,会覆盖maxLength的右下角显示的字数限制。counterText与counter只能存在一个</li></ul><p><img src="https://s2.ax1x.com/2019/09/11/nwiEWD.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  maxLength: <span class="number">33</span>,</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    counterText:<span class="string">"counterText"</span>, <span class="comment">//显示在输入的下划线外右下角的文字提示,会覆盖maxLength的右下角显示的字数限制。</span></span><br><span class="line">    counterStyle: TextStyle(color: Colors.pink),</span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>counter 显示在输入的下划线外右下角的提示,可以是任何Widget，counterText与counter只能存在一个<br><img src="https://s2.ax1x.com/2019/09/11/nwiZSe.jpg" alt></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  maxLength: <span class="number">33</span>,</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    counter: Icon(Icons.send),<span class="comment">//显示在输入的下划线外右下角的提示,可以是任何Widget ，counterText与counter只能存在一个</span></span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>labelText 显示在输入框内的提示语，一旦输入框获取焦点就字体缩小并上移到输入上方，作为提示使用</li><li>hasFloatingPlaceholder 默认为true，表示labelText是否上浮，true上浮，false表示获取焦点后labelText消失。</li></ul><p>hasFloatingPlaceholder 为true 输入框无焦点时：</p><p><img src="https://s2.ax1x.com/2019/09/11/nwieQH.jpg" alt></p><p>hasFloatingPlaceholder 为true 有焦点时：</p><p><img src="https://s2.ax1x.com/2019/09/11/nwimyd.jpg" alt></p><p>hasFloatingPlaceholder 为false 输入框无焦点时：</p><p><img src="https://s2.ax1x.com/2019/09/11/nwinOA.jpg" alt></p><p>hasFloatingPlaceholder 为false有焦点时：labelText消失</p><p><img src="https://s2.ax1x.com/2019/09/11/nwiKeI.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    icon: Icon(Icons.phone),</span><br><span class="line">    labelText:<span class="string">"labelText"</span>, <span class="comment">//显示在输入框内的提示语，一旦输入框获取焦点就字体缩小并上移到输入上方，作为提示使用</span></span><br><span class="line">    labelStyle: TextStyle(color: Colors.green),</span><br><span class="line">    hasFloatingPlaceholder: <span class="keyword">false</span>, <span class="comment">//默认为true，表示labelText是否上浮，true上浮，false表示获取焦点后labelText消失</span></span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>helperText 显示在输入框下划线下面的提示语，提示使用<br><img src="https://s2.ax1x.com/2019/09/11/nwiMwt.jpg" alt></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    icon: Icon(Icons.phone),</span><br><span class="line">    helperText: <span class="string">"helperText"</span>, <span class="comment">//显示在输入框下划线下面的提示语，提示使用</span></span><br><span class="line">    helperStyle: TextStyle(color: Colors.blue),</span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>hintText 显示在输入框内的提示信息，当输入框为空时显示，一旦开始输入内容就消失</li></ul><p>输入框内容为空时：<br><img src="https://s2.ax1x.com/2019/09/11/nwiQTP.jpg" alt></p><p>输入框内容不为空时：hintText不显示</p><p><img src="https://s2.ax1x.com/2019/09/11/nwi1Ff.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    icon: Icon(Icons.phone),</span><br><span class="line">    hintText: <span class="string">"hintText"</span>, <span class="comment">//显示在输入框内的提示信息，当输入框为空时显示，一旦开始输入内容就消失</span></span><br><span class="line">    hintStyle: TextStyle(color: Colors.grey),</span><br><span class="line">    hintMaxLines: <span class="number">2</span>, <span class="comment">//提示语的最多显示行数，超过行数显示...</span></span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>errorText 在输入框下方的提示语，通常用于错误提示，比如密码错误<br>用户名错误等 同时输入框的下划线修改为了红色</li><li>errorMaxLines 做多显示的行数 ，超过行数显示…</li><li>errorBorder 失去焦点时，error时下划线显示的边框样式，不设置则使用默认的的下划线</li><li>focusedErrorBorder 获得焦点时，error时下划线显示的边框样式，不设置则使用默认的的下划线</li></ul><p>无焦点时 使用errorBorder</p><p><img src="https://s2.ax1x.com/2019/09/11/nwi3Y8.jpg" alt></p><p>有焦点时 使用focusedErrorBorder</p><p><img src="https://s2.ax1x.com/2019/09/11/nwiJSg.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    icon: Icon(Icons.phone),</span><br><span class="line">    errorText: <span class="string">"errorText"</span>, <span class="comment">//在输入框下方的提示语，通常用于错误提示，比如密码错误 用户名错误等  同时输入框的下划线修改为了红色</span></span><br><span class="line">    errorStyle: TextStyle(color: Colors.orange),</span><br><span class="line">    errorMaxLines: <span class="number">1</span>, <span class="comment">//做多显示的行数  ，超过行数显示...</span></span><br><span class="line">    errorBorder: UnderlineInputBorder(borderSide: BorderSide(width: <span class="number">5</span>,color: Colors.orange,style: BorderStyle.solid)), <span class="comment">//失去焦点时，error时下划线显示的边框样式，不设置则使用默认的的下划线</span></span><br><span class="line">    focusedErrorBorder: UnderlineInputBorder( borderSide: BorderSide(width: <span class="number">5</span>, color: Colors.green,style: BorderStyle.solid)), <span class="comment">//获得焦点时，error时下划线显示的边框样式，不设置则使用默认的的下划线</span></span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>contentPadding 输入框的padding 对内部的文字有效</li><li>isDense<br>改变输入框是否为密集型，默认为false，修改为true时，图标及间距会变小<br>行间距减小</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    icon: Icon(Icons.phone),</span><br><span class="line">    contentPadding: EdgeInsets.all(<span class="number">20</span>), <span class="comment">//输入框的padding  对内部的文字有效</span></span><br><span class="line">    isDense: <span class="keyword">true</span>, <span class="comment">//改变输入框是否为密集型，默认为false，修改为true时，图标及间距会变小  行间距减小</span></span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>fillColor 输入框内部的填充颜色 需filled=true</li><li>filled 是否填充</li></ul><p><img src="https://s2.ax1x.com/2019/09/11/nwiYlQ.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  maxLength: <span class="number">311</span>,</span><br><span class="line">  maxLines: <span class="number">3</span>,</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    icon: Icon(Icons.phone),</span><br><span class="line">    fillColor: Colors.red, <span class="comment">//输入框内部的填充颜色  需filled=true</span></span><br><span class="line">    filled: <span class="keyword">true</span>,</span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>enabled 是否启用输入框 true启用 false禁用</li><li>disabledBorder 禁用时的border</li><li>enabledBorder 启用时的border</li><li>focusedBorder 获得焦点后的border</li></ul><p>禁用时的border</p><p><img src="https://s2.ax1x.com/2019/09/11/nwityj.jpg" alt></p><p>启用时的border</p><p><img src="https://s2.ax1x.com/2019/09/11/nwiNOs.jpg" alt></p><p>获得焦点后的border</p><p><img src="https://s2.ax1x.com/2019/09/11/nwiamn.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    icon: Icon(Icons.phone),</span><br><span class="line">    <span class="comment">// errorText: "errorText",</span></span><br><span class="line">    disabledBorder: UnderlineInputBorder( borderSide: BorderSide(width: <span class="number">5</span>,color: Colors.blue,style: BorderStyle.solid)), <span class="comment">//输入框禁用时，下划线的样式.如果设置了errorText，则此属性无效</span></span><br><span class="line">    enabledBorder: UnderlineInputBorder(borderSide: BorderSide(width: <span class="number">5</span>, color: Colors.orange,style: BorderStyle.solid)), <span class="comment">//输入框启用时，下划线的样式</span></span><br><span class="line">    focusedBorder: UnderlineInputBorder( borderSide: BorderSide(width: <span class="number">5</span>,color: Colors.red,style:BorderStyle.solid)), <span class="comment">//获取焦点时，下划线的样式</span></span><br><span class="line">    enabled: <span class="keyword">true</span>,</span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>border 级别最低的border，没有设置其他border时显示的border</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    icon: Icon(Icons.phone),</span><br><span class="line">    border: OutlineInputBorder( borderSide: BorderSide(width: <span class="number">5</span>,color: Colors.yellow, style: BorderStyle.solid)), <span class="comment">//级别最低的border，没有设置其他border时显示的border</span></span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>border 边框，取值分为四面的边框OutlineInputBorder和下划线框UnderlineInputBorder</li></ul><p>如一个focusedBorder设置OutlineInputBorder</p><p><img src="https://s2.ax1x.com/2019/09/11/nwidwq.jpg" alt></p><p>​<br>如一个enabledBorder设置UnderlineInputBorder</p><p><img src="https://s2.ax1x.com/2019/09/11/nwiwT0.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    prefixIcon: Icon(Icons.phone),</span><br><span class="line">    focusedBorder: OutlineInputBorder(borderSide: BorderSide(width: <span class="number">5</span>, color: Colors.red, style: BorderStyle.solid), borderRadius: BorderRadius.circular(<span class="number">30</span>),), <span class="comment">//获取焦点时，下划线的样式</span></span><br><span class="line">    enabledBorder: UnderlineInputBorder(borderSide: BorderSide(width: <span class="number">5</span>,color: Colors.orange,style: BorderStyle .solid)), <span class="comment">//输入框启用时，下划线的样式.但是如果获取了焦点就要编程focusedBOrder了</span></span><br><span class="line">    enabled: <span class="keyword">true</span>,</span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><ul><li>border 边框，隐藏边框 取值InputBorder.none</li></ul><p><img src="https://s2.ax1x.com/2019/09/11/nwiBkV.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">TextField(</span><br><span class="line">  decoration: InputDecoration(</span><br><span class="line">    prefixIcon: Icon(Icons.phone),</span><br><span class="line">    border: InputBorder.none, <span class="comment">//隐藏输入框的线</span></span><br><span class="line">  ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> Dart </tag>
            
            <tag> TextField </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter：Icon</title>
      <link href="/blog/2019/09/11/Flutter%EF%BC%9AIcon/"/>
      <url>/blog/2019/09/11/Flutter%EF%BC%9AIcon/</url>
      
        <content type="html"><![CDATA[<!-- build time:Tue Jan 07 2020 15:15:23 GMT+0800 (GMT+08:00) --><h5 id="MaterialDesign的图标库"><a href="#MaterialDesign的图标库" class="headerlink" title="MaterialDesign的图标库"></a>MaterialDesign的图标库</h5><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fmaterial.io%2Ftools%2Ficons%2F%3Fstyle%3Dbaseline" target="_blank" rel="noopener">https://material.io/tools/icons/?style=baseline</a></p><h5 id="阿里巴巴的图标库"><a href="#阿里巴巴的图标库" class="headerlink" title="阿里巴巴的图标库"></a>阿里巴巴的图标库</h5><p><a href="https://links.jianshu.com/go?to=https%3A%2F%2Fwww.iconfont.cn%2F" target="_blank" rel="noopener">https://www.iconfont.cn/</a></p><h5 id="IconData-创建一个具体的字体图标"><a href="#IconData-创建一个具体的字体图标" class="headerlink" title="IconData 创建一个具体的字体图标"></a>IconData 创建一个具体的字体图标</h5><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> IconData(</span><br><span class="line">    <span class="keyword">this</span>.codePoint, <span class="comment">//该图标在字体中的编码  </span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">this</span>.fontFamily,<span class="comment">//所属字体</span></span><br><span class="line">        <span class="keyword">this</span>.fontPackage,<span class="comment">//字体所属的包</span></span><br><span class="line">        <span class="keyword">this</span>.matchTextDirection = <span class="keyword">false</span>,<span class="comment">//是否启用镜像，向左还是向右</span></span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h5 id="Icons-定义了一系列IconData的枚举值，包含了material-design的所有内置图标"><a href="#Icons-定义了一系列IconData的枚举值，包含了material-design的所有内置图标" class="headerlink" title="Icons 定义了一系列IconData的枚举值，包含了material design的所有内置图标"></a>Icons 定义了一系列IconData的枚举值，包含了material design的所有内置图标</h5><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Icons</span> </span>&#123;</span><br><span class="line">    Icons._();</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> IconData threesixty = IconData(<span class="number">0xe577</span>, fontFamily: <span class="string">'MaterialIcons'</span>);</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">const</span> IconData threed_rotation = IconData(<span class="number">0xe84d</span>, fontFamily: <span class="string">'MaterialIcons'</span>);</span><br><span class="line">    ......</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Icon-字体图标"><a href="#Icon-字体图标" class="headerlink" title="Icon 字体图标"></a>Icon 字体图标</h5><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Icon(</span><br><span class="line">    <span class="keyword">this</span>.icon, <span class="comment">//IconData类型，flutter内置了一系列的枚举值，使用Icons.xxx，或创建IconData</span></span><br><span class="line">    &#123;</span><br><span class="line">        Key key,</span><br><span class="line">        <span class="keyword">this</span>.size,<span class="comment">//图标显示的大小，固定是正方形，默认24,</span></span><br><span class="line">        <span class="keyword">this</span>.color,<span class="comment">//图标颜色，如果不设置，默认是黑色图标</span></span><br><span class="line">        <span class="keyword">this</span>.semanticLabel,<span class="comment">//?帮助盲人或者视力有障碍的用户提供语言辅助描述,还未用到过</span></span><br><span class="line">        <span class="keyword">this</span>.textDirection,<span class="comment">//图标显示的方向，是向左还是向右，IconData的matchTextDirection为true时有效，matchTextDirection默认值为false，因此只设置textDirection无效</span></span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>示例：</p><p><img src="https://s2.ax1x.com/2019/09/11/ndba6O.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Icon(Icons.accessible,),<span class="comment">//默认是黑色</span></span><br><span class="line">Icon(Icons.accessible,color: Colors.green,),<span class="comment">//设置图标为绿色</span></span><br><span class="line">Icon(Icons.accessible,color: Colors.red,),<span class="comment">//设置图标为红色</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/09/11/ndbYfx.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Icon(Icons.accessible,color: Colors.red,size: <span class="number">10</span>,),<span class="comment">//设置图标大小</span></span><br><span class="line">Icon(Icons.accessible,color: Colors.red,),<span class="comment">//size默认24</span></span><br><span class="line">Icon(Icons.accessible,color: Colors.red,size: <span class="number">30</span>,),<span class="comment">//设置图标大小</span></span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/09/11/ndbJt1.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Icon(IconData(<span class="number">0xe914</span>, fontFamily: <span class="string">'MaterialIcons'</span>,matchTextDirection: <span class="keyword">true</span>),color: Colors.red,size: <span class="number">30</span>,textDirection: TextDirection.ltr,),</span><br><span class="line">Icon(IconData(<span class="number">0xe914</span>, fontFamily: <span class="string">'MaterialIcons'</span>,matchTextDirection: <span class="keyword">true</span>),color: Colors.red,size: <span class="number">30</span>,textDirection: TextDirection.rtl,),</span><br></pre></td></tr></table></figure><h2 id="ImageIcon"><a href="#ImageIcon" class="headerlink" title="ImageIcon"></a>ImageIcon</h2><p>将png的图片 使用图标形式显示，可以更改其显示颜色</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> ImageIcon(</span><br><span class="line">    <span class="keyword">this</span>.image, <span class="comment">//ImageProvider类型  用于加载具体的图片</span></span><br><span class="line">    &#123;</span><br><span class="line">        Key key,</span><br><span class="line">        <span class="keyword">this</span>.size,<span class="comment">//大小</span></span><br><span class="line">        <span class="keyword">this</span>.color,<span class="comment">//想要显示的颜色</span></span><br><span class="line">        <span class="keyword">this</span>.semanticLabel,</span><br><span class="line">    &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p>ImageProvider是一个抽象类，其子类包括</p><ul><li>AssetImage 资源图片</li><li>FileImage 文件图片</li><li>NetworkImage 网络图片</li><li>MemoryImage 内存图片<br>如：</li></ul><p><img src="https://s2.ax1x.com/2019/09/11/ndbGkR.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ImageIcon(AssetImage(<span class="string">"images/img06.png"</span>),size: <span class="number">40</span>,),<span class="comment">//默认显示原色</span></span><br><span class="line">ImageIcon(AssetImage(<span class="string">"images/img06.png"</span>),color: Colors.red,size: <span class="number">40</span>,),<span class="comment">//红色</span></span><br><span class="line">ImageIcon(AssetImage(<span class="string">"images/img06.png"</span>),color: Colors.green,size: <span class="number">40</span>,),<span class="comment">//绿色</span></span><br></pre></td></tr></table></figure><h5 id="IconButton-图标按钮"><a href="#IconButton-图标按钮" class="headerlink" title="IconButton 图标按钮"></a>IconButton 图标按钮</h5><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> IconButton(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="keyword">this</span>.iconSize = <span class="number">24.0</span>,</span><br><span class="line">    <span class="keyword">this</span>.padding = <span class="keyword">const</span> EdgeInsets.all(<span class="number">8.0</span>),</span><br><span class="line">    <span class="keyword">this</span>.alignment = Alignment.center,</span><br><span class="line">    <span class="meta">@required</span> <span class="keyword">this</span>.icon,</span><br><span class="line">    <span class="keyword">this</span>.color,</span><br><span class="line">    <span class="keyword">this</span>.highlightColor,<span class="comment">//长按后不松手时显示的颜色</span></span><br><span class="line">    <span class="keyword">this</span>.splashColor,<span class="comment">//点击一下时闪烁的颜色</span></span><br><span class="line">    <span class="keyword">this</span>.disabledColor,<span class="comment">//不可用时的颜色</span></span><br><span class="line">    <span class="meta">@required</span> <span class="keyword">this</span>.onPressed,<span class="comment">//点击后触发的方法</span></span><br><span class="line">    <span class="keyword">this</span>.tooltip<span class="comment">//长按后的提示语</span></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>示例：</p><p><img src="https://s2.ax1x.com/2019/09/11/ndb379.jpg" alt></p><p>点击时 闪烁的颜色blue（忽略内部的黑色圆圈，截屏问题）</p><p><img src="https://s2.ax1x.com/2019/09/11/ndb10J.jpg" alt></p><p>长按后的颜色 绿色</p><p><img src="https://s2.ax1x.com/2019/09/11/ndbNp6.jpg" alt></p><p>长按提示语</p><p><img src="https://s2.ax1x.com/2019/09/11/ndbU1K.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">IconButton(</span><br><span class="line">    icon: Icon(</span><br><span class="line">        Icons.accessible,</span><br><span class="line">        color: Colors.green,</span><br><span class="line">    ),</span><br><span class="line">    onPressed: () &#123;&#125;,<span class="comment">//点击触发的方法</span></span><br><span class="line">    highlightColor: Colors.green,<span class="comment">//长按后不松手时显示的颜色</span></span><br><span class="line">    splashColor: Colors.blue,<span class="comment">//点击一下时闪烁的颜色</span></span><br><span class="line">    disabledColor: Colors.grey,<span class="comment">//不可用时的颜色</span></span><br><span class="line">    tooltip: <span class="string">"sss"</span>,<span class="comment">//长按后的提示语</span></span><br><span class="line">),</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> Dart </tag>
            
            <tag> Icon </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter：Image</title>
      <link href="/blog/2019/08/17/Flutter%EF%BC%9AImage/"/>
      <url>/blog/2019/08/17/Flutter%EF%BC%9AImage/</url>
      
        <content type="html"><![CDATA[<!-- build time:Tue Jan 07 2020 15:15:23 GMT+0800 (GMT+08:00) --><p>用于图片显示的Widget，常用类别：</p><ul><li>Image.asset 资源图片</li><li>Image.network 网络图片</li><li>Image.file 本地文件图片</li><li>Image.memory 内存图片</li></ul><h5 id="向项目内添加图片"><a href="#向项目内添加图片" class="headerlink" title="向项目内添加图片"></a>向项目内添加图片</h5><ul><li>添加资源图片目录：</li></ul><p>在android ios lib同目录建立一个images文件夹，将图片都放到该文件夹下</p><p><img src="https://s2.ax1x.com/2019/08/17/muaG7j.jpg" alt></p><ul><li>配置图片信息</li></ul><p>在pubspec.yaml中，将每个图片信息添加到文件中</p><p><img src="https://s2.ax1x.com/2019/08/17/muUIkn.jpg" alt></p><p>注意 assets 和下面- images/xxx.jpg 的缩进，要严格按照上图所示，否则易出错。</p><ul><li>Packages get下</li></ul><p>修改完pubspec.yaml的assets后都需要重新获取下</p><p><img src="https://s2.ax1x.com/2019/08/17/muU4Ts.jpg" alt></p><p>点击Packages get 或命令行运行也可以。</p><ul><li>重新运行项目即可</li></ul><h5 id="Image-network-显示网络图片"><a href="#Image-network-显示网络图片" class="headerlink" title="Image.network  显示网络图片"></a>Image.network 显示网络图片</h5><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Image.network(<span class="string">"http://xxxxx.jpg"</span>,width: <span class="number">50</span>,height: <span class="number">50</span>,)</span><br></pre></td></tr></table></figure><p>​</p><h5 id="Image-asset-显示项目中的图片"><a href="#Image-asset-显示项目中的图片" class="headerlink" title="Image.asset  显示项目中的图片"></a>Image.asset 显示项目中的图片</h5><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">Image.asset(<span class="built_in">String</span> name, &#123;</span><br><span class="line">    Key key,</span><br><span class="line">    AssetBundle bundle,<span class="comment">//?</span></span><br><span class="line">    <span class="keyword">this</span>.semanticLabel,<span class="comment">//?</span></span><br><span class="line">    <span class="keyword">this</span>.excludeFromSemantics = <span class="keyword">false</span>,<span class="comment">//?</span></span><br><span class="line">    <span class="built_in">double</span> scale,<span class="comment">//缩放系数，图片显示宽高= 图片原图宽高/scale</span></span><br><span class="line">    <span class="keyword">this</span>.width,<span class="comment">//控件宽</span></span><br><span class="line">    <span class="keyword">this</span>.height,<span class="comment">//控件高</span></span><br><span class="line">    <span class="keyword">this</span>.color,   <span class="comment">//单一颜色，与colorBlendMode混合模式共同作用</span></span><br><span class="line">    <span class="keyword">this</span>.colorBlendMode,<span class="comment">//颜色混合模式  与color共同使用</span></span><br><span class="line">    <span class="keyword">this</span>.fit,<span class="comment">//图片在父控件范围内的显示方式</span></span><br><span class="line">    <span class="keyword">this</span>.alignment = Alignment.center,<span class="comment">//在范围内，图片的对齐方式</span></span><br><span class="line">    <span class="keyword">this</span>.repeat = ImageRepeat.noRepeat,<span class="comment">//如果图片没有完全覆盖完控件范围，那么剩余空白范围，图片怎么处理。</span></span><br><span class="line">    <span class="keyword">this</span>.centerSlice,  通过rect确定图片的四个角的大小，这四个角保持不变，其余部位拉伸，直至填满整个控件</span><br><span class="line">    <span class="keyword">this</span>.matchTextDirection = <span class="keyword">false</span>,<span class="comment">//?</span></span><br><span class="line">    <span class="keyword">this</span>.gaplessPlayback = <span class="keyword">false</span>,<span class="comment">//?</span></span><br><span class="line">    <span class="built_in">String</span> package,</span><br><span class="line">    <span class="keyword">this</span>.filterQuality = FilterQuality.low,</span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><ul><li>图片显示</li></ul><p><img src="https://s2.ax1x.com/2019/08/17/muUfmQ.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//图片保持比例，按原图大小显示，如果宽高任何一个超出了屏幕宽高，则将超出屏幕的那个宽高设定为屏幕宽高，如果都超出了，那么图片将尽可能大的在屏幕范围内按照原比例显示，也就是图片显示的宽为屏幕宽（高按比例）或高为屏幕高（宽按比例）。</span></span><br><span class="line"><span class="comment">//在图片可显示的尺寸内，图片居中，保持原比例显示</span></span><br><span class="line">Image.asset(<span class="string">"images/img03.jpg"</span>)</span><br></pre></td></tr></table></figure><ul><li>width 设置图片控件宽度</li><li>height 设置图片控件高度</li></ul><p><img src="https://s2.ax1x.com/2019/08/17/muUhwj.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//指定图片显示范围 width 和height</span></span><br><span class="line"><span class="comment">//图片保持比例显示，尽量按原图大小显示，如果宽高任何一个超出了给定宽高，则将超出给定宽高的那个宽高设定为给定宽高，，如果都超出了，那么图片将尽可能大的在给定范围内按照原比例显示，也就是图片显示的宽为给定宽（高按比例）或高为给定高（宽按比例）。</span></span><br><span class="line"><span class="comment">//在图片可显示的尺寸内，图片居中，保持原比例显示</span></span><br><span class="line">Image.asset(<span class="string">"images/img03.jpg"</span>,width: <span class="number">200</span>,height: <span class="number">200</span>,),</span><br><span class="line">Divider( height: <span class="number">10</span>,color: Colors.grey,),</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muU26S.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Image.asset(<span class="string">"images/img03.jpg"</span>,width: <span class="number">200</span>,height: <span class="number">300</span>,),</span><br><span class="line">Divider(height: <span class="number">10</span>,color: Colors.grey,),</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muUROg.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Image.asset(<span class="string">"images/img03.jpg"</span>,width: <span class="number">600</span>,height: <span class="number">200</span>,),</span><br><span class="line">Divider(height: <span class="number">10</span>,color: Colors.grey,),</span><br></pre></td></tr></table></figure><ul><li>Image的width 和height受容器大小限制，如果超出了容器大小，按容器大小计算</li></ul><p><img src="https://s2.ax1x.com/2019/08/17/muUTf0.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">200</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03.jpg"</span>,</span><br><span class="line">        width: <span class="number">300</span>,</span><br><span class="line">        height: <span class="number">300</span>,</span><br><span class="line">    ),</span><br><span class="line">),</span><br><span class="line">Divider(height: <span class="number">10</span>,color: Colors.grey,),</span><br></pre></td></tr></table></figure><h5 id="alignment-属性-在容器内的显示位置，默认Alignment-center-中间，取值包括："><a href="#alignment-属性-在容器内的显示位置，默认Alignment-center-中间，取值包括：" class="headerlink" title="alignment 属性 在容器内的显示位置，默认Alignment.center 中间，取值包括："></a>alignment 属性 在容器内的显示位置，默认Alignment.center 中间，取值包括：</h5><p>Alignment.topLeft 顶部靠左</p><p>Alignment.topCenter 顶部中间</p><p>Alignment.topRight 顶部靠右</p><p>Alignment.centerLeft 中间靠左</p><p>Alignment.center 中间</p><p>Alignment.centerRight 中间靠右</p><p>Alignment.bottomLeft 底部靠左</p><p>Alignment.bottomCenter 底部中间</p><p>Alignment.bottomRight 底部靠右</p><p>Alignment.lerp(Alignment.topLeft, Alignment.topRight, t) 线性取值，t在0-1之间，t越小越倾向于左侧的值，t越大越倾向于右边的值</p><p><img src="https://s2.ax1x.com/2019/08/17/muUHpV.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">300</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">    ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muUblT.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">300</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        alignment: Alignment.topLeft,</span><br><span class="line">    ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muUq6U.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">300</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        alignment: Alignment.topCenter,</span><br><span class="line">    ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muULXF.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">300</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        alignment: Alignment.topRight,</span><br><span class="line">    ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muUXm4.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">300</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        alignment: Alignment.centerLeft,</span><br><span class="line">    ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muUj0J.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">300</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        alignment: Alignment.center,</span><br><span class="line">    ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muUv79.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">300</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        alignment: Alignment.centerRight,</span><br><span class="line">    ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muUzkR.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">300</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        alignment: Alignment.bottomLeft,</span><br><span class="line">    ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muaSt1.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">300</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        alignment: Alignment.bottomCenter,</span><br><span class="line">    ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muaCp6.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">300</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        alignment: Alignment.bottomRight,</span><br><span class="line">    ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><ul><li>Alignment.lerp(Alignment a, Alignment b, t)</li></ul><p><img src="https://s2.ax1x.com/2019/08/17/muai6O.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">300</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        alignment: Alignment.lerp(</span><br><span class="line">            Alignment.topLeft,</span><br><span class="line">            Alignment.topRight, </span><br><span class="line">            <span class="number">0.1</span></span><br><span class="line">        ),</span><br><span class="line">    ),</span><br><span class="line">),</span><br><span class="line">Divider(height: <span class="number">10</span>,color: Colors.grey,),</span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">300</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        alignment: Alignment.lerp(</span><br><span class="line">            Alignment.topLeft, </span><br><span class="line">            Alignment.topRight, </span><br><span class="line">            <span class="number">0.3</span></span><br><span class="line">        ),</span><br><span class="line">    ),</span><br><span class="line">),</span><br><span class="line">Divider(height: <span class="number">10</span>,color: Colors.grey,),</span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">300</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        alignment: Alignment.lerp(</span><br><span class="line">            Alignment.topLeft, </span><br><span class="line">            Alignment.topRight, </span><br><span class="line">            <span class="number">0.5</span></span><br><span class="line">        ),</span><br><span class="line">    ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muaFXD.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">300</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        alignment: Alignment.lerp(</span><br><span class="line">            Alignment.topLeft, </span><br><span class="line">            Alignment.topRight, </span><br><span class="line">            <span class="number">0.7</span></span><br><span class="line">        ),</span><br><span class="line">    ),</span><br><span class="line">),</span><br><span class="line">Divider(height: <span class="number">10</span>,color: Colors.grey,),</span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">300</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        alignment: Alignment.lerp(</span><br><span class="line">            Alignment.topLeft,</span><br><span class="line">            Alignment.topRight, </span><br><span class="line">            <span class="number">0.9</span></span><br><span class="line">        ),</span><br><span class="line">    ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h5 id="fit属性，图片在控件范围内的显示方式"><a href="#fit属性，图片在控件范围内的显示方式" class="headerlink" title="fit属性，图片在控件范围内的显示方式"></a>fit属性，图片在控件范围内的显示方式</h5><p>BoxFit.none，如果图片尺寸小于控件范围，则居中显示，否则以控件大小截取原图中间位置范围的图片显示，</p><p>BoxFit.contain 大图缩小 小图放大，保持比例，使图片的宽或高与控件宽或高一致</p><p>BoxFit.cover 保持原图比例，大图缩小，小图放大，直至把整个控件填满，图片的宽或高至少有一个与图片的宽或高一致，另一边裁剪</p><p>BoxFit.fill 不考虑原图比例，图片的宽放大或缩小到控件宽，并且图片高放大或缩小到控件高，填充满控件</p><p>BoxFit.fitHeight 图片高放大或缩小至控件高，宽等比放大或缩小</p><p>BoxFit.fitWidth 图片宽放大或缩小至控件高，高等比放大或缩小</p><p>BoxFit.scaleDown 如果图片尺寸大于控件范围，就缩放图片直至能显示完全图片，也就是宽或高中的一个与控件宽高一致。图片尺寸小于控件，则不处理，居中显示</p><p>说明：图片img03尺寸大于控件范围，图片img03_small尺寸小于控件范围</p><p><img src="https://s2.ax1x.com/2019/08/17/muaAne.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不设置fit   小图居中显示</span></span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,),</span><br><span class="line">),</span><br><span class="line"><span class="comment">// 设置BoxFit.none   小图居中显示</span></span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        fit: BoxFit.none,</span><br><span class="line">    ),  </span><br><span class="line">),</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muaE0H.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//不设置fit   大图尽可能大的在控件内按原比例显示</span></span><br><span class="line">Divider(height: <span class="number">10</span>,color: Colors.grey,),</span><br><span class="line">            </span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">    ), </span><br><span class="line">),</span><br><span class="line"><span class="comment">//设置BoxFit.none  使用控件大小在原图中间位置裁剪图片显示</span></span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        fit: BoxFit.none,</span><br><span class="line">    ),     </span><br><span class="line">),</span><br></pre></td></tr></table></figure><p>​</p><p><img src="https://s2.ax1x.com/2019/08/17/muaV7d.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//小图宽度放大至控件宽</span></span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        fit: BoxFit.contain,</span><br><span class="line">    ),</span><br><span class="line">),</span><br><span class="line"><span class="comment">// 大图宽度缩小至控件宽，图片比例不变</span></span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        fit: BoxFit.contain,</span><br><span class="line">    ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muaeAA.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//小图放大，直至填充满控件，至少宽或高中的一个与控件的宽高一致，另一个变裁剪</span></span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        fit: BoxFit.cover,</span><br><span class="line">    ),</span><br><span class="line">),</span><br><span class="line"><span class="comment">//大图缩小，直至填充满控件，至少宽或高中的一个与控件的宽高一致，另一个变裁剪</span></span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        fit: BoxFit.cover,</span><br><span class="line">    ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muamtI.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//小图放大  宽放大至控件宽  高放大至控件高  不考虑原图比例</span></span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        fit: BoxFit.fill,</span><br><span class="line">    ),   </span><br><span class="line">),</span><br><span class="line"><span class="comment">//大图缩小  宽缩小至控件宽  高缩小至控件高  不考虑原图比例</span></span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        fit: BoxFit.fill,</span><br><span class="line">    ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muanht.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">Divider(height: <span class="number">10</span>,color: Colors.grey,),</span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">              </span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        fit: BoxFit.fitHeight,</span><br><span class="line">    ),</span><br><span class="line">            </span><br><span class="line">),</span><br><span class="line">Divider(height: <span class="number">10</span>,color: Colors.grey,),</span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        fit: BoxFit.fitWidth,</span><br><span class="line">    ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muaK9P.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//小图不变，居中显示</span></span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        fit: BoxFit.scaleDown,</span><br><span class="line">    ),</span><br><span class="line">),</span><br><span class="line"><span class="comment">//大图缩小，直至能显示完全图片</span></span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        fit: BoxFit.scaleDown,</span><br><span class="line">    ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><h5 id="repeat-如果图片没有完全覆盖完控件范围，那么剩余空白范围，图片怎么处理。"><a href="#repeat-如果图片没有完全覆盖完控件范围，那么剩余空白范围，图片怎么处理。" class="headerlink" title="repeat  如果图片没有完全覆盖完控件范围，那么剩余空白范围，图片怎么处理。"></a>repeat 如果图片没有完全覆盖完控件范围，那么剩余空白范围，图片怎么处理。</h5><p>ImageRepeat.noRepeat 不处理</p><p>ImageRepeat.repeat xy轴重复显示</p><p>ImageRepeat.repeatX x轴重复显示 y轴不变</p><p>ImageRepeat.repeatY y轴重复显示 x轴不变</p><p><img src="https://s2.ax1x.com/2019/08/17/muaM1f.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_min.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        repeat: ImageRepeat.repeat,</span><br><span class="line">    ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/muaQc8.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_min.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        repeat: ImageRepeat.repeatX,</span><br><span class="line">    ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/17/mualjS.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">300</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_min.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        repeat: ImageRepeat.repeatY,</span><br><span class="line">    ),</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h5 id="centerSlice"><a href="#centerSlice" class="headerlink" title="centerSlice"></a>centerSlice</h5><p>Rect.fromLTRB(70, 70, 140, 140) 确定四个角的大小，这四个角不拉伸，其余位置拉伸，直至填满控件</p><p><img src="https://s2.ax1x.com/2019/08/17/mua3ng.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Container(</span><br><span class="line">    width: <span class="number">400</span>,</span><br><span class="line">    height: <span class="number">300</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        centerSlice:Rect.fromLTRB(<span class="number">70</span>, <span class="number">70</span>, <span class="number">140</span>, <span class="number">140</span>),</span><br><span class="line">    ),</span><br><span class="line">),</span><br></pre></td></tr></table></figure><h5 id="scale"><a href="#scale" class="headerlink" title="scale"></a>scale</h5><p><img src="https://s2.ax1x.com/2019/08/17/mua8BQ.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line">Divider(height: <span class="number">10</span>,color: Colors.grey,),</span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">200</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span> ,</span><br><span class="line">        scale: <span class="number">1.5</span>,</span><br><span class="line">    ),   </span><br><span class="line">),</span><br><span class="line">Divider(height: <span class="number">10</span>,color: Colors.grey,),</span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">200</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        scale: <span class="number">2</span>,</span><br><span class="line">    ),   </span><br><span class="line">),</span><br><span class="line">Divider(height: <span class="number">10</span>,color: Colors.grey,),</span><br><span class="line">Container(</span><br><span class="line">    width: <span class="number">200</span>,</span><br><span class="line">    height: <span class="number">200</span>,</span><br><span class="line">    color: Colors.orange[<span class="number">200</span>],</span><br><span class="line">    child: Image.asset(</span><br><span class="line">        <span class="string">"images/img03_small.jpg"</span>,</span><br><span class="line">        width: <span class="number">200</span>,</span><br><span class="line">        height: <span class="number">200</span>,</span><br><span class="line">        scale: <span class="number">3</span>,</span><br><span class="line">    ),     </span><br><span class="line">),</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> Dart </tag>
            
            <tag> Image </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter：Text</title>
      <link href="/blog/2019/08/17/Flutter%EF%BC%9AText/"/>
      <url>/blog/2019/08/17/Flutter%EF%BC%9AText/</url>
      
        <content type="html"><![CDATA[<!-- build time:Tue Jan 07 2020 15:15:23 GMT+0800 (GMT+08:00) --><h2 id="Text属性"><a href="#Text属性" class="headerlink" title="Text属性"></a>Text属性</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> Text(</span><br><span class="line">  <span class="keyword">this</span>.data, <span class="comment">//显示的文本</span></span><br><span class="line">  &#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="keyword">this</span>.style,<span class="comment">//字体样式</span></span><br><span class="line">    <span class="keyword">this</span>.textAlign,<span class="comment">//文本对齐方式,left right不受textDirection影响，start end手textDirection影响</span></span><br><span class="line">    <span class="keyword">this</span>.textDirection,<span class="comment">//文本方向，不是文字排列的方向，指的是换行后文字靠左还是靠右显示。</span></span><br><span class="line">    <span class="keyword">this</span>.locale,<span class="comment">//?</span></span><br><span class="line">    <span class="keyword">this</span>.softWrap,<span class="comment">//文字超出屏幕后是否换行，默认为true，为false时不换行，超出屏幕外的文字不显示</span></span><br><span class="line">    <span class="keyword">this</span>.overflow,<span class="comment">//当softWrap为false时，或文字超出了maxLines后，超出屏幕后的文字怎么处理</span></span><br><span class="line">    <span class="keyword">this</span>.textScaleFactor,<span class="comment">//字体大小倍率，字体大小=textScaleFactor * fontSize</span></span><br><span class="line">    <span class="keyword">this</span>.maxLines,<span class="comment">//文字显示的最大行数</span></span><br><span class="line">    <span class="keyword">this</span>.semanticsLabel,<span class="comment">//?</span></span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h5 id="textAlign-文本对齐方式"><a href="#textAlign-文本对齐方式" class="headerlink" title="textAlign 文本对齐方式"></a>textAlign 文本对齐方式</h5><ul><li>TextAlign.left 左对齐 不受textDirection 影响</li><li>TextAlign.right 右对齐 不受textDirection 影响</li><li>TextAlign.center 居中 不受textDirection 影响</li><li>TextAlign.justify 自适应 两端对齐</li><li>TextAlign.start 如果textDirection 是ltr ，start表示左对齐<br>，如果textDirection是rtl，start表示右对齐。</li><li>TextAlign.end 如果textDirection<br>是ltr，end表示右对齐，如果textDirection是rtl ，end表示左对齐</li></ul><p>没有textDirection时，textDirection默认为ltr：</p><p><img src="https://s2.ax1x.com/2019/08/17/mnt6d1.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">"123456789   textAlign: TextAlign.left"</span>,style: TextStyle(fontSize: <span class="number">30</span>,color: Colors.red),textAlign: TextAlign.left,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"123456789   textAlign: TextAlign.right"</span>,style: TextStyle(fontSize: <span class="number">30</span>,color: Colors.blue),textAlign: TextAlign.right,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"123456789   textAlign: TextAlign.center"</span>,style: TextStyle(fontSize: <span class="number">30</span>,color: Colors.green),textAlign: TextAlign.center,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"123456789   textAlign: TextAlign.justify"</span>,style: TextStyle(fontSize: <span class="number">30</span>,color: Colors.red),textAlign: TextAlign.justify,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"123456789   textAlign: TextAlign.start"</span>,style: TextStyle(fontSize: <span class="number">30</span>,color: Colors.blue),textAlign: TextAlign.start,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"123456789   textAlign: TextAlign.end"</span>,style: TextStyle(fontSize: <span class="number">30</span>,color: Colors.green),textAlign: TextAlign.end,),</span><br></pre></td></tr></table></figure><p>textDirection为rtl时：</p><p><img src="https://s2.ax1x.com/2019/08/17/mntyZR.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">"textDirection: TextDirection.rtl,   textAlign: TextAlign.left"</span>,style: TextStyle(fontSize: <span class="number">20</span>,color: Colors.red),textAlign: TextAlign.left,textDirection: TextDirection.rtl,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">ext(<span class="string">"textDirection: TextDirection.rtl,   textAlign: TextAlign.right"</span>,style: TextStyle(fontSize: <span class="number">20</span>,color: Colors.blue),textAlign: TextAlign.right,textDirection: TextDirection.rtl,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"textDirection: TextDirection.rtl,   textAlign: TextAlign.center"</span>,style: TextStyle(fontSize: <span class="number">20</span>,color: Colors.green),textAlign: TextAlign.center,textDirection: TextDirection.rtl,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"textDirection: TextDirection.rtl,   textAlign: TextAlign.justify"</span>,style: TextStyle(fontSize: <span class="number">20</span>,color: Colors.red),textAlign: TextAlign.justify,textDirection: TextDirection.rtl,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"textDirection: TextDirection.rtl,   textAlign: TextAlign.start"</span>,style: TextStyle(fontSize: <span class="number">20</span>,color: Colors.blue),textAlign: TextAlign.start,textDirection: TextDirection.rtl,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"textDirection: TextDirection.rtl,   textAlign: TextAlign.end"</span>,style: TextStyle(fontSize: <span class="number">20</span>,color: Colors.green),textAlign: TextAlign.end,textDirection: TextDirection.rtl,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br></pre></td></tr></table></figure><h5 id="softWrap-文字是否自动换行"><a href="#softWrap-文字是否自动换行" class="headerlink" title="softWrap 文字是否自动换行"></a>softWrap 文字是否自动换行</h5><ul><li><p>默认为true 自动换行</p></li><li><p>为false时，只显示一行，剩余不显示</p><p><img src="https://s2.ax1x.com/2019/08/17/mntBM4.jpg" alt></p></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">20</span>),softWrap: <span class="keyword">true</span>,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">20</span>),softWrap: <span class="keyword">false</span>,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br></pre></td></tr></table></figure><h5 id="overflow-文字超过行数后，对可显示范围内，末尾文字的处理效果"><a href="#overflow-文字超过行数后，对可显示范围内，末尾文字的处理效果" class="headerlink" title="overflow 文字超过行数后，对可显示范围内，末尾文字的处理效果"></a>overflow 文字超过行数后，对可显示范围内，末尾文字的处理效果</h5><h5 id="maxLines-文字显示的最大行数"><a href="#maxLines-文字显示的最大行数" class="headerlink" title="maxLines 文字显示的最大行数"></a>maxLines 文字显示的最大行数</h5><p>overflow的值：</p><ul><li>TextOverflow.clip 直接截断</li><li>TextOverflow.ellipsis 末尾显示…</li><li>TextOverflow.fade 末尾渐隐效果</li></ul><p>下面几种情况：</p><ul><li><p>当softWrap为false时</p><p><img src="https://s2.ax1x.com/2019/08/17/mntDsJ.jpg" alt></p></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Text(<span class="string">"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">20</span>),softWrap: <span class="keyword">false</span>,overflow: TextOverflow.clip,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">20</span>),softWrap: <span class="keyword">false</span>,overflow: TextOverflow.ellipsis,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">20</span>),softWrap: <span class="keyword">false</span>,overflow: TextOverflow.fade,),</span><br></pre></td></tr></table></figure><ul><li><p>当超过了maxlines后</p><p><img src="https://s2.ax1x.com/2019/08/17/mntrL9.jpg" alt></p></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">35</span>),maxLines: <span class="number">2</span>,overflow: TextOverflow.clip,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb"</span>,style: TextStyle(fontSize: <span class="number">35</span>),maxLines: <span class="number">2</span>,overflow: TextOverflow.ellipsis,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"ccccccccccccccccccccccccccccccccccccccccccccccccccccccccc"</span>,style: TextStyle(fontSize: <span class="number">35</span>),maxLines: <span class="number">2</span>,overflow: TextOverflow.fade,),</span><br></pre></td></tr></table></figure><h5 id="textScaleFactor-文字大小倍率系数"><a href="#textScaleFactor-文字大小倍率系数" class="headerlink" title="textScaleFactor 文字大小倍率系数"></a>textScaleFactor 文字大小倍率系数</h5><ul><li><p>文字实际大小=textScaleFactor * fontSize</p><p><img src="https://s2.ax1x.com/2019/08/17/mntcIx.jpg" alt></p></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">10</span>),textScaleFactor: <span class="number">1</span>,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"bbbbbbbbbb"</span>,style: TextStyle(fontSize: <span class="number">10</span>),textScaleFactor: <span class="number">2</span>,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"cccccccccc"</span>,style: TextStyle(fontSize: <span class="number">10</span>),textScaleFactor: <span class="number">3</span>,),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"dddddddddd"</span>,style: TextStyle(fontSize: <span class="number">30</span>),textScaleFactor: <span class="number">1</span>,),</span><br></pre></td></tr></table></figure><h2 id="TextStyle"><a href="#TextStyle" class="headerlink" title="TextStyle"></a>TextStyle</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> TextStyle(&#123;</span><br><span class="line">    <span class="keyword">this</span>.inherit = <span class="keyword">true</span>,<span class="comment">//true显示文本   false隐藏文本</span></span><br><span class="line">    <span class="keyword">this</span>.color,<span class="comment">//字体颜色</span></span><br><span class="line">    <span class="keyword">this</span>.backgroundColor,<span class="comment">//背景颜色</span></span><br><span class="line">    <span class="keyword">this</span>.fontSize,<span class="comment">//字体大小</span></span><br><span class="line">    <span class="keyword">this</span>.fontWeight,<span class="comment">//字体比重 字体加粗</span></span><br><span class="line">    <span class="keyword">this</span>.fontStyle,<span class="comment">//字体样式  斜体或非斜体</span></span><br><span class="line">    <span class="keyword">this</span>.letterSpacing,<span class="comment">//字母之间距离</span></span><br><span class="line">    <span class="keyword">this</span>.wordSpacing,<span class="comment">//单词之间距离</span></span><br><span class="line">    <span class="keyword">this</span>.textBaseline,<span class="comment">//？</span></span><br><span class="line">    <span class="keyword">this</span>.height,<span class="comment">//行高系数，行高=height * fontSize</span></span><br><span class="line">    <span class="keyword">this</span>.locale,<span class="comment">//?</span></span><br><span class="line">    <span class="keyword">this</span>.foreground,<span class="comment">//画字体使用的画笔，Paint类型，字体颜色color 就是Paint()..color=color的简写，因此color与foreground不能同时存在</span></span><br><span class="line">    <span class="keyword">this</span>.background,<span class="comment">//画背景使用的画笔，Paint类型，背景颜色backgroundColor就是Paint()..color=backgroundColor的简写，因此backgroundColor与background不能同时存在</span></span><br><span class="line">    <span class="keyword">this</span>.shadows,<span class="comment">//文字阴影效果</span></span><br><span class="line">    <span class="keyword">this</span>.decoration,<span class="comment">//给文字增加删除线、上划线、下划线等，可同时增加多个</span></span><br><span class="line">    <span class="keyword">this</span>.decorationColor,<span class="comment">//给文字增加的删除线、上划线、下划线的颜色</span></span><br><span class="line">    <span class="keyword">this</span>.decorationStyle,<span class="comment">//给文字增加的删除线、上划线、下划线的样式，虚线、实线、点、正弦线等</span></span><br><span class="line">    <span class="keyword">this</span>.debugLabel,<span class="comment">//?</span></span><br><span class="line">  &#125;)</span><br></pre></td></tr></table></figure><h5 id="inherit"><a href="#inherit" class="headerlink" title="inherit"></a>inherit</h5><ul><li><p>true 显示文本</p></li><li><p>false不显示文本 设置color后失效</p><p><img src="https://s2.ax1x.com/2019/08/17/mnt2i6.jpg" alt></p></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">30</span>,inherit: <span class="keyword">true</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">30</span>,inherit: <span class="keyword">false</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"bbbbbbbb"</span>,style: TextStyle(fontSize: <span class="number">35</span>,color: Colors.red,inherit: <span class="keyword">true</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"cccccccc"</span>,style: TextStyle(fontSize: <span class="number">40</span>,inherit: <span class="keyword">false</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"dddddddd"</span>,style: TextStyle(fontSize: <span class="number">45</span>,color: Colors.red,inherit: <span class="keyword">false</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"eeeeeeee"</span>,style: TextStyle(fontSize: <span class="number">45</span>,color: Colors.red,inherit: <span class="keyword">true</span>),),</span><br></pre></td></tr></table></figure><h5 id="color-字体颜色"><a href="#color-字体颜色" class="headerlink" title="color 字体颜色"></a>color 字体颜色</h5><h5 id="fontSize-字体字号"><a href="#fontSize-字体字号" class="headerlink" title="fontSize 字体字号"></a>fontSize 字体字号</h5><p><img src="https://s2.ax1x.com/2019/08/17/mntRJK.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">30</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"bbbbbbbb"</span>,style: TextStyle(fontSize: <span class="number">35</span>,color: Colors.red),),<span class="comment">//选取已有枚举颜色</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"cccccccc"</span>,style: TextStyle(fontSize: <span class="number">40</span>,color: Colors.red[<span class="number">200</span>]),),<span class="comment">//选取已有枚举颜色 [200]代表轻重  取值50 100 200...900  50最轻 900最重</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"dddddddd"</span>,style: TextStyle(fontSize: <span class="number">45</span>,color: Color.fromARGB(<span class="number">100</span>, <span class="number">200</span>, <span class="number">0</span>, <span class="number">0</span>)),),<span class="comment">//生成颜色</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"eeeeeeee"</span>,style: TextStyle(fontSize: <span class="number">50</span>,color: Color.fromRGBO(<span class="number">200</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0.5</span>)),),<span class="comment">//生成颜色</span></span><br></pre></td></tr></table></figure><h5 id="fontWeight-字重"><a href="#fontWeight-字重" class="headerlink" title="fontWeight 字重"></a>fontWeight 字重</h5><p><img src="https://s2.ax1x.com/2019/08/17/mntWRO.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.normal"</span>,style: TextStyle(fontSize: <span class="number">45</span>,fontWeight: FontWeight.normal),),<span class="comment">//默认正常显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.bold"</span>,style: TextStyle(fontSize: <span class="number">45</span>,fontWeight: FontWeight.bold),),<span class="comment">//粗体显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.w100"</span>,style: TextStyle(fontSize: <span class="number">45</span>,fontWeight: FontWeight.w100),),<span class="comment">//粗体显示  轻度</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.w200"</span>,style: TextStyle(fontSize: <span class="number">45</span>,fontWeight: FontWeight.w200),),<span class="comment">//粗体显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.w300"</span>,style: TextStyle(fontSize: <span class="number">45</span>,fontWeight: FontWeight.w300),),<span class="comment">//粗体显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.w400"</span>,style: TextStyle(fontSize: <span class="number">45</span>,fontWeight: FontWeight.w400),),<span class="comment">//粗体显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.w500"</span>,style: TextStyle(fontSize: <span class="number">45</span>,fontWeight: FontWeight.w500),),<span class="comment">//粗体显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.w600"</span>,style: TextStyle(fontSize: <span class="number">45</span>,fontWeight: FontWeight.w600),),<span class="comment">//粗体显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.w700"</span>,style: TextStyle(fontSize: <span class="number">45</span>,fontWeight: FontWeight.w700),),<span class="comment">//粗体显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.w800"</span>,style: TextStyle(fontSize: <span class="number">45</span>,fontWeight: FontWeight.w800),),<span class="comment">//粗体显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.w900"</span>,style: TextStyle(fontSize: <span class="number">45</span>,fontWeight: FontWeight.w900),),<span class="comment">//粗体显示  最重   等同于bold</span></span><br></pre></td></tr></table></figure><p>FontWdight.lerp(weight1,weight2,double t) 线性从两个值之间取值</p><p><img src="https://s2.ax1x.com/2019/08/17/mntfzD.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.lerp(FontWeight.w100, FontWeight.w900, 0.1)"</span>,style: TextStyle(fontSize: <span class="number">25</span>,fontWeight: FontWeight.lerp(FontWeight.w100, FontWeight.w900, <span class="number">0.1</span>)),),<span class="comment">//线性显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.lerp(FontWeight.w100, FontWeight.w900, 0.2)"</span>,style: TextStyle(fontSize: <span class="number">25</span>,fontWeight: FontWeight.lerp(FontWeight.w100, FontWeight.w900, <span class="number">0.2</span>)),),<span class="comment">//线性显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.lerp(FontWeight.w100, FontWeight.w900, 0.3)"</span>,style: TextStyle(fontSize: <span class="number">25</span>,fontWeight: FontWeight.lerp(FontWeight.w100, FontWeight.w900, <span class="number">0.3</span>)),),<span class="comment">//线性显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.lerp(FontWeight.w100, FontWeight.w900, 0.4)"</span>,style: TextStyle(fontSize: <span class="number">25</span>,fontWeight: FontWeight.lerp(FontWeight.w100, FontWeight.w900, <span class="number">0.4</span>)),),<span class="comment">//线性显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.lerp(FontWeight.w100, FontWeight.w900, 0.5)"</span>,style: TextStyle(fontSize: <span class="number">25</span>,fontWeight: FontWeight.lerp(FontWeight.w100, FontWeight.w900, <span class="number">0.5</span>)),),<span class="comment">//线性显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.lerp(FontWeight.w100, FontWeight.w900, 0.6)"</span>,style: TextStyle(fontSize: <span class="number">25</span>,fontWeight: FontWeight.lerp(FontWeight.w100, FontWeight.w900, <span class="number">0.6</span>)),),<span class="comment">//线性显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.lerp(FontWeight.w100, FontWeight.w900, 0.7)"</span>,style: TextStyle(fontSize: <span class="number">25</span>,fontWeight: FontWeight.lerp(FontWeight.w100, FontWeight.w900, <span class="number">0.7</span>)),),<span class="comment">//线性显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.lerp(FontWeight.w100, FontWeight.w900, 0.8)"</span>,style: TextStyle(fontSize: <span class="number">25</span>,fontWeight: FontWeight.lerp(FontWeight.w100, FontWeight.w900, <span class="number">0.8</span>)),),<span class="comment">//线性显示</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"FontWeight.lerp(FontWeight.w100, FontWeight.w900, 0.9)"</span>,style: TextStyle(fontSize: <span class="number">25</span>,fontWeight: FontWeight.lerp(FontWeight.w100, FontWeight.w900, <span class="number">0.9</span>)),),<span class="comment">//线性显示</span></span><br></pre></td></tr></table></figure><h5 id="fontStyle-字体样式-斜体-非斜体"><a href="#fontStyle-字体样式-斜体-非斜体" class="headerlink" title="fontStyle 字体样式 斜体 非斜体"></a>fontStyle 字体样式 斜体 非斜体</h5><p><img src="https://s2.ax1x.com/2019/08/17/mnt4Qe.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">45</span>,fontStyle: FontStyle.italic),),<span class="comment">//斜体</span></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"bbbbbbbb"</span>,style: TextStyle(fontSize: <span class="number">45</span>,fontStyle: FontStyle.normal),),<span class="comment">//正常</span></span><br></pre></td></tr></table></figure><h5 id="letterSpacing-字母或汉字之间的距离"><a href="#letterSpacing-字母或汉字之间的距离" class="headerlink" title="letterSpacing 字母或汉字之间的距离"></a>letterSpacing 字母或汉字之间的距离</h5><p><img src="https://s2.ax1x.com/2019/08/17/mnt5sH.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"bbbbbbbb"</span>,style: TextStyle(fontSize: <span class="number">25</span>,letterSpacing: <span class="number">5</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"bbbbbbbb"</span>,style: TextStyle(fontSize: <span class="number">25</span>,letterSpacing: <span class="number">10</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"bbbbbbbb"</span>,style: TextStyle(fontSize: <span class="number">25</span>,letterSpacing: <span class="number">15</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"安卓Flutter"</span>,style: TextStyle(fontSize: <span class="number">25</span>,letterSpacing: <span class="number">20</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"安卓Flutter"</span>,style: TextStyle(fontSize: <span class="number">25</span>,letterSpacing: <span class="number">25</span>),),</span><br></pre></td></tr></table></figure><h5 id="wordSpacing-单词之间的距离，用空格拆分单词，英文中一个个单词用空格分开，中文没有空格，应该不常用"><a href="#wordSpacing-单词之间的距离，用空格拆分单词，英文中一个个单词用空格分开，中文没有空格，应该不常用" class="headerlink" title="wordSpacing 单词之间的距离，用空格拆分单词，英文中一个个单词用空格分开，中文没有空格，应该不常用"></a>wordSpacing 单词之间的距离，用空格拆分单词，英文中一个个单词用空格分开，中文没有空格，应该不常用</h5><p><img src="https://s2.ax1x.com/2019/08/17/mntILd.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aabb cc dd"</span>,style: TextStyle(fontSize: <span class="number">25</span>,wordSpacing: <span class="number">5</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aa bb cc dd"</span>,style: TextStyle(fontSize: <span class="number">25</span>,wordSpacing: <span class="number">10</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"我 你 他们 我们"</span>,style: TextStyle(fontSize: <span class="number">25</span>,wordSpacing: <span class="number">15</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aa bb 他们 我们"</span>,style: TextStyle(fontSize: <span class="number">25</span>,wordSpacing: <span class="number">20</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"我 你 cc dd"</span>,style: TextStyle(fontSize: <span class="number">25</span>,wordSpacing: <span class="number">25</span>),),</span><br></pre></td></tr></table></figure><h5 id="height-行高系数-实际行高-height-fontSize"><a href="#height-行高系数-实际行高-height-fontSize" class="headerlink" title="height 行高系数 实际行高=height * fontSize"></a>height 行高系数 实际行高=height * fontSize</h5><p><img src="https://s2.ax1x.com/2019/08/17/mntTeA.jpg" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">25</span>,height: <span class="number">1</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"bbbbbbb"</span>,style: TextStyle(fontSize: <span class="number">25</span>,height: <span class="number">1.5</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"ccccccc"</span>,style: TextStyle(fontSize: <span class="number">25</span>,height: <span class="number">2</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"ddddddd"</span>,style: TextStyle(fontSize: <span class="number">25</span>,height: <span class="number">2.5</span>),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"eeeeeee"</span>,style: TextStyle(fontSize: <span class="number">25</span>,height: <span class="number">3</span>),),</span><br></pre></td></tr></table></figure><h5 id="foreground-设置画字体时用的画笔"><a href="#foreground-设置画字体时用的画笔" class="headerlink" title="foreground 设置画字体时用的画笔"></a>foreground 设置画字体时用的画笔</h5><ul><li>color<br>与foreground只能存在其一，其实color是Paint的简写形式，设置了color其实就是设置Paint()..color<br>= color</li></ul><h5 id="background-设置画背景时用的画笔"><a href="#background-设置画背景时用的画笔" class="headerlink" title="background 设置画背景时用的画笔"></a>background 设置画背景时用的画笔</h5><ul><li><p>backgroundColor<br>与background只能存在其一，其实backgroundColor是Paint的简写形式，设置了backgroundColor其实就是设置Paint()..color= bacrgroundColor</p><p><img src="https://s2.ax1x.com/2019/08/17/mnt7dI.jpg" alt></p></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> paint = Paint()</span><br><span class="line">..color = Colors.red</span><br><span class="line">..strokeCap = StrokeCap.square</span><br><span class="line">..strokeWidth = <span class="number">12</span>;</span><br><span class="line"></span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">35</span>,foreground: paint),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"bbbbbbbbb"</span>,style: TextStyle(fontSize: <span class="number">35</span>,background: paint),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"ccccccccc"</span>,style: TextStyle(fontSize: <span class="number">35</span>,background: paint,height: <span class="number">1.5</span>),),</span><br></pre></td></tr></table></figure><h5 id="shadows-文字阴影效果"><a href="#shadows-文字阴影效果" class="headerlink" title="shadows 文字阴影效果"></a>shadows 文字阴影效果</h5><ul><li><p>offset xy轴的偏移量</p></li><li><p>blurRadius 模糊程度</p><p><img src="https://s2.ax1x.com/2019/08/17/mntHot.jpg" alt></p></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">35</span>,color: Colors.red,shadows: [Shadow(color: Colors.black,offset: Offset(<span class="number">1</span>, <span class="number">2</span>))]),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">35</span>,color: Colors.red,shadows: [Shadow(color: Colors.black,offset: Offset(<span class="number">2</span>, <span class="number">3</span>))]),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">35</span>,color: Colors.red,shadows: [Shadow(color: Colors.black,offset: Offset(<span class="number">4</span>, <span class="number">6</span>))]),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">35</span>,color: Colors.red,shadows: [Shadow(color: Colors.black,offset: Offset(<span class="number">1</span>, <span class="number">2</span>),blurRadius: <span class="number">5</span> )]),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">35</span>,color: Colors.red,shadows: [Shadow(color: Colors.black,offset: Offset(<span class="number">2</span>, <span class="number">3</span>),blurRadius: <span class="number">10</span> )]),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">35</span>,color: Colors.red,shadows: [Shadow(color: Colors.black,offset: Offset(<span class="number">5</span>, <span class="number">6</span>),blurRadius: <span class="number">15</span> )]),),</span><br></pre></td></tr></table></figure><h5 id="decoration-给文字增加删除线、上划线、下划线等，可同时增加多个"><a href="#decoration-给文字增加删除线、上划线、下划线等，可同时增加多个" class="headerlink" title="decoration 给文字增加删除线、上划线、下划线等，可同时增加多个"></a>decoration 给文字增加删除线、上划线、下划线等，可同时增加多个</h5><ul><li>TextDecoration.overline 上划线</li><li>TextDecoration.lineThrough 删除线</li><li>TextDecoration.underline 下划线</li></ul><h5 id="decorationColor-给文字增加的删除线、上划线、下划线的颜色"><a href="#decorationColor-给文字增加的删除线、上划线、下划线的颜色" class="headerlink" title="decorationColor 给文字增加的删除线、上划线、下划线的颜色"></a>decorationColor 给文字增加的删除线、上划线、下划线的颜色</h5><h5 id="decorationStyle-给文字增加的删除线、上划线、下划线的样式，虚线、实线、点、正弦线等"><a href="#decorationStyle-给文字增加的删除线、上划线、下划线的样式，虚线、实线、点、正弦线等" class="headerlink" title="decorationStyle 给文字增加的删除线、上划线、下划线的样式，虚线、实线、点、正弦线等"></a>decorationStyle 给文字增加的删除线、上划线、下划线的样式，虚线、实线、点、正弦线等</h5><ul><li><p>TextDecorationStyle.dashed 短横线</p></li><li><p>TextDecorationStyle.dotted 点线</p></li><li><p>TextDecorationStyle.double 双线</p></li><li><p>TextDecorationStyle.solid 实线</p></li><li><p>TextDecorationStyle.wavy 波浪线</p><p><img src="https://s2.ax1x.com/2019/08/17/mntLJf.jpg" alt></p></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"aaaaaaaaa"</span>,style: TextStyle(fontSize: <span class="number">35</span>,),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"bbbbbbbbb"</span>,style: TextStyle(fontSize: <span class="number">35</span>,decoration: TextDecoration.overline),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"ccccccccc"</span>,style: TextStyle(fontSize: <span class="number">35</span>,decoration: TextDecoration.lineThrough),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"ddddddddd"</span>,style: TextStyle(fontSize: <span class="number">35</span>,decoration: TextDecoration.underline),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"eeeeeeeee"</span>,style: TextStyle(fontSize: <span class="number">35</span>,decoration: TextDecoration.combine([TextDecoration.overline,TextDecoration.lineThrough])),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"fffffffff"</span>,style: TextStyle(fontSize: <span class="number">35</span>,decoration: TextDecoration.overline,decorationColor: Colors.red),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"ggggggggg"</span>,style: TextStyle(fontSize: <span class="number">35</span>,decoration: TextDecoration.lineThrough,decorationStyle: TextDecorationStyle.dashed),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"hhhhhhhhh"</span>,style: TextStyle(fontSize: <span class="number">35</span>,decoration: TextDecoration.lineThrough,decorationStyle: TextDecorationStyle.dotted,decorationColor: Colors.orange),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"iiiiiiiii"</span>,style: TextStyle(fontSize: <span class="number">35</span>,decoration: TextDecoration.lineThrough,decorationStyle: TextDecorationStyle.<span class="built_in">double</span>,decorationColor: Colors.red),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"jjjjjjjjj"</span>,style: TextStyle(fontSize: <span class="number">35</span>,decoration: TextDecoration.lineThrough,decorationStyle: TextDecorationStyle.solid),),</span><br><span class="line">Divider(height: <span class="number">1</span>,color: Colors.grey,),</span><br><span class="line">Text(<span class="string">"kkkkkkkkk"</span>,style: TextStyle(fontSize: <span class="number">35</span>,decoration: TextDecoration.lineThrough,decorationStyle: TextDecorationStyle.wavy),),</span><br></pre></td></tr></table></figure><h2 id="Text-rich，文字分部分编辑"><a href="#Text-rich，文字分部分编辑" class="headerlink" title="Text.rich，文字分部分编辑"></a>Text.rich，文字分部分编辑</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">Text.rich(</span><br><span class="line"><span class="keyword">this</span>.textSpan, <span class="comment">//TextSpan  文字分部分编辑，其中分部分后的一段文字</span></span><br><span class="line"><span class="comment">//下面属性为Text的属性</span></span><br><span class="line">&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="keyword">this</span>.style,</span><br><span class="line">    <span class="keyword">this</span>.textAlign,</span><br><span class="line">    <span class="keyword">this</span>.textDirection,</span><br><span class="line">    <span class="keyword">this</span>.locale,</span><br><span class="line">    <span class="keyword">this</span>.softWrap,</span><br><span class="line">    <span class="keyword">this</span>.overflow,</span><br><span class="line">    <span class="keyword">this</span>.textScaleFactor,</span><br><span class="line">    <span class="keyword">this</span>.maxLines,</span><br><span class="line">    <span class="keyword">this</span>.semanticsLabel,</span><br><span class="line">  &#125;</span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="TextSpan"><a href="#TextSpan" class="headerlink" title="TextSpan"></a>TextSpan</h2><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> TextSpan(&#123;</span><br><span class="line">  <span class="keyword">this</span>.style,<span class="comment">//文本样式，TextStyle</span></span><br><span class="line">  <span class="keyword">this</span>.text,<span class="comment">//文本内容</span></span><br><span class="line">  <span class="keyword">this</span>.children,<span class="comment">//List&lt;TextSpan&gt;  可以添加多段文字</span></span><br><span class="line">  <span class="keyword">this</span>.recognizer,<span class="comment">//屏幕点击识别 </span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>功能：</p><ul><li><p>对每段文字进行样式修改</p></li><li><p>对每段文字单独添加点击监听</p><p><img src="https://s2.ax1x.com/2019/08/17/mntOW8.jpg" alt></p><p>代码如下：</p></li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">Text.rich(TextSpan(</span><br><span class="line">                text: <span class="string">"xxxxxxxxx"</span>,<span class="comment">//显示一段文字</span></span><br><span class="line">                children: [<span class="comment">//增加另外几段文字</span></span><br><span class="line">                  TextSpan(</span><br><span class="line">                      text: <span class="string">"aaaaaaaaaaaaaaaaa"</span>,</span><br><span class="line">                      style: TextStyle(fontSize: <span class="number">15</span>, color: Colors.red),<span class="comment">//改变当前文字的颜色和大小</span></span><br><span class="line">                      recognizer: TapGestureRecognizer()<span class="comment">//添加点击监听，只有当前段文字有效</span></span><br><span class="line">                        ..onTap = () &#123;</span><br><span class="line">                          <span class="built_in">print</span>(<span class="string">"aaa"</span>);</span><br><span class="line">                        &#125;),</span><br><span class="line">                  TextSpan(<span class="comment">//没有监听事件</span></span><br><span class="line">                      text: <span class="string">"bbbbbbbbbbbbbbbbb"</span>,</span><br><span class="line">                      style: TextStyle(fontSize: <span class="number">20</span>, color: Colors.green)),<span class="comment">//改变当前文字的颜色和大小</span></span><br><span class="line">                  TextSpan(<span class="comment">//没有监听事件</span></span><br><span class="line">                      text: <span class="string">"ccccccccccccccccc"</span>,</span><br><span class="line">                      style: TextStyle(fontSize: <span class="number">25</span>, color: Colors.blue)),<span class="comment">//改变当前文字的颜色和大小</span></span><br><span class="line">                ],</span><br><span class="line">                style: TextStyle(fontSize: <span class="number">30</span>, color: Colors.orange),<span class="comment">//对xxxxxxx有效</span></span><br><span class="line">                recognizer: TapGestureRecognizer()<span class="comment">//对xxxxxxx添加点击监听</span></span><br><span class="line">                  ..onTap = () &#123;</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">"onTap"</span>);</span><br><span class="line">                  &#125;</span><br><span class="line">                  ..onTapCancel = () &#123;</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">"onTapCancel"</span>);</span><br><span class="line">                  &#125;</span><br><span class="line">                  ..onTapUp = (TapUpDetails detail) &#123;</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">"onTapUp"</span>);</span><br><span class="line">                  &#125;</span><br><span class="line">                  ..onTapDown = (TapDownDetails detail) &#123;</span><br><span class="line">                    <span class="built_in">print</span>(<span class="string">"onTapDown"</span>);</span><br><span class="line">                  &#125;))</span><br></pre></td></tr></table></figure><p>对aaaa…aaa添加了监听，因此点击后输出 “aaa”<br>对xxxx…xxxx添加了监听，因此点击后会输出onTap onTapDown onTapUp等<br>没有对bbb…bbb ccc..ccc添加监听，因此点击二者没有输出。</p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> Dart </tag>
            
            <tag> Text </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dart：类</title>
      <link href="/blog/2019/08/17/Dart%EF%BC%9A%E7%B1%BB/"/>
      <url>/blog/2019/08/17/Dart%EF%BC%9A%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<!-- build time:Tue Jan 07 2020 15:15:23 GMT+0800 (GMT+08:00) --><h5 id="Object"><a href="#Object" class="headerlink" title="Object"></a>Object</h5><ul><li>Object是所有类的父类。</li><li>Object没有父类。</li><li>一个类只能有一个父类。</li><li>如果一个类没有显示的用extends去继承一个类，那么默认其继承的是Object。</li></ul><h5 id="类概述"><a href="#类概述" class="headerlink" title="类概述"></a>类概述</h5><ul><li><p>普通类</p><ol><li><p>变量</p><ul><li>实例变量（创建对象后，使用 对象.变量名 调用）</li><li>静态变量（用static修饰，使用 类名.变量名 调用）</li></ul></li><li><p>函数</p><ul><li>实例函数（创建对象后，使用 对象.函数名 调用）</li><li>静态函数（用static修饰，使用 类名.函数名 调用）</li></ul></li><li><p>构造函数</p><ul><li>默认构造函数</li><li>自定义构造函数</li><li>静态构造函数（使用const修饰的构造函数）</li><li>重定向构造函数</li><li>工厂构造函数</li></ul></li></ol></li><li><p>抽象类</p><ol><li><p>变量</p><ul><li>实例变量（其子类创建对象后，使用 对象.变量名 调用）</li><li>静态变量（用static修饰，使用 类名.变量名 调用）</li></ul></li><li><p>函数</p><ul><li>实例函数（其子类创建对象后，使用 对象.函数名 调用）</li><li>静态函数（用static修饰，使用 类名.函数名 调用）</li><li>抽象函数（其子类实现该函数，创建对象后，使用对象.函数名<br>调用）</li></ul></li><li><p>不能实例化（工厂构造函数除外）。</p></li></ol></li></ul><h5 id="普通类"><a href="#普通类" class="headerlink" title="普通类"></a>普通类</h5><p>声明</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class01</span></span>&#123;</span><br><span class="line">  <span class="comment">//变量</span></span><br><span class="line">  <span class="built_in">int</span> a; </span><br><span class="line">  <span class="built_in">String</span> b;</span><br><span class="line">  <span class="keyword">var</span> c = <span class="number">3</span>;</span><br><span class="line">  <span class="comment">//函数</span></span><br><span class="line">  <span class="keyword">void</span> fun01(<span class="built_in">int</span> d)&#123;</span><br><span class="line">    <span class="comment">//...</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">String</span> fun02()&#123;</span><br><span class="line">    <span class="keyword">return</span> b;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>创建类的实例，使用new<br>或const，new对应的是普通的构造函数，const对应的是用const形式的构造函数。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> class01 = <span class="keyword">new</span> Class01();</span><br></pre></td></tr></table></figure><p>调用实例的属性或函数，使用 . 号</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(class01.c);</span><br><span class="line">class01.fun02();</span><br></pre></td></tr></table></figure><p>级联操作符 .. ， 可以连续调用对象的一些列属性或函数。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> class02 = <span class="keyword">new</span> Class01();</span><br><span class="line">class02</span><br><span class="line">  ..a = <span class="number">1</span></span><br><span class="line">  ..b = <span class="string">"a"</span></span><br><span class="line">  ..c = <span class="number">33</span></span><br><span class="line">  ..fun02()</span><br><span class="line">  ..fun01(<span class="number">1</span>);</span><br></pre></td></tr></table></figure><h5 id="构造函数："><a href="#构造函数：" class="headerlink" title="构造函数："></a>构造函数：</h5><ul><li>没有返回值（factory构造方法有返回值）</li><li>构造函数名与类名相同</li></ul><p>默认构造函数，如果类中没有显示声明构造函数，那么会默认有个构造函数，默认构造函数是与类同名且无参数无返回值的函数。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class01</span></span>&#123;</span><br><span class="line">  <span class="comment">//变量</span></span><br><span class="line">  <span class="built_in">int</span> a; </span><br><span class="line">  <span class="built_in">String</span> b;</span><br><span class="line"><span class="comment">//未声明构造函数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>所以这个类默认有个构造函数</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Class01()&#123;&#125;</span><br></pre></td></tr></table></figure><p>所以可以使用 new Class01() 来创建实例。</p><p>自定义构造函数</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class02</span></span>&#123;</span><br><span class="line">  <span class="built_in">int</span> a;</span><br><span class="line">  <span class="built_in">String</span> b;</span><br><span class="line">  <span class="comment">//自定义的一个构造函数，有两个参数</span></span><br><span class="line">  Class02(<span class="built_in">int</span> a,<span class="built_in">String</span> c)&#123;</span><br><span class="line">    <span class="keyword">this</span>.a = a;<span class="comment">//名字冲突时，可使用 this</span></span><br><span class="line">    b = b;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">  <span class="keyword">var</span> c02 = <span class="keyword">new</span> Class02(<span class="number">3</span>,<span class="string">"abc"</span>);</span><br><span class="line">  <span class="built_in">print</span>(c02.a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果构造函数中的参数都是给实例变量赋值的，那么上面这种情况还可以写成下面这种方式，简化了：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class02</span></span>&#123;</span><br><span class="line">  <span class="built_in">int</span> a;</span><br><span class="line">  <span class="built_in">String</span> b;</span><br><span class="line">  <span class="comment">//自定义的一个构造函数，有两个参数</span></span><br><span class="line">  Class02(<span class="keyword">this</span>.a,<span class="keyword">this</span>.b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">  <span class="keyword">var</span> c02 = <span class="keyword">new</span> Class02(<span class="number">3</span>,<span class="string">"abc"</span>);</span><br><span class="line">  <span class="built_in">print</span>(c02.a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>命名构造函数，一种可以为类声明多个构造函数的方式。注意这里没有重载的概念，不能声明只是参数类型或数量不同的构造函数，使用命名构造函数实现。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class03</span></span>&#123;</span><br><span class="line">  <span class="built_in">int</span> a;</span><br><span class="line">  <span class="built_in">String</span> b;</span><br><span class="line">  Class03(<span class="built_in">int</span> a,<span class="built_in">String</span> b)&#123;</span><br><span class="line">    <span class="keyword">this</span>.a = a;</span><br><span class="line">    <span class="keyword">this</span>.b = b;</span><br><span class="line">  &#125;</span><br><span class="line">  Class03.fun1(<span class="built_in">int</span> a)&#123;</span><br><span class="line">    <span class="keyword">this</span>.a = a;</span><br><span class="line">  &#125;</span><br><span class="line">  Class03.fun2(<span class="built_in">String</span> b)&#123;</span><br><span class="line">    <span class="keyword">this</span>.b = b;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">    <span class="keyword">var</span> class03 = <span class="keyword">new</span> Class03(<span class="number">3</span>, <span class="string">"ccc"</span>);</span><br><span class="line">    <span class="keyword">var</span> class04 = <span class="keyword">new</span> Class03.fun1(<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">var</span> class05 = <span class="keyword">new</span> Class03.fun2(<span class="string">"ddd"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>静态构造函数</p><ul><li>类的对象不会改变</li><li>类的变量不会改变，也就是常量了</li><li>使用final修饰变量</li><li>使用const 修饰构造方法</li><li>创建实例时，使用const 而不是new</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class04</span></span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">int</span> a;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> b;</span><br><span class="line">  <span class="keyword">const</span> Class04(<span class="keyword">this</span>.a,<span class="keyword">this</span>.b);</span><br><span class="line">  <span class="keyword">void</span> fun01()&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"aa"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">    <span class="keyword">var</span> class06 = <span class="keyword">const</span> Class04(<span class="number">4</span>, <span class="string">"ccc"</span>);</span><br><span class="line">    class06.fun01();</span><br><span class="line">    <span class="built_in">print</span>(class06.a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>重定向构造函数，在类的构造函数中，有时我们只是需要调用到另一个构造函数。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class05</span></span>&#123;</span><br><span class="line">  <span class="built_in">int</span> a;</span><br><span class="line">  <span class="built_in">String</span> b;</span><br><span class="line">  Class05(<span class="built_in">int</span> a,<span class="built_in">String</span> b)&#123;</span><br><span class="line">    <span class="keyword">this</span>.a = a;</span><br><span class="line">    <span class="keyword">this</span>.b = b;</span><br><span class="line">  &#125;</span><br><span class="line">  Class05.fun1(<span class="built_in">int</span> a)&#123;</span><br><span class="line">    <span class="keyword">this</span>.a = a;</span><br><span class="line">  &#125;</span><br><span class="line">  Class05.fun2(<span class="built_in">String</span> b):<span class="keyword">this</span>.fun1(<span class="number">33</span>);<span class="comment">//重定向到fun1</span></span><br><span class="line">  Class05.fun3(<span class="built_in">String</span> b):<span class="keyword">this</span>(<span class="number">33</span>,<span class="string">"ddddd"</span>);<span class="comment">//重定向到构造函数</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>工厂构造函数</p><ul><li>使用factory修饰构造函数</li><li>构造函数内有返回值，类型是当前类或其子类，此返回值可以是用命名构造函数创建的，也可以是缓存中的。</li><li>使用new创建实例</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class06</span></span>&#123;</span><br><span class="line">  <span class="built_in">int</span> a;</span><br><span class="line">  <span class="keyword">static</span> Class06 instance ;  <span class="comment">//这里创建了一个单例</span></span><br><span class="line">  <span class="keyword">factory</span> Class06(<span class="built_in">int</span> a)&#123;<span class="comment">//这里的构造函数用factory修饰，使用new时，不再是创建一个全新的实例了，而是通过函数体内return获取到实例</span></span><br><span class="line">    <span class="keyword">if</span>(instance==<span class="keyword">null</span>)&#123;</span><br><span class="line">      instance = <span class="keyword">new</span> Class06.fun1(a);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> instance;</span><br><span class="line">  &#125;</span><br><span class="line">  Class06.fun1(<span class="keyword">this</span>.a);<span class="comment">//注意这里是实例化当前对象的构造方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">    <span class="keyword">var</span> class07 = <span class="keyword">new</span> Class06(<span class="number">3</span>);<span class="comment">//使用new</span></span><br><span class="line">    <span class="built_in">print</span>(class07.a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="set-get方法"><a href="#set-get方法" class="headerlink" title="set get方法"></a>set get方法</h5><ul><li>使用 set get修饰属性</li><li>该属性不是真实存在，而是类似于一个函数，该函数内可以对类的其他属性和方法进行操作。</li><li>读取该属性值时 调用的get</li><li>对该属性赋值时，调用的set</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class08</span></span>&#123;</span><br><span class="line">  <span class="built_in">int</span> hands;</span><br><span class="line">  <span class="built_in">int</span> feet;</span><br><span class="line">  </span><br><span class="line">  <span class="built_in">num</span> <span class="keyword">get</span> persons =&gt; hands / <span class="number">2</span>;</span><br><span class="line">      <span class="keyword">set</span> persons(<span class="built_in">num</span> n)&#123;</span><br><span class="line">          hands=n*<span class="number">2</span>;</span><br><span class="line">          feet=n*<span class="number">2</span>;</span><br><span class="line">      &#125; </span><br><span class="line">&#125;</span><br><span class="line">volid main()&#123;</span><br><span class="line">    <span class="keyword">var</span> class08 = <span class="keyword">new</span> Class08();</span><br><span class="line">    class08.persons = <span class="number">3</span>;<span class="comment">//这里就调用了set方法，进而对hands feet赋值了</span></span><br><span class="line">    <span class="built_in">print</span>(class08.hands);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="抽象类"><a href="#抽象类" class="headerlink" title="抽象类"></a>抽象类</h5><ul><li>使用abstract修饰类。</li><li>可定义实例方法。</li><li>可定义抽象方法，抽象方法没有函数体。</li><li>抽象类不能实例化(工厂构造函数除外)。</li><li>子类继承抽象类后，必须实现所有抽象方法，除非子类也是抽象类。</li><li>只有抽象类能定义抽象方法。</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义抽象类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Class09</span></span>&#123;</span><br><span class="line">  <span class="keyword">void</span> fun01();<span class="comment">//定义抽象方法</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//继承抽象类</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class10</span> <span class="keyword">extends</span> <span class="title">Class09</span></span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> fun01() &#123;<span class="comment">//实现抽象方法</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"aaa"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line"> <span class="keyword">var</span> c10 = <span class="keyword">new</span> Class10();</span><br><span class="line"> c10.fun01();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="静态变量和静态函数"><a href="#静态变量和静态函数" class="headerlink" title="静态变量和静态函数"></a>静态变量和静态函数</h5><ul><li>使用static修饰的变量为静态变量。</li><li>使用static修饰的函数为静态函数。</li><li>静态变量和函数，使用类名直接调用。</li><li>实例变量和函数，使用类的对象调用。</li><li>静态变量和函数，不能访问实例变量和函数。</li><li>静态函数内，不能使用this。</li><li>普通类和抽象类都可以定义静态变量和函数</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Class11</span></span>&#123;</span><br><span class="line">  <span class="keyword">static</span> <span class="built_in">int</span> a = <span class="number">3</span>;<span class="comment">//静态变量</span></span><br><span class="line">  <span class="built_in">int</span> b = <span class="number">4</span>;<span class="comment">//实例变量</span></span><br><span class="line"></span><br><span class="line">  <span class="comment">//静态方法</span></span><br><span class="line">  <span class="keyword">static</span> <span class="keyword">void</span> fun01(<span class="built_in">int</span> c)&#123;</span><br><span class="line">    <span class="built_in">print</span>(c);</span><br><span class="line">    <span class="comment">//print(b);//这里报错，静态方法内不能使用实例变量</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//实例方法</span></span><br><span class="line">  <span class="keyword">void</span> fun02()&#123;</span><br><span class="line">    <span class="built_in">print</span>(b);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">    <span class="keyword">var</span> class11 = <span class="keyword">new</span> Class11();</span><br><span class="line">    <span class="comment">//实例变量和函数</span></span><br><span class="line">    <span class="built_in">print</span>(class11.b);</span><br><span class="line">    class11.fun02();</span><br><span class="line">    <span class="comment">//调用静态变量和函数</span></span><br><span class="line">    Class11.fun01(<span class="number">44</span>);</span><br><span class="line">    <span class="built_in">print</span>(Class11.a);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="枚举"><a href="#枚举" class="headerlink" title="枚举"></a>枚举</h5><ul><li>使用enum声明枚举。</li><li>每个枚举值都有一个唯一值。</li><li>枚举不能使用new实例化 。</li><li>使用枚举值 枚举.枚举值。</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义枚举</span></span><br><span class="line"><span class="keyword">enum</span> Week&#123;</span><br><span class="line">  Monday,</span><br><span class="line">  Tuesday,</span><br><span class="line">  Wednesday,</span><br><span class="line">  Thursday,</span><br><span class="line">  Friday,</span><br><span class="line">  Saturday,</span><br><span class="line">  Sunday</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//属性values 获取所有枚举值</span></span><br><span class="line">  <span class="built_in">List</span>&lt;Week&gt; list = Week.values;</span><br><span class="line"></span><br><span class="line">  list.forEach((e)&#123;</span><br><span class="line">    <span class="built_in">print</span>(e);<span class="comment">//打印枚举</span></span><br><span class="line"><span class="comment">//     Week.Monday</span></span><br><span class="line"><span class="comment">//     Week.Tuesday</span></span><br><span class="line"><span class="comment">//     Week.Wednesday</span></span><br><span class="line"><span class="comment">//     Week.Thursday</span></span><br><span class="line"><span class="comment">//     Week.Friday</span></span><br><span class="line"><span class="comment">//     Week.Saturday</span></span><br><span class="line"><span class="comment">//     Week.Sunday</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  list.forEach((e)&#123;</span><br><span class="line">    <span class="built_in">print</span>(e.index);<span class="comment">//属性index  表示该枚举值在定义时的序号</span></span><br><span class="line"><span class="comment">//     0</span></span><br><span class="line"><span class="comment">//     1</span></span><br><span class="line"><span class="comment">//     2</span></span><br><span class="line"><span class="comment">//     3</span></span><br><span class="line"><span class="comment">//     4</span></span><br><span class="line"><span class="comment">//     5</span></span><br><span class="line"><span class="comment">//     6</span></span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">var</span> day = Week.Friday;</span><br><span class="line">  <span class="keyword">switch</span>(day)&#123;</span><br><span class="line">    <span class="keyword">case</span> Week.Monday:</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Week.Tuesday:</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Week.Wednesday:</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Week.Thursday:</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Week.Friday:</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Week.Saturday:</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> Week.Sunday:</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><h5 id="继承"><a href="#继承" class="headerlink" title="继承"></a>继承</h5><ul><li>使用extends 关键字表示继承。</li><li>构造方法不能被继承。</li><li>使用@override重写函数。</li><li>如果继承的是抽象类，要实现所有抽象函数。</li></ul><p>继承抽象类</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//定义抽象类</span></span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">Parent</span></span>&#123;</span><br><span class="line">  <span class="built_in">int</span> a = <span class="number">1</span>;</span><br><span class="line">  <span class="built_in">String</span> b = <span class="string">"bb"</span>;</span><br><span class="line">  <span class="keyword">void</span> fun1();<span class="comment">//定义抽象方法</span></span><br><span class="line">  <span class="keyword">void</span> fun2(<span class="built_in">int</span> a,<span class="built_in">int</span> c)&#123;</span><br><span class="line">    <span class="keyword">this</span>.a = a;</span><br><span class="line">    <span class="built_in">print</span>(c);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Child</span> <span class="keyword">extends</span> <span class="title">Parent</span></span>&#123;</span><br><span class="line">  <span class="built_in">String</span> b = <span class="string">"child b"</span>;<span class="comment">//重写了父类的属性</span></span><br><span class="line">  <span class="comment">//实现了父类的抽象函数</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> fun1() &#123;</span><br><span class="line">    <span class="built_in">print</span>(b);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">//重写了父类的函数</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> fun2(<span class="built_in">int</span> a, <span class="built_in">int</span> c) &#123;</span><br><span class="line">    <span class="built_in">print</span>(a+c);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">    <span class="keyword">var</span> child = <span class="keyword">new</span> Child();</span><br><span class="line">    child.fun1();<span class="comment">// child b</span></span><br><span class="line">    child.fun2(<span class="number">3</span>, <span class="number">4</span>); <span class="comment">//7</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>继承普通类</p><ul><li>子类至少定义一个构造函数调用父类的任一构造函数，使用：super。</li><li>子类的每个构造函数都要继承父类的任一构造函数。</li><li>子类可重写父类的函数。</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Fruit</span></span>&#123;</span><br><span class="line">  <span class="built_in">String</span> name;</span><br><span class="line">  <span class="built_in">int</span> nums;</span><br><span class="line">  Fruit(<span class="keyword">this</span>.name);<span class="comment">//定义构造函数</span></span><br><span class="line">  Fruit.<span class="built_in">num</span>(<span class="keyword">this</span>.name,<span class="keyword">this</span>.nums);<span class="comment">//定义命名构造函数</span></span><br><span class="line">  Fruit.con(<span class="built_in">num</span>)&#123;<span class="comment">//定义命名构造函数</span></span><br><span class="line">    nums = <span class="built_in">num</span>*<span class="number">2</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">void</span> fun1()&#123;</span><br><span class="line">    <span class="built_in">print</span>(name);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">void</span> fun2()&#123;</span><br><span class="line">    <span class="built_in">print</span>(nums);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Apple</span> <span class="keyword">extends</span> <span class="title">Fruit</span></span>&#123;</span><br><span class="line">  <span class="built_in">String</span> name;</span><br><span class="line">  <span class="built_in">int</span> nums;</span><br><span class="line">  <span class="built_in">int</span> color;</span><br><span class="line">  <span class="comment">//至少需要定义一个构造函数调用父类的任一构造函数</span></span><br><span class="line">  Apple(<span class="built_in">String</span> name) : <span class="keyword">super</span>(name);</span><br><span class="line">  Apple.con1(<span class="keyword">this</span>.color,<span class="keyword">this</span>.name): <span class="keyword">super</span>.<span class="built_in">num</span>(name,<span class="number">3</span>);</span><br><span class="line">  Apple.con2() : <span class="keyword">super</span>.con(<span class="number">3</span>)&#123;</span><br><span class="line">    color = <span class="number">3</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//重写父类的fun2函数</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> fun2() &#123;</span><br><span class="line">    <span class="built_in">print</span>(color);</span><br><span class="line">    <span class="keyword">super</span>.fun2();<span class="comment">//调用父类的fun2方法</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">//子类自己的方法</span></span><br><span class="line">  <span class="keyword">void</span> fun3()&#123;</span><br><span class="line">    <span class="built_in">print</span>(nums);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="mixins"><a href="#mixins" class="headerlink" title="mixins"></a>mixins</h5><ul><li>类在Dart中只能继承一个父类。</li><li>mixin可理解为让类实现了继承多个父类的效果，但不是多继承，而是其目的是实现代码重用。</li></ul><p>声明一个with类</p><ul><li>跟声明普通类一样的方式。</li><li>区别在于，不声明构造函数，也不使用静态函数或变量。</li><li>纯粹的属性和函数。</li></ul><p>怎么使用？子类声明时</p><ul><li>后跟with+类名</li><li>with后可跟多个类，用“，”分开<br>看个例子：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">With1</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> getName() =&gt; <span class="string">'With1'</span>;<span class="comment">//三个类都有该方法</span></span><br><span class="line">  <span class="built_in">String</span> getAge()=&gt; <span class="string">"With1   10"</span> ;<span class="comment">//该类独有</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">With2</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> getName() =&gt; <span class="string">'With2'</span>;<span class="comment">//三个类都有该方法</span></span><br><span class="line">  <span class="built_in">String</span> getColor() =&gt; <span class="string">"With2   red"</span>;<span class="comment">//该类独有</span></span><br><span class="line">  <span class="built_in">int</span> getNum()=&gt; <span class="number">6</span>;<span class="comment">//该类和OtherClass都有</span></span><br><span class="line">  <span class="built_in">String</span> getFruit()=&gt;<span class="string">"With2   banana"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">OtherClass</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> getName() =&gt; <span class="string">'OtherClass'</span>;<span class="comment">//三个类都有该方法</span></span><br><span class="line">  <span class="built_in">int</span> getNum() =&gt; <span class="number">3</span>; <span class="comment">//该类和With2都有</span></span><br><span class="line">  <span class="built_in">int</span> getDesk() =&gt; <span class="number">333</span>;<span class="comment">//该类独有</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">String</span> getPhone()=&gt;<span class="string">"OtherClass   huawei"</span>;<span class="comment">//该类和子类</span></span><br><span class="line">  <span class="built_in">String</span> getFruit()=&gt;<span class="string">"OtherClass   apple"</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Child1</span> <span class="keyword">extends</span> <span class="title">OtherClass</span> <span class="title">with</span> <span class="title">With1</span> ,<span class="title">With2</span> </span>&#123;</span><br><span class="line">  <span class="comment">//重写父类</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">String</span> getPhone() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Child1   iphone"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">String</span> getFruit() &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"Child1  oriange"</span>;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Child2</span> <span class="keyword">extends</span> <span class="title">OtherClass</span> <span class="title">with</span> <span class="title">With2</span>, <span class="title">With1</span> </span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">void</span> main()&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"class Child1 extends OtherClass with With1 ,With2 &#123;&#125;"</span>);</span><br><span class="line">    Child1 c1 = Child1();</span><br><span class="line">    <span class="built_in">print</span>(c1.getPhone());<span class="comment">//Child1   iphone     重写了函数，调用时用的是自身的函数</span></span><br><span class="line">    <span class="built_in">print</span>(c1.getFruit());<span class="comment">//Child1  oriange     重写了函数，调用时用的是自身的函数</span></span><br><span class="line">    <span class="built_in">print</span>(c1.getDesk());<span class="comment">//333      调用的是OtherClass的函数  With1 With2中没有同名函数</span></span><br><span class="line">    <span class="built_in">print</span>(c1.getNum());<span class="comment">//6       调用的是With2中的函数</span></span><br><span class="line">    <span class="built_in">print</span>(c1.getAge());<span class="comment">//With1   10        调用的是With1中的函数</span></span><br><span class="line">    <span class="built_in">print</span>(c1.getColor());<span class="comment">//With2   red       调用的是With2中的函数</span></span><br><span class="line">    <span class="built_in">print</span>(c1.getName());<span class="comment">//With2          调用的是With2中的函数    With2在声明顺序中更靠后</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"-----------------------"</span>);</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"class Child2 extends OtherClass with With2, With1 &#123;&#125;"</span>);</span><br><span class="line">    Child2 c2 = Child2();</span><br><span class="line">    <span class="built_in">print</span>(c2.getPhone());<span class="comment">//OtherClass   huawei     没有重写函数，调用时用的是OtherClass的函数</span></span><br><span class="line">    <span class="built_in">print</span>(c2.getFruit());<span class="comment">//With2   banana    没有重写函数，调用时用的是With2的函数，虽然OtherClass也有，但With2在声明顺序中更靠后</span></span><br><span class="line">    <span class="built_in">print</span>(c2.getDesk());<span class="comment">//333     调用的是OtherClass的函数  With1 With2中没有同名函数</span></span><br><span class="line">    <span class="built_in">print</span>(c2.getNum());<span class="comment">//6     调用的是With2中的函数</span></span><br><span class="line">    <span class="built_in">print</span>(c2.getAge());<span class="comment">//With1   10       调用的是With1中的函数</span></span><br><span class="line">    <span class="built_in">print</span>(c2.getColor());<span class="comment">//With2   red      调用的是With2中的函数</span></span><br><span class="line">    <span class="built_in">print</span>(c2.getName());<span class="comment">//With1      调用的是With1中的函数    With1在声明顺序中更靠后</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>终极理解：</p><ul><li>A extends B with C,D{}</li><li>A 继承了B<br>并拥有了C和D所有的属性和函数，可以用A的实例直接调用CD的属性方法。</li><li>如果B有函数fun1，A重写了这个函数<br>那么以后A的实例调用的fun1，都是A重写后的方法。</li><li>如果B有函数fun1，CD中也有函数fun1，A重写了这个函数<br>那么以后A的实例调用的fun1，都是A重写后的方法。</li><li>如果B有函数fun1，CD中也有函数fun1，A没有重写这个函数<br>那么以后A的实例调用的fun1，是声明方法时最后的那个类的函数，比如“A<br>extends B with C,D”，那么就是D中的fun1，如果是“A extends B with<br>D,C”，那么就是C中的fun1。也就是说优先级是从后向前的（前提是子类没有重写函数）。</li></ul><h5 id="隐式接口"><a href="#隐式接口" class="headerlink" title="隐式接口"></a>隐式接口</h5><ul><li>与java不同，dart中没有专门定义接口的方式，dart中类即是接口。</li><li>一个类可以实现多个接口，也就是可以实现多个类，用implements。</li><li>一个类只能继承一个类，用extends。</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">X</span> </span>&#123;</span><br><span class="line">  <span class="built_in">int</span> x= <span class="number">19</span>;</span><br><span class="line">  <span class="keyword">void</span> funX()&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"X-X"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Y</span> </span>&#123;</span><br><span class="line">  <span class="built_in">String</span> y = <span class="string">"yyy"</span>;</span><br><span class="line">  <span class="keyword">void</span> funY()&#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Y-Y"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Z</span> <span class="keyword">implements</span> <span class="title">X</span>,<span class="title">Y</span></span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">int</span> x=<span class="number">33</span>;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">String</span> y=<span class="string">"33333"</span>;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> funX() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Z-X"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> funY() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"Z-Y"</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>Z 实现了类X Y ，那么Z中必须重写XY中所有的属性和函数。</li></ul><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
          <category> Dart </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> Dart </tag>
            
            <tag> Class </tag>
            
            <tag> 类 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dart：Map的属性和方法实例</title>
      <link href="/blog/2019/08/17/Dart%EF%BC%9AMap%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E6%96%B9%E6%B3%95%E5%AE%9E%E4%BE%8B/"/>
      <url>/blog/2019/08/17/Dart%EF%BC%9AMap%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E6%96%B9%E6%B3%95%E5%AE%9E%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<!-- build time:Tue Jan 07 2020 15:15:23 GMT+0800 (GMT+08:00) --><h5 id="声明"><a href="#声明" class="headerlink" title="声明"></a>声明</h5><p>不指定泛型</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> map1 = &#123;<span class="string">'aa'</span>:<span class="string">'aaa'</span>,<span class="string">'bb'</span>:<span class="number">22</span>,<span class="string">'cc'</span>:<span class="keyword">true</span>&#125;;<span class="comment">//直接赋初始值</span></span><br><span class="line">    <span class="comment">//print(map1);//&#123;aa: aaa, bb: 22, cc: true&#125;</span></span><br><span class="line">    <span class="built_in">Map</span> map3 = &#123;<span class="string">"a"</span>:<span class="string">"a1"</span>,<span class="string">"b"</span>:<span class="string">"b1"</span>&#125;;<span class="comment">//直接赋初始值</span></span><br><span class="line">    <span class="comment">//print(map3);//&#123;a: a1, b: b1&#125;</span></span><br><span class="line">    map3[<span class="string">"c"</span>] =<span class="string">"c"</span>;</span><br><span class="line">    <span class="comment">//print(map3);//&#123;a: a1, b: b1, c: c&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> map2 = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">    map2[<span class="string">'dd'</span>]=<span class="number">3.3</span>;</span><br><span class="line">    map2[<span class="number">2</span>] = <span class="string">'ddd22'</span>;</span><br><span class="line"><span class="comment">//    print(map2);//&#123;dd: 3.3, 2: ddd22&#125;</span></span><br><span class="line"><span class="comment">//    print(map2[3]);//null   如果不存在，则是null</span></span><br><span class="line">    map2[<span class="number">3</span>]= <span class="keyword">null</span>;<span class="comment">//key存在  value存在 value的值为null</span></span><br><span class="line"><span class="comment">//    print(map2.length);//3    长度</span></span><br></pre></td></tr></table></figure><p>指定泛型</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    <span class="keyword">var</span> map333 = &lt;<span class="built_in">String</span>,<span class="built_in">String</span>&gt;&#123;&#125;;</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">int</span>,<span class="built_in">String</span>&gt; map4 = <span class="keyword">new</span> <span class="built_in">Map</span>();</span><br><span class="line">    map4[<span class="number">1</span>]=<span class="string">"a"</span>;</span><br><span class="line">    map4[<span class="number">2</span>] = <span class="string">"b"</span>;</span><br><span class="line"><span class="comment">//    print(map4);//&#123;1: a, 2: b&#125;</span></span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map5 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>&#125;;</span><br><span class="line"><span class="comment">//    print(map5);//&#123;a: 1, b: 2&#125;</span></span><br></pre></td></tr></table></figure><h5 id="属性"><a href="#属性" class="headerlink" title="属性"></a>属性</h5><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map6 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>&#125;;</span><br><span class="line"><span class="comment">//    print(map6.length);//2  长度</span></span><br><span class="line"><span class="comment">//    print(map6.isNotEmpty);//true  是否不为空</span></span><br><span class="line"><span class="comment">//    print(map6.isEmpty);//false   是否为空</span></span><br><span class="line"><span class="comment">//    print(map6.keys);//(a, b)   key的集合</span></span><br><span class="line"><span class="comment">//    print(map6.values);//(1, 2)  value的集合</span></span><br><span class="line"><span class="comment">//    print(map6.entries);//(MapEntry(a: 1), MapEntry(b: 2))   map迭代的键值对集合</span></span><br></pre></td></tr></table></figure><h5 id="方法"><a href="#方法" class="headerlink" title="方法"></a>方法</h5><p>新增一个key-value</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map7 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>,<span class="string">"d"</span>:<span class="number">4</span>,<span class="string">"e"</span>:<span class="number">5</span>&#125;;</span><br><span class="line">    <span class="comment">//新增一个key value</span></span><br><span class="line">    map7[<span class="string">"f"</span>] = <span class="number">6</span>;<span class="comment">//新增一个不存在的key</span></span><br><span class="line"><span class="comment">//    print(map7);//&#123;a: 1, b: 2, c: 3, d: 4, e: 5, f: 6&#125;</span></span><br></pre></td></tr></table></figure><p>修改一个key的value</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map8 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>,<span class="string">"d"</span>:<span class="number">4</span>,<span class="string">"e"</span>:<span class="number">5</span>&#125;;</span><br><span class="line">map8[<span class="string">"a"</span>] = <span class="number">11</span>;</span><br><span class="line"><span class="comment">//print(map8);//&#123;a: 11, b: 2, c: 3, d: 4, e: 5&#125;</span></span><br></pre></td></tr></table></figure><p>update() 对指定的key的value做出修改</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map23 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>&#125;;</span><br><span class="line">    <span class="built_in">int</span> result3 = map23.update(<span class="string">"a"</span>, (value)=&gt;(value*<span class="number">2</span>));<span class="comment">//key存在  根据参数函数修改其值</span></span><br><span class="line"><span class="comment">//    print(result3);//2</span></span><br><span class="line"><span class="comment">//    print(map23);//&#123;a: 2, b: 2, c: 3&#125;</span></span><br><span class="line"><span class="comment">//    int result4 = map23.update("d", (value)=&gt;(value*2));//key不存在  报错</span></span><br><span class="line">    <span class="built_in">int</span> result4 = map23.update(<span class="string">"d"</span>, (value)=&gt;(value*<span class="number">2</span>),ifAbsent: ()=&gt;(<span class="number">10</span>));<span class="comment">//key不存在  但有ifAbsent参数 返回ifAbsent函数的值  并添加到map中</span></span><br><span class="line"><span class="comment">//    print(result4);//10</span></span><br><span class="line"><span class="comment">//    print(map23);//&#123;a: 2, b: 2, c: 3, d: 10&#125;</span></span><br></pre></td></tr></table></figure><p>updateAll() 根据参数函数的规则，批量修改map</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map24 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>&#125;;</span><br><span class="line">    map24.updateAll((<span class="built_in">String</span> key,<span class="built_in">int</span> value)&#123;</span><br><span class="line">      <span class="keyword">return</span> value*<span class="number">2</span>;</span><br><span class="line">    &#125;);<span class="comment">//</span></span><br><span class="line"><span class="comment">//    print(map24);//&#123;a: 2, b: 4, c: 6&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map25 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>&#125;;</span><br><span class="line">    map25.updateAll((<span class="built_in">String</span> key,<span class="built_in">int</span> value)&#123;</span><br><span class="line">      <span class="keyword">if</span>(key==<span class="string">"a"</span>)&#123;<span class="keyword">return</span> <span class="number">10</span>;&#125;</span><br><span class="line">      <span class="keyword">if</span>(key==<span class="string">"b"</span>)&#123;<span class="keyword">return</span> <span class="number">20</span>;&#125;</span><br><span class="line">      <span class="keyword">return</span> value*<span class="number">2</span>;</span><br><span class="line">    &#125;);<span class="comment">//</span></span><br><span class="line"><span class="comment">//    print(map25);//&#123;a: 10, b: 20, c: 6&#125;</span></span><br></pre></td></tr></table></figure><p>remove() 删除一个key</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map9 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>,<span class="string">"d"</span>:<span class="number">4</span>,<span class="string">"e"</span>:<span class="number">5</span>&#125;;</span><br><span class="line">map9.remove(<span class="string">"b"</span>);</span><br><span class="line"><span class="comment">//print(map9);//&#123;a: 11, c: 3, d: 4, e: 5&#125;</span></span><br></pre></td></tr></table></figure><p>removeWhere() 根据条件批量删除</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map10 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>,<span class="string">"d"</span>:<span class="number">4</span>,<span class="string">"e"</span>:<span class="number">5</span>&#125;;</span><br><span class="line">map10.removeWhere((key,value)=&gt;(value&gt;<span class="number">3</span>));<span class="comment">//删除掉 符合参数函数的keyvalue对</span></span><br><span class="line"><span class="comment">//print(map10);//&#123;a: 1, b: 2, c: 3&#125;</span></span><br></pre></td></tr></table></figure><p>containsKey() 是否包含key</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map11 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>,<span class="string">"d"</span>:<span class="number">4</span>,<span class="string">"e"</span>:<span class="number">5</span>&#125;;</span><br><span class="line"><span class="comment">//    print(map11.containsKey("a"));//true   是否包含key</span></span><br><span class="line"><span class="comment">//    print(map11.containsKey("aa"));//false  是否包含key</span></span><br></pre></td></tr></table></figure><p>containsValue() 是否包含value值</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map17 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>&#125;;</span><br><span class="line"><span class="comment">//    print(map17.containsValue(1));//true</span></span><br><span class="line"><span class="comment">//    print(map17.containsValue(4));//false</span></span><br></pre></td></tr></table></figure><p>forEach() 遍历</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map12 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>,<span class="string">"d"</span>:<span class="number">4</span>,<span class="string">"e"</span>:<span class="number">5</span>&#125;;</span><br><span class="line">    map12.forEach((<span class="built_in">String</span> key,<span class="built_in">int</span> value)&#123;</span><br><span class="line"><span class="comment">//      print("$key  $value");</span></span><br><span class="line"><span class="comment">//       a  1</span></span><br><span class="line"><span class="comment">//       b  2</span></span><br><span class="line"><span class="comment">//       c  3</span></span><br><span class="line"><span class="comment">//       d  4</span></span><br><span class="line"><span class="comment">//       e  5</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历时修改value值</span></span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map13 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>&#125;;</span><br><span class="line">    map13.forEach((<span class="built_in">String</span> key,<span class="built_in">int</span> value)&#123;</span><br><span class="line"><span class="comment">//      print("$key  $value");</span></span><br><span class="line">      map13[<span class="string">"c"</span>] = <span class="number">4</span>;</span><br><span class="line"><span class="comment">//       a  1</span></span><br><span class="line"><span class="comment">//       b  2</span></span><br><span class="line"><span class="comment">//       c  4</span></span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历时，新增或删除key  都会报错</span></span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map14 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>&#125;;</span><br><span class="line">    map14.forEach((<span class="built_in">String</span> key,<span class="built_in">int</span> value)&#123;</span><br><span class="line"><span class="comment">//      print("$key  $value");</span></span><br><span class="line"><span class="comment">//      map14["d"] = 4;//  报错</span></span><br><span class="line"><span class="comment">//    map14.remove("a");//  报错</span></span><br><span class="line">    &#125;);</span><br></pre></td></tr></table></figure><p>map() 遍历每个元素<br>根据参数函数，对keyvalue做出修改，可转换成其他泛型的Map</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map19 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>&#125;;</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">int</span>,<span class="built_in">String</span>&gt; map20 = map19.map((<span class="built_in">String</span> key,<span class="built_in">int</span> value)&#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> MapEntry(value, key);</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="comment">//    print(map20);//&#123;1: a, 2: b, 3: c&#125;</span></span><br></pre></td></tr></table></figure><p>clear() 清空map</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map15 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>&#125;;</span><br><span class="line">    map15.clear();</span><br><span class="line"><span class="comment">//    print(map15);//&#123;&#125;</span></span><br></pre></td></tr></table></figure><p>addAll() 整体合并另一个map 泛型要一致</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map16 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>&#125;;</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; other = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"c"</span>:<span class="number">4</span>,<span class="string">"d"</span>:<span class="number">7</span>&#125;;</span><br><span class="line">    map16.addAll(other);<span class="comment">//key相同时value值后者覆盖前者，前者不存在时则添加进来</span></span><br><span class="line"><span class="comment">//    print(map16);//&#123;a: 1, b: 2, c: 4, d: 7&#125;</span></span><br></pre></td></tr></table></figure><p>addEntries() 合并两个map 如果key有重复，被合并的map的value覆盖前者</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map26 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>&#125;;</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map27 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">4</span>,<span class="string">"d"</span>:<span class="number">3</span>,<span class="string">"e"</span>:<span class="number">5</span>&#125;;</span><br><span class="line">    map26.addEntries(map27.entries);</span><br><span class="line"><span class="comment">//    print(map26);//&#123;a: 1, b: 4, c: 3, d: 3, e: 5&#125;</span></span><br></pre></td></tr></table></figure><p>putIfAbsent() 存在key就获取值，不存在则添加到map 然后返回值</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map18 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>&#125;;</span><br><span class="line">    <span class="built_in">int</span> result = map18.putIfAbsent(<span class="string">"a"</span>, ()=&gt;(<span class="number">2</span>));<span class="comment">//存在</span></span><br><span class="line"><span class="comment">//    print(result);//1   获取key的值</span></span><br><span class="line"><span class="comment">//    print(map18);//&#123;a: 1, b: 2, c: 3&#125;   map不变</span></span><br><span class="line">    <span class="built_in">int</span> result2 = map18.putIfAbsent(<span class="string">"d"</span>, ()=&gt;(<span class="number">2</span>));<span class="comment">//不存在</span></span><br><span class="line"><span class="comment">//    print(result2);//2   获取新的key的value</span></span><br><span class="line"><span class="comment">//    print(map18);//&#123;a: 1, b: 2, c: 3, d: 2&#125;   map改变</span></span><br></pre></td></tr></table></figure><p>cast() 泛型类型提升为其父祖类</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">String</span>,<span class="built_in">int</span>&gt; map21 = &#123;<span class="string">"a"</span>:<span class="number">1</span>,<span class="string">"b"</span>:<span class="number">2</span>,<span class="string">"c"</span>:<span class="number">3</span>&#125;;</span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">Object</span>,<span class="built_in">Object</span>&gt; map22 = map21.cast();</span><br><span class="line">    map22[<span class="string">"d"</span>]=<span class="number">33</span>;</span><br><span class="line"><span class="comment">//    print(map22);//&#123;a: 1, b: 2, c: 3, d: 33&#125;</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
          <category> Dart </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> Map </tag>
            
            <tag> Dart </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Dart：List的属性和方法实例</title>
      <link href="/blog/2019/08/17/Dart%EF%BC%9AList%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E6%96%B9%E6%B3%95%E5%AE%9E%E4%BE%8B/"/>
      <url>/blog/2019/08/17/Dart%EF%BC%9AList%E7%9A%84%E5%B1%9E%E6%80%A7%E5%92%8C%E6%96%B9%E6%B3%95%E5%AE%9E%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<!-- build time:Tue Jan 07 2020 15:15:23 GMT+0800 (GMT+08:00) --><h5 id="声明："><a href="#声明：" class="headerlink" title="声明："></a>声明：</h5><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> list1 = <span class="built_in">List</span>();<span class="comment">// 不限定长度，不限定类型，可添加任意类型的数据</span></span><br><span class="line"><span class="built_in">List</span> list2 = <span class="built_in">List</span>();<span class="comment">// 不限定长度，不限定类型，可添加任意类型的数据</span></span><br><span class="line"><span class="built_in">List</span> list3 = <span class="built_in">List</span>(<span class="number">2</span>);<span class="comment">//限定了长度为2  越界会报错，不限定类型，可添加任意类型的数据</span></span><br><span class="line"></span><br><span class="line">list1.add(<span class="number">1</span>);</span><br><span class="line">list1.add(<span class="string">'aaa'</span>);</span><br><span class="line">list1.add(<span class="keyword">true</span>);</span><br><span class="line"><span class="built_in">print</span>(list1);<span class="comment">//[1, aaa, true]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> list4 = [<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>];<span class="comment">//初始就赋值了，限定了长度，限定了类型，只能是int</span></span><br><span class="line"><span class="keyword">var</span> list5 = [<span class="number">2</span>,<span class="string">'3'</span>,<span class="keyword">true</span>];<span class="comment">//初始就赋值了，限定了长度，限定了类型，任意位置可用任意类型替换</span></span><br><span class="line"><span class="built_in">List</span> list6 = [<span class="string">'a'</span>,<span class="number">2</span>,<span class="string">'b'</span>,<span class="keyword">false</span>];<span class="comment">//初始就赋值了，限定了长度，限定了类型，任意位置可用任意类型替换</span></span><br><span class="line">list5[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line">list5[<span class="number">2</span>] = <span class="string">'aa'</span>;</span><br><span class="line"><span class="built_in">print</span>(list5);<span class="comment">//[2, 2, aa]</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> list33 = &lt;<span class="built_in">String</span>&gt;[<span class="string">"a"</span>,<span class="string">"b"</span>];</span><br><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list7 = [<span class="string">'a'</span>,<span class="string">'b'</span>,<span class="string">'3'</span>];</span><br><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list8 = <span class="keyword">new</span> <span class="built_in">List</span>(<span class="number">2</span>);</span><br><span class="line">list8[<span class="number">0</span>]=(<span class="string">'aaa'</span>);</span><br><span class="line"><span class="built_in">print</span>(list8);<span class="comment">//[aaa, null]</span></span><br></pre></td></tr></table></figure><h5 id="常用属性"><a href="#常用属性" class="headerlink" title="常用属性"></a>常用属性</h5><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list13 = <span class="built_in">List</span>();</span><br><span class="line">list13.add(<span class="string">'aaa'</span>);</span><br><span class="line">list13.add(<span class="string">'bbb'</span>);</span><br><span class="line">list13.add(<span class="string">'ccc'</span>);</span><br><span class="line"><span class="built_in">print</span>(list13.length);<span class="comment">//3    长度</span></span><br><span class="line"><span class="built_in">print</span>(list13.isEmpty);<span class="comment">//false      是否为空</span></span><br><span class="line"><span class="built_in">print</span>(list13.isNotEmpty);<span class="comment">//true     是否不为空</span></span><br><span class="line"><span class="built_in">print</span>(list13.reversed);<span class="comment">//(ccc, bbb, aaa)      返回一个List的倒序排列的Iterable  不改变原List</span></span><br><span class="line"><span class="built_in">print</span>(list13.first);<span class="comment">//aaa    第一个元素</span></span><br><span class="line"><span class="built_in">print</span>(list13.last);<span class="comment">//ccc    最后一个元素</span></span><br></pre></td></tr></table></figure><h5 id="常用方法"><a href="#常用方法" class="headerlink" title="常用方法"></a>常用方法</h5><p>add() 添加一个元素到List末尾</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list9 = <span class="built_in">List</span>();</span><br><span class="line">list9.add(<span class="string">'aaa'</span>);</span><br><span class="line">list9.add(<span class="string">'bbb'</span>);</span><br><span class="line"><span class="built_in">print</span>(list9);<span class="comment">//[aaa, bbb]</span></span><br></pre></td></tr></table></figure><p>addAll() 两个List合并</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list10 = <span class="built_in">List</span>();</span><br><span class="line">list10.add(<span class="string">'aaa'</span>);</span><br><span class="line">list10.add(<span class="string">'bbb'</span>);</span><br><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list11 = <span class="built_in">List</span>();</span><br><span class="line">list11.add(<span class="string">'ccc'</span>);</span><br><span class="line">list11.add(<span class="string">'ddd'</span>);</span><br><span class="line">list11.addAll(list10);</span><br><span class="line"><span class="built_in">print</span>(list11);<span class="comment">//[ccc, ddd, aaa, bbb]</span></span><br></pre></td></tr></table></figure><p>insert(index,element) 在指定index处插入值</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list21 = <span class="built_in">List</span>();</span><br><span class="line">    list21.add(<span class="number">0</span>);</span><br><span class="line">    list21.add(<span class="number">1</span>);</span><br><span class="line">    list21.add(<span class="number">2</span>);</span><br><span class="line">    list21.add(<span class="number">3</span>);</span><br><span class="line">    <span class="built_in">print</span>(list21);<span class="comment">//[0, 1, 2, 3]</span></span><br><span class="line">    list21.insert(<span class="number">1</span>, <span class="number">5</span>);  <span class="comment">//指定索引位置 插入值，其余顺延</span></span><br><span class="line">    <span class="built_in">print</span>(list21);<span class="comment">// [0, 5, 1, 2, 3]</span></span><br></pre></td></tr></table></figure><p>insertAll(index,list) 在指定index处插入list 其余顺延</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list25 = <span class="built_in">List</span>();</span><br><span class="line">list25.add(<span class="number">0</span>);</span><br><span class="line">list25.add(<span class="number">1</span>);</span><br><span class="line">list25.add(<span class="number">2</span>);</span><br><span class="line">list25.add(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">print</span>(list25);<span class="comment">//[0, 1, 2, 3]</span></span><br><span class="line">list25.insertAll(<span class="number">1</span>, [<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>]);</span><br><span class="line"><span class="built_in">print</span>(list25);<span class="comment">//[0, 5, 6, 7, 1, 2, 3]</span></span><br></pre></td></tr></table></figure><p>followedBy(list) 将自身和参数内list合成一个List</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list45 = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>];</span><br><span class="line">    <span class="built_in">Iterable</span>&lt;<span class="built_in">int</span>&gt; list46 = list45.followedBy([<span class="number">6</span>,<span class="number">7</span>]);<span class="comment">//拼接两个list</span></span><br><span class="line"><span class="comment">//    print(list46);//(3, 4, 1, 2, 5, 6, 7)</span></span><br><span class="line"><span class="comment">//    print(list46.toList());//[3, 4, 1, 2, 5, 6, 7]</span></span><br><span class="line"><span class="comment">//    print(list46.toList(growable: false));//[3, 4, 1, 2, 5, 6, 7]  growable=false  表示生成的List的长度固定  不可再增加新元素</span></span><br></pre></td></tr></table></figure><p>remove(obj) 删除具体的元素<br>removeAt(index) 删除索引位置元素</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list15 = <span class="built_in">List</span>();</span><br><span class="line">list15.add(<span class="string">'aaa'</span>);</span><br><span class="line">list15.add(<span class="string">'bbb'</span>);</span><br><span class="line">list15.add(<span class="string">'ccc'</span>);</span><br><span class="line"><span class="built_in">print</span>(list15);<span class="comment">//[aaa, bbb, ccc]</span></span><br><span class="line">list15.remove(<span class="string">'bbb'</span>);<span class="comment">// 直接根据元素的值删除</span></span><br><span class="line"><span class="built_in">print</span>(list15);<span class="comment">// [aaa, ccc]</span></span><br><span class="line">list15.removeAt(<span class="number">1</span>);<span class="comment">//根据索引位置删除</span></span><br><span class="line"><span class="built_in">print</span>(list15);<span class="comment">//[aaa]</span></span><br></pre></td></tr></table></figure><p>removeLast()删除末尾元素<br>removeRange(start,end) 范围删除<br>removeWhere() 根据条件删除</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list16 = <span class="built_in">List</span>();</span><br><span class="line">list16.add(<span class="string">'aaa'</span>);</span><br><span class="line">list16.add(<span class="string">'bbb'</span>);</span><br><span class="line">list16.add(<span class="string">'ccc'</span>);</span><br><span class="line">list16.add(<span class="string">'ddd'</span>);</span><br><span class="line">list16.add(<span class="string">'eee'</span>);</span><br><span class="line">list16.add(<span class="string">'fff'</span>);</span><br><span class="line"><span class="built_in">print</span>(list16);<span class="comment">//[aaa, bbb, ccc, ddd, eee, fff]</span></span><br><span class="line">list16.removeLast();<span class="comment">//删除末尾元素</span></span><br><span class="line"><span class="built_in">print</span>(list16);<span class="comment">//[aaa, bbb, ccc, ddd, eee]</span></span><br><span class="line">list16.removeRange(<span class="number">0</span>, <span class="number">2</span>);<span class="comment">//删除索引从0-2的元素 含头不含尾</span></span><br><span class="line"><span class="built_in">print</span>(list16);<span class="comment">//[ccc, ddd, eee]</span></span><br><span class="line">list16.removeWhere((element)&#123; <span class="keyword">return</span> element==<span class="string">'ddd'</span>;&#125;);<span class="comment">//根据条件 筛选，这里表示删除元素值为ddd的元素</span></span><br><span class="line"><span class="built_in">print</span>(list16);<span class="comment">//[ccc, eee]</span></span><br><span class="line">list16.removeWhere((element)=&gt; element==<span class="string">'ccc'</span>);<span class="comment">//条件只有一个表达式时，可以用箭头函数简化写法</span></span><br><span class="line"><span class="built_in">print</span>(list16);<span class="comment">//[eee]</span></span><br></pre></td></tr></table></figure><p>clear() 清空数组</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list17 = <span class="built_in">List</span>();</span><br><span class="line">list17.add(<span class="string">'aaa'</span>);</span><br><span class="line">list17.add(<span class="string">'bbb'</span>);</span><br><span class="line">list17.add(<span class="string">'ccc'</span>);</span><br><span class="line">list17.add(<span class="string">'ddd'</span>);</span><br><span class="line"><span class="built_in">print</span>(list17);<span class="comment">//[aaa, bbb, ccc, ddd]</span></span><br><span class="line">list17.clear();<span class="comment">//清空数组</span></span><br><span class="line"><span class="built_in">print</span>(list17);<span class="comment">//[]</span></span><br></pre></td></tr></table></figure><p>修改指定index位置的值</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> list12 = [<span class="number">2</span>,<span class="string">'3'</span>,<span class="keyword">true</span>];</span><br><span class="line">list12[<span class="number">1</span>] = <span class="number">2</span>;</span><br><span class="line"><span class="built_in">print</span>(list12);<span class="comment">// [2, 2, true]</span></span><br></pre></td></tr></table></figure><p>setRange(startIndex,endIndex,list) 范围修改List的值</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"> <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list18 = <span class="built_in">List</span>();</span><br><span class="line">    list18.add(<span class="string">'aaa'</span>);</span><br><span class="line">    list18.add(<span class="string">'bbb'</span>);</span><br><span class="line">    list18.add(<span class="string">'ccc'</span>);</span><br><span class="line">    list18.add(<span class="string">'ddd'</span>);</span><br><span class="line"><span class="comment">//    print(list18);// [aaa, bbb, ccc, ddd]</span></span><br><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list19 = <span class="built_in">List</span>();</span><br><span class="line">    list19.add(<span class="string">"111"</span>);</span><br><span class="line">    list19.add(<span class="string">"222"</span>);</span><br><span class="line">    list19.add(<span class="string">"333"</span>);</span><br><span class="line">    list19.add(<span class="string">"444"</span>);</span><br><span class="line">    list19.add(<span class="string">"555"</span>);</span><br><span class="line">    list19.add(<span class="string">"666"</span>);</span><br><span class="line">    list18.setRange(<span class="number">0</span>,<span class="number">3</span>, list19);<span class="comment">//范围修改，从list19取出0 1 2位置的值，修改list18对应0 1 2位置的值，0-3含头不含尾，start和end相同，则不变。start和end任何一个超出list18 list19的角标 则报错。</span></span><br><span class="line"><span class="comment">//    print(list18);//[111, 222, ccc, ddd]</span></span><br></pre></td></tr></table></figure><p>replaceRange(start,end,list)范围替换 含头不含尾</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list27 = <span class="built_in">List</span>();</span><br><span class="line">    list27.add(<span class="number">0</span>);</span><br><span class="line">    list27.add(<span class="number">1</span>);</span><br><span class="line">    list27.add(<span class="number">2</span>);</span><br><span class="line">    list27.add(<span class="number">3</span>);</span><br><span class="line">    <span class="built_in">print</span>(list27);<span class="comment">//[0, 1, 2, 3]</span></span><br><span class="line">    list27.replaceRange(<span class="number">1</span>, <span class="number">3</span>, [<span class="number">5</span>,<span class="number">6</span>,<span class="number">7</span>,<span class="number">8</span>]);<span class="comment">//范围替换  含头不含尾</span></span><br><span class="line">    <span class="built_in">print</span>(list27);<span class="comment">//[0, 5, 6, 7, 8, 3]</span></span><br></pre></td></tr></table></figure><p>fillRange(start,end,value) 从start-end 每个元素用value替换</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list30 = <span class="built_in">List</span>();</span><br><span class="line">    list30.add(<span class="number">0</span>);</span><br><span class="line">    list30.add(<span class="number">1</span>);</span><br><span class="line">    list30.add(<span class="number">2</span>);</span><br><span class="line">    list30.add(<span class="number">3</span>);</span><br><span class="line">    list30.add(<span class="number">4</span>);</span><br><span class="line"><span class="comment">//    print(list30);//[0, 1, 2, 3, 4]</span></span><br><span class="line">    list30.fillRange(<span class="number">1</span>, <span class="number">4</span>,<span class="number">6</span>); <span class="comment">//用相同的值替换指定索引范围内的值</span></span><br><span class="line"><span class="comment">//    print(list30);//[0, 6, 6, 6, 4]</span></span><br></pre></td></tr></table></figure><p>retainWhere(()=&gt;(bool)) 根据条件筛选元素</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list31 = <span class="built_in">List</span>();</span><br><span class="line">    list31.add(<span class="number">0</span>);</span><br><span class="line">    list31.add(<span class="number">1</span>);</span><br><span class="line">    list31.add(<span class="number">2</span>);</span><br><span class="line">    list31.add(<span class="number">3</span>);</span><br><span class="line">    list31.add(<span class="number">4</span>);</span><br><span class="line"><span class="comment">//    print(list31);//[0, 1, 2, 3, 4]</span></span><br><span class="line">    list31.retainWhere((element)=&gt;(element&gt;<span class="number">2</span>)); <span class="comment">//根据条件保留住元素</span></span><br><span class="line"><span class="comment">//    print(list31);//[3, 4]</span></span><br></pre></td></tr></table></figure><p>setAll(index,list) 从index开始，使用list内的元素逐个替换本list中的元素</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list32 = <span class="built_in">List</span>();</span><br><span class="line">    list32.add(<span class="number">0</span>);</span><br><span class="line">    list32.add(<span class="number">1</span>);</span><br><span class="line">    list32.add(<span class="number">2</span>);</span><br><span class="line">    list32.add(<span class="number">3</span>);</span><br><span class="line">    list32.add(<span class="number">4</span>);</span><br><span class="line"><span class="comment">//    print(list32);//[0, 1, 2, 3, 4]</span></span><br><span class="line">    list32.setAll(<span class="number">2</span>, [<span class="number">7</span>,<span class="number">6</span>]);<span class="comment">//从指定index位置开始使用arr的值进行替换替换，index+arr.length必须&lt;=list32.length   否则报错</span></span><br><span class="line"><span class="comment">//    print(list32);//[0, 1, 7, 6, 4]</span></span><br></pre></td></tr></table></figure><p>查看index位置的值</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list14 = <span class="built_in">List</span>();</span><br><span class="line">list14.add(<span class="string">'aaa'</span>);</span><br><span class="line">list14.add(<span class="string">'bbb'</span>);</span><br><span class="line">list14.add(<span class="string">'ccc'</span>);</span><br><span class="line"><span class="built_in">print</span>(list14[<span class="number">0</span>]);<span class="comment">//aaa     查看指定索引位置的值</span></span><br><span class="line"><span class="built_in">print</span>(list14[<span class="number">2</span>]);<span class="comment">//ccc</span></span><br><span class="line"><span class="built_in">print</span>(list14.first);<span class="comment">//aaa     便捷操作  获取List第一个元素</span></span><br><span class="line"><span class="built_in">print</span>(list14.last);<span class="comment">//ccc     便捷操作  获取最后一个元素</span></span><br></pre></td></tr></table></figure><p>indexOf(element,[start]) 查找指定元素在list中的索引</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list24 = <span class="built_in">List</span>();</span><br><span class="line">list24.add(<span class="number">0</span>);</span><br><span class="line">list24.add(<span class="number">1</span>);</span><br><span class="line">list24.add(<span class="number">2</span>);</span><br><span class="line">list24.add(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">int</span> index1 = list24.indexOf(<span class="number">2</span>);  <span class="comment">//从索引0处开始查找指定元素，返回指定元素的索引</span></span><br><span class="line"><span class="built_in">int</span> index2 = list24.indexOf(<span class="number">2</span>,<span class="number">3</span>);<span class="comment">//从索引3处开始查找指定元素，如果存在返回元素索引，否则返回-1</span></span><br><span class="line"><span class="built_in">print</span>(index1);<span class="comment">//2</span></span><br><span class="line"><span class="built_in">print</span>(index2);<span class="comment">// -1</span></span><br></pre></td></tr></table></figure><p>lastIndexOf(obj,index) 从后往前查找，返回第一个的index</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list34 = <span class="built_in">List</span>();</span><br><span class="line">    list34.add(<span class="string">"aaa"</span>);</span><br><span class="line">    list34.add(<span class="string">"bbb"</span>);</span><br><span class="line">    list34.add(<span class="string">"ccc"</span>);</span><br><span class="line">    list34.add(<span class="string">"ddd"</span>);</span><br><span class="line">    list34.add(<span class="string">"eee"</span>);</span><br><span class="line"><span class="comment">//    print(list34);// [aaa, bbb, ccc, ddd, eee]</span></span><br><span class="line">    <span class="built_in">int</span> index = list34.lastIndexOf(<span class="string">"ccc"</span>,<span class="number">1</span>);<span class="comment">//从指定索引位置（包含）开始往前找指定的元素所在的索引，找不到返回-1</span></span><br><span class="line"><span class="comment">//    print(index);//-1</span></span><br><span class="line">    <span class="built_in">int</span> index3 = list34.lastIndexOf(<span class="string">"ccc"</span>,<span class="number">2</span>);<span class="comment">//从指定索引位置（包含）开始往前找指定的元素所在的索引，找不到返回-1</span></span><br><span class="line"><span class="comment">//    print(index3);//2</span></span><br></pre></td></tr></table></figure><p>elementAt(index) 获取指定索引位置的元素</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list40 = <span class="built_in">List</span>();</span><br><span class="line">    list40.add(<span class="string">"aaa"</span>);</span><br><span class="line">    list40.add(<span class="string">"bbb"</span>);</span><br><span class="line">    list40.add(<span class="string">"ccc"</span>);</span><br><span class="line">    list40.add(<span class="string">"ddd"</span>);</span><br><span class="line">    list40.add(<span class="string">"eee"</span>);</span><br><span class="line"><span class="comment">//    print(list40);// [aaa, bbb, ccc, ddd, eee]</span></span><br><span class="line">    <span class="built_in">String</span> result3 = list40.elementAt(<span class="number">4</span>);<span class="comment">//获取指定索引位置的元素</span></span><br><span class="line"><span class="comment">//    print(result3);//eee</span></span><br></pre></td></tr></table></figure><p>any((element)=&gt;(bool)) 判断List中是否有任意一个元素符合给定的参数</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list36 = <span class="built_in">List</span>();</span><br><span class="line">    list36.add(<span class="string">"aaa"</span>);</span><br><span class="line">    list36.add(<span class="string">"bbb"</span>);</span><br><span class="line">    list36.add(<span class="string">"ccc"</span>);</span><br><span class="line">    list36.add(<span class="string">"ddd"</span>);</span><br><span class="line">    list36.add(<span class="string">"eee"</span>);</span><br><span class="line"><span class="comment">//    print(list36);// [aaa, bbb, ccc, ddd, eee]</span></span><br><span class="line">    <span class="built_in">bool</span> result = list36.any((element)=&gt;(element==<span class="string">"d"</span>));<span class="comment">//判断list元素中是否有任何一个元素满足给定的条件，如果满足返回true 否则false</span></span><br><span class="line"><span class="comment">//    print(result);//false</span></span><br></pre></td></tr></table></figure><p>every((element)=&gt;(bool)) 判断List中是否每个元素都符合参数函数</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list41 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">    <span class="built_in">bool</span> result4 = list41.every((element)=&gt;(element%<span class="number">2</span>==<span class="number">0</span>));<span class="comment">//是否每个元素都符合条件   都符合返回true  否则返回false</span></span><br><span class="line">    <span class="built_in">bool</span> result5 = list41.every((element)=&gt;(element&gt;<span class="number">0</span>));</span><br><span class="line"><span class="comment">//    print(result4);//false</span></span><br><span class="line"><span class="comment">//    print(result5);//true</span></span><br></pre></td></tr></table></figure><p>contains(obj) List中是否存在给定的obj</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list39 = <span class="built_in">List</span>();</span><br><span class="line">    list39.add(<span class="string">"aaa"</span>);</span><br><span class="line">    list39.add(<span class="string">"bbb"</span>);</span><br><span class="line">    list39.add(<span class="string">"ccc"</span>);</span><br><span class="line">    list39.add(<span class="string">"ddd"</span>);</span><br><span class="line">    list39.add(<span class="string">"eee"</span>);</span><br><span class="line"><span class="comment">//    print(list39);// [aaa, bbb, ccc, ddd, eee]</span></span><br><span class="line">    <span class="built_in">bool</span> result2 = list39.contains(<span class="string">"eee"</span>);<span class="comment">//是否包含某元素</span></span><br><span class="line"><span class="comment">//    print(result2);//true</span></span><br></pre></td></tr></table></figure><p>firstWhere((element)=&gt;(bool))<br>返回第一个满足条件的元素（不是元素的index）</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list43 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">    <span class="built_in">int</span> result7 = list43.firstWhere((element)=&gt;(element&gt;<span class="number">2</span>));<span class="comment">//返回满足条件的第一个元素</span></span><br><span class="line"><span class="comment">//    int result8 = list43.firstWhere((element)=&gt;(element&gt;44));//返回满足条件的第一个元素，不满足 报错</span></span><br><span class="line">    <span class="built_in">int</span> result9 = list43.firstWhere((element)=&gt;(element&gt;<span class="number">44</span>),orElse: ()=&gt;(<span class="number">10</span>));<span class="comment">//返回满足条件的第一个元素，不满足 返回orElse方法的返回值</span></span><br><span class="line"><span class="comment">//    print(result7);//3</span></span><br><span class="line"><span class="comment">//    print(result8);//报错</span></span><br><span class="line"><span class="comment">//    print(result9);//10</span></span><br></pre></td></tr></table></figure><p>indexWhere((e)=&gt;(bool)) 返回第一个满足条件的元素的index<br>lastIndexWhere((e)=&gt;(bool)) 从后向前找 返回第一个满足条件的元素的index</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list48 = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>];</span><br><span class="line">    <span class="built_in">int</span> result12 = list48.indexWhere((e)=&gt;(e&gt;<span class="number">3</span>));<span class="comment">//返回第一个满足条件的元素的index</span></span><br><span class="line"><span class="comment">//    print(result12);//1</span></span><br><span class="line">    <span class="built_in">int</span> result14 = list48.indexWhere((e)=&gt;(e&gt;<span class="number">3</span>),<span class="number">2</span>);<span class="comment">//返回第一个满足条件的元素的index,从index为2开始寻找</span></span><br><span class="line"><span class="comment">//    print(result14);//4</span></span><br><span class="line">    <span class="built_in">int</span> result13= list48.indexWhere((e)=&gt;(e&gt;<span class="number">13</span>));<span class="comment">//返回第一个满足条件的元素的index  不存在则返回-1</span></span><br><span class="line"><span class="comment">//    print(result13);//-1</span></span><br><span class="line">    <span class="built_in">int</span> result15= list48.indexWhere((e)=&gt;(e&lt;<span class="number">2</span>),<span class="number">3</span>);<span class="comment">//返回第一个满足条件的元素的index ,从index为3开始寻找 不存在则返回-1</span></span><br><span class="line"><span class="comment">//    print(result15);//-1</span></span><br><span class="line"></span><br><span class="line">    <span class="built_in">int</span> result16 = list48.lastIndexWhere((e)=&gt;(e&gt;<span class="number">3</span>));<span class="comment">//从后向前找，返回第一个满足条件的元素的index</span></span><br><span class="line"><span class="comment">//    print(result16);//4</span></span><br><span class="line">    <span class="built_in">int</span> result17 = list48.lastIndexWhere((e)=&gt;(e&gt;<span class="number">3</span>),<span class="number">1</span>);<span class="comment">//从后向前找，返回第一个满足条件的元素的index,从index为1开始寻找</span></span><br><span class="line"><span class="comment">//    print(result17);//1</span></span><br><span class="line">    <span class="built_in">int</span> result18= list48.lastIndexWhere((e)=&gt;(e&gt;<span class="number">13</span>));<span class="comment">//从后向前找，返回第一个满足条件的元素的index  不存在则返回-1</span></span><br><span class="line"><span class="comment">//    print(result18);//-1</span></span><br><span class="line">    <span class="built_in">int</span> result19= list48.lastIndexWhere((e)=&gt;(e&lt;<span class="number">2</span>),<span class="number">3</span>);<span class="comment">//从后向前找，返回第一个满足条件的元素的index ,从index为3开始寻找 不存在则返回-1</span></span><br><span class="line"><span class="comment">//    print(result19);//2</span></span><br></pre></td></tr></table></figure><p>lastWhere((e)=&gt;(bool))<br>从后往前找，返回第一个满足条件的元素的值(不是index)</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list49 = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>];</span><br><span class="line"><span class="built_in">int</span> result20 = list49.lastWhere((e)=&gt;e&gt;<span class="number">2</span>);<span class="comment">//从后往前找，返回第一个满足条件的元素的值(不是index)</span></span><br><span class="line"><span class="comment">//print(result20);//5</span></span><br><span class="line"><span class="comment">//int result22 = list49.lastWhere((e)=&gt;e&gt;22);//从后往前找，返回第一个满足条件的元素的值(不是index)，没有找到则报错</span></span><br><span class="line"><span class="built_in">int</span> result21 = list49.lastWhere((e)=&gt;e&gt;<span class="number">11</span>,orElse: ()=&gt;(<span class="number">44</span>));<span class="comment">//从后往前找，返回第一个满足条件的元素的值(不是index),如果没有，则返回orElse的方法返回值</span></span><br><span class="line"><span class="comment">//print(result21);//44</span></span><br></pre></td></tr></table></figure><p>forEach() List遍历每个元素</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list47 = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>];</span><br><span class="line">    list47.forEach((element)&#123;<span class="comment">//遍历每个元素  此时不可add或remove  否则报错 但可以修改元素值，</span></span><br><span class="line">      element += <span class="number">1</span>;</span><br><span class="line"><span class="comment">//      print(element);//依次输出：4   5  2  1  6</span></span><br><span class="line">      list47[<span class="number">3</span>]=<span class="number">0</span>;<span class="comment">//直接修改list对应index的值</span></span><br><span class="line">      list47[<span class="number">0</span>]=<span class="number">0</span>;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="comment">//    print(list47);// [0, 4, 1, 0, 5]</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//for  List遍历每个元素</span></span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">var</span> x <span class="keyword">in</span> list47)&#123;</span><br><span class="line">      <span class="built_in">print</span>(x);<span class="comment">//0  4  1  0   5</span></span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>map() 遍历现有List的每个元素，并做处理，返回一个新的Iterable</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list51 = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>];</span><br><span class="line">    <span class="built_in">Iterable</span>&lt;<span class="built_in">String</span>&gt; result25 = list51.map((e)=&gt;(e&gt;<span class="number">2</span>?<span class="string">"a"</span>:<span class="string">"b"</span>));<span class="comment">//用指定方法对每个元素做操作，将结果组成一个新的Iterable</span></span><br><span class="line"><span class="comment">//    print(result25);//(a, a, b, b, a)</span></span><br><span class="line">    <span class="built_in">Iterable</span>&lt;<span class="built_in">bool</span>&gt; result26 = list51.map((e)=&gt;(e&gt;<span class="number">2</span>));</span><br><span class="line"><span class="comment">//    print(result26);//(true, true, false, false, true)</span></span><br></pre></td></tr></table></figure><p>fold(initValue,(preValue,element)=&gt;());<br>根据现有的List和给定的initValue,指定一个参数函数规则，对List每个元素做操作，并将结果返回。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list44 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">    <span class="built_in">int</span> result10 = list44.fold(<span class="number">2</span>, (a,element)=&gt;(a*element));<span class="comment">//2*(1*2*3*4*5)    2为初始值，后面的方法定义初始值和List之间的操作方式，并将结果返回。</span></span><br><span class="line"><span class="comment">//    print(result10);//240</span></span><br><span class="line">    <span class="built_in">int</span> result11 = list44.fold(<span class="number">2</span>, (a,element)=&gt;(a+element));<span class="comment">//2+(1+2+3+4+5) = 17</span></span><br><span class="line"><span class="comment">//    print(result11);//17</span></span><br></pre></td></tr></table></figure><p>reduce((a,b)=&gt;(某种操作)) 用指定的方法对元素做连续操作，将结果返回</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list52 = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>];</span><br><span class="line">    <span class="built_in">int</span> result27 = list52.reduce((a,b)=&gt;(a+b));<span class="comment">//3+4+1+2+5   用指定的方法对元素做连续操作，将结果返回</span></span><br><span class="line"><span class="comment">//    print(result27);//15</span></span><br><span class="line">    <span class="built_in">int</span> result28 = list52.reduce((a,b)=&gt;(a*b));<span class="comment">//3*4*1*2*5   用指定的方法对元素做连续操作，将结果返回</span></span><br><span class="line"><span class="comment">//    print(result28);//120</span></span><br></pre></td></tr></table></figure><p>skip(count)越过count个元素后，开始返回list的Iterable<br>skipWhile((e)=&gt;(bool))<br>根据参数函数，找到第一个不符合条件的元素，然后将其及其后的元素返回</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list54 = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>];</span><br><span class="line">    <span class="built_in">Iterable</span>&lt;<span class="built_in">int</span>&gt; result30 = list54.skip(<span class="number">2</span>);<span class="comment">//越过count个元素后，开始返回list的Iterable</span></span><br><span class="line"><span class="comment">//    print(result30);//(1, 2, 5)</span></span><br><span class="line">    <span class="built_in">Iterable</span>&lt;<span class="built_in">int</span>&gt; result31 = list54.skip(<span class="number">3</span>);</span><br><span class="line"><span class="comment">//    print(result31);//(2, 5)</span></span><br><span class="line">    <span class="built_in">Iterable</span>&lt;<span class="built_in">int</span>&gt; result32 = list54.skipWhile((e)=&gt;(e&gt;<span class="number">2</span>));<span class="comment">//从第一个元素开始，逐个判断是否符合参数函数，直至第一个不符合的元素，将其及其后面的元素返回</span></span><br><span class="line"><span class="comment">//    print(result32.toList());//[1, 2, 5]</span></span><br><span class="line">    <span class="built_in">Iterable</span>&lt;<span class="built_in">int</span>&gt; result35 = list54.skipWhile((e)=&gt;(e&lt;<span class="number">4</span>));<span class="comment">//从第一个元素开始，逐个判断是否符合参数函数，直至第一个不符合的元素，将其及其后面的元素返回</span></span><br><span class="line"><span class="comment">//    print(result35.toList());//[4, 1, 2, 5]</span></span><br><span class="line">    <span class="built_in">Iterable</span>&lt;<span class="built_in">int</span>&gt; result36 = list54.skipWhile((e)=&gt;(e&gt;<span class="number">0</span>));<span class="comment">//从第一个元素开始，逐个判断是否符合参数函数，直至第一个不符合的元素，将其及其后面的元素返回，如果都符合，返回一个空数组</span></span><br><span class="line"><span class="comment">//    print(result36.toList());//[]</span></span><br><span class="line">    <span class="built_in">Iterable</span>&lt;<span class="built_in">int</span>&gt; result37 = list54.skipWhile((e)=&gt;(e&lt;<span class="number">0</span>));<span class="comment">//从第一个元素开始，逐个判断是否符合参数函数，直至第一个不符合的元素，将其及其后面的元素返回，如果都不符合，全部返回。都不符合其实就是第一个就不符合，因此将第一个及后面的返回。</span></span><br><span class="line"><span class="comment">//    print(result37.toList());//[3, 4, 1, 2, 5]</span></span><br></pre></td></tr></table></figure><p>take(count) 从0开始取count个元素，并返回结果<br>takeWhile((e)=&gt;(bool))<br>从0开始取，直至第一个不符合函数的元素，将其前面的元素都返回。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list55 = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>];</span><br><span class="line">    <span class="built_in">Iterable</span>&lt;<span class="built_in">int</span>&gt; result33 = list55.take(<span class="number">2</span>);<span class="comment">//从0开始取2个元素  并返回</span></span><br><span class="line"><span class="comment">//    print(result33);//(3, 4, 1)</span></span><br><span class="line">    <span class="built_in">Iterable</span>&lt;<span class="built_in">int</span>&gt; result34 = list55.takeWhile((e)=&gt;(e&gt;<span class="number">2</span>));<span class="comment">//从第一个元素开始，逐个判断是否符合参数函数，直至第一个不符合的元素，将其前面元素都返回</span></span><br><span class="line"><span class="comment">//    print(result34);//(3, 4)</span></span><br></pre></td></tr></table></figure><p>where（(e)=&gt;(bool)<br>根据指定参数函数筛选每个元素，符合条件的元素组成一个新的Iterable</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list57 = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>];</span><br><span class="line"><span class="built_in">Iterable</span>&lt;<span class="built_in">int</span>&gt; result39 = list56.where((e)=&gt;(e&gt;<span class="number">2</span>));<span class="comment">//根据参数函数筛选</span></span><br><span class="line"><span class="comment">//print(result39);//(3, 4, 5, 3, 6)</span></span><br></pre></td></tr></table></figure><p>singleWhere((e)=&gt;(bool&gt;) 找到那唯一满足条件的元素</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list53 = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>];</span><br><span class="line">    <span class="built_in">int</span> result29 = list53.singleWhere((e)=&gt;(e&gt;<span class="number">4</span>),orElse: ()=&gt;(<span class="number">10</span>));<span class="comment">//找到那唯一满足条件的元素，如果没有满足条件的元素或有多个元素满足条件，就返回orElse方法的返回值，如果没有传入orElse则报错。</span></span><br><span class="line"><span class="comment">//    print(result29);//5</span></span><br></pre></td></tr></table></figure><p>whereType() 从无指定泛型的List中，筛选出指定类型的数据。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span> list58 = [<span class="number">3</span>, <span class="number">4</span>, <span class="string">"a"</span>,<span class="keyword">true</span>,<span class="string">"b"</span>,<span class="number">5</span>,<span class="keyword">false</span>];</span><br><span class="line"><span class="built_in">Iterable</span>&lt;<span class="built_in">int</span>&gt; result40 = list58.whereType();<span class="comment">//从混合类型的List中，筛选出指定类型的数据</span></span><br><span class="line"><span class="built_in">print</span>(result40);<span class="comment">//(3, 4, 5)</span></span><br><span class="line"><span class="built_in">Iterable</span>&lt;<span class="built_in">String</span>&gt; result41 = list58.whereType();</span><br><span class="line"><span class="built_in">print</span>(result41);<span class="comment">//(a, b)</span></span><br><span class="line"><span class="built_in">Iterable</span>&lt;<span class="built_in">bool</span>&gt; result42 = list58.whereType();</span><br><span class="line"><span class="built_in">print</span>(result42);<span class="comment">//(true, false)</span></span><br></pre></td></tr></table></figure><p>cast() 将List的泛型提升到其父祖类</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list37 = <span class="built_in">List</span>();</span><br><span class="line">    list37.add(<span class="string">"aaa"</span>);</span><br><span class="line">    list37.add(<span class="string">"bbb"</span>);</span><br><span class="line">    list37.add(<span class="string">"ccc"</span>);</span><br><span class="line">    list37.add(<span class="string">"ddd"</span>);</span><br><span class="line">    list37.add(<span class="string">"eee"</span>);</span><br><span class="line"><span class="comment">//    print(list37);// [aaa, bbb, ccc, ddd, eee]</span></span><br><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">Object</span>&gt; list38 = list37.cast();<span class="comment">//类型提升，将当前List&lt;String&gt; 提升为泛型的父祖类  List&lt;Object&gt;</span></span><br><span class="line">    list38.add(<span class="string">"222"</span>);<span class="comment">//必须添加同类型的元素   如果list38.add(2)  则报错</span></span><br><span class="line"><span class="comment">//    print(list38);//[aaa, bbb, ccc, ddd, eee, 222]</span></span><br></pre></td></tr></table></figure><p>expand() 根据现有的List，指定一个规则，生成一个新的List</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list42 = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>];</span><br><span class="line">    <span class="built_in">Iterable</span>&lt;<span class="built_in">int</span>&gt; result6 = list42.expand((element)=&gt;([element+<span class="number">1</span>,element+<span class="number">2</span>]));<span class="comment">//通过对元素操作，返回一组指定规则的新的集合</span></span><br><span class="line"><span class="comment">//    print(result6);//(2, 3, 3, 4, 4, 5, 5, 6, 6, 7)</span></span><br><span class="line"><span class="comment">//    print(result6.toList());//[2, 3, 3, 4, 4, 5, 5, 6, 6, 7]</span></span><br></pre></td></tr></table></figure><p>toSet() 将List转为Set 去除后面重复的元素</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list56 = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">6</span>];</span><br><span class="line"><span class="built_in">Set</span>&lt;<span class="built_in">int</span>&gt; result38 = list56.toSet();<span class="comment">//将list转为set,将后面重复的都去掉</span></span><br><span class="line"><span class="comment">//print(result38);//&#123;3, 4, 1, 2, 5, 6&#125;</span></span><br></pre></td></tr></table></figure><p>asMap() 将list转为map</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list33 = <span class="built_in">List</span>();</span><br><span class="line">    list33.add(<span class="string">"aaa"</span>);</span><br><span class="line">    list33.add(<span class="string">"bbb"</span>);</span><br><span class="line">    list33.add(<span class="string">"ccc"</span>);</span><br><span class="line">    list33.add(<span class="string">"ddd"</span>);</span><br><span class="line">    list33.add(<span class="string">"eee"</span>);</span><br><span class="line"><span class="comment">//    print(list33);// [aaa, bbb, ccc, ddd, eee]</span></span><br><span class="line">    <span class="built_in">Map</span>&lt;<span class="built_in">int</span>,<span class="built_in">String</span>&gt; map = list33.asMap();<span class="comment">//list转为map  key为index  value为list的值</span></span><br><span class="line"><span class="comment">//    print(map);//&#123;0: aaa, 1: bbb, 2: ccc, 3: ddd, 4: eee&#125;</span></span><br></pre></td></tr></table></figure><p>shuffle() List内元素，重新随机排列</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">String</span>&gt; list35 = <span class="built_in">List</span>();</span><br><span class="line">    list35.add(<span class="string">"aaa"</span>);</span><br><span class="line">    list35.add(<span class="string">"bbb"</span>);</span><br><span class="line">    list35.add(<span class="string">"ccc"</span>);</span><br><span class="line">    list35.add(<span class="string">"ddd"</span>);</span><br><span class="line">    list35.add(<span class="string">"eee"</span>);</span><br><span class="line"><span class="comment">//    print(list35);// [aaa, bbb, ccc, ddd, eee]</span></span><br><span class="line">    list35.shuffle();<span class="comment">//元素重新随机排列</span></span><br><span class="line"><span class="comment">//    print(list35);//[ddd, eee, aaa, ccc, bbb]</span></span><br></pre></td></tr></table></figure><p>sort() List自身排序</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list20 = <span class="built_in">List</span>();</span><br><span class="line">    list20.add(<span class="number">2</span>);</span><br><span class="line">    list20.add(<span class="number">3</span>);</span><br><span class="line">    list20.add(<span class="number">1</span>);</span><br><span class="line">    list20.add(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//    print(list20);//[2, 3, 1, 0]</span></span><br><span class="line">    list20.sort((a,b)=&gt;(a&gt;b?<span class="number">1</span>:<span class="number">-1</span>));<span class="comment">//自身排序  修改本身的list</span></span><br><span class="line"><span class="comment">//    print(list20);//[0, 1, 2, 3]</span></span><br></pre></td></tr></table></figure><p>sublist(start,[end]) 从指定index 截取list</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list21 = <span class="built_in">List</span>();</span><br><span class="line">list21.add(<span class="number">0</span>);</span><br><span class="line">list21.add(<span class="number">1</span>);</span><br><span class="line">list21.add(<span class="number">2</span>);</span><br><span class="line">list21.add(<span class="number">3</span>);</span><br><span class="line"><span class="built_in">print</span>(list21);<span class="comment">//[0, 1, 2, 3]</span></span><br><span class="line">list21.insert(<span class="number">1</span>, <span class="number">5</span>);  <span class="comment">//指定索引位置 插入值，其余顺延</span></span><br><span class="line"><span class="built_in">print</span>(list21);<span class="comment">// [0, 5, 1, 2, 3]</span></span><br><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list22 = list21.sublist(<span class="number">1</span>);<span class="comment">//从指定索引截取List</span></span><br><span class="line"><span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list23 = list21.sublist(<span class="number">1</span>,<span class="number">3</span>);<span class="comment">//从指定索引截取List  含头不含尾</span></span><br><span class="line"><span class="built_in">print</span>(list22);<span class="comment">//[5, 1, 2, 3]</span></span><br><span class="line"><span class="built_in">print</span>(list23);<span class="comment">//[5, 1]</span></span><br></pre></td></tr></table></figure><p>getRange(start,end) 从list中截取start-end范围内的数据</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list28 = <span class="built_in">List</span>();</span><br><span class="line">    list28.add(<span class="number">0</span>);</span><br><span class="line">    list28.add(<span class="number">1</span>);</span><br><span class="line">    list28.add(<span class="number">2</span>);</span><br><span class="line">    list28.add(<span class="number">3</span>);</span><br><span class="line">    list28.add(<span class="number">4</span>);</span><br><span class="line">    list28.add(<span class="number">5</span>);</span><br><span class="line">    list28.add(<span class="number">6</span>);</span><br><span class="line">    list28.add(<span class="number">7</span>);</span><br><span class="line"><span class="comment">//    print(list28);//[0, 1, 2, 3, 4, 5, 6, 7]</span></span><br><span class="line">    <span class="built_in">Iterable</span>&lt;<span class="built_in">int</span>&gt; list29 = list28.getRange(<span class="number">2</span>, <span class="number">5</span>);<span class="comment">//含头不含尾，从2开始到5（不含）结束的一个Iterable</span></span><br><span class="line"><span class="comment">//    print(list29);//(2, 3, 4)</span></span><br></pre></td></tr></table></figure><p>join(“-“) 用指定的字符将List中每个元素都连接起来，返回一个字符串</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    <span class="built_in">List</span>&lt;<span class="built_in">int</span>&gt; list50 = [<span class="number">3</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">5</span>];</span><br><span class="line">    <span class="built_in">String</span> result24 = list50.join(<span class="string">"-"</span>);<span class="comment">//用指定的字符将每个元素都连接起来，返回一个字符串</span></span><br><span class="line"><span class="comment">//    print(result24);//3-4-1-2-5</span></span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
          <category> Dart </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> Dart </tag>
            
            <tag> List </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter：Slivers大家族</title>
      <link href="/blog/2019/08/16/Flutter%EF%BC%9ASlivers%E5%A4%A7%E5%AE%B6%E6%97%8F/"/>
      <url>/blog/2019/08/16/Flutter%EF%BC%9ASlivers%E5%A4%A7%E5%AE%B6%E6%97%8F/</url>
      
        <content type="html"><![CDATA[<!-- build time:Tue Jan 07 2020 15:15:23 GMT+0800 (GMT+08:00) --><p>转自 <a href="https://juejin.im/post/5bceb534e51d457aa4596f9a" target="_blank" rel="noopener">掘金</a></p><p><strong>这篇文章写的比较早了，只是讲了些基础的东西，粗略扫一扫就行了。实际开发中会遇到更多的问题，比如头部自定义动画、上拉刷新/下拉加载、和TabBar组合使用等等场景，因此建议大家可看下法海大佬的扩展ListView的文章：<a href="https://juejin.im/post/5beb91275188251d9e0c1d73" target="_blank" rel="noopener">Flutter扩展NestedScrollView</a>，可以满足大部分开发场景。</strong></p><p><em>文中所有示例代码请点击：<a href="https://gitee.com/yumi0629/FlutterUI/tree/master/lib/sliver" target="_blank" rel="noopener">gitee.com/yumi0629/Fl…</a></em></p><p>今天呢，主要想给大家讲一讲Flutter中的<code>Slivers</code>大家族的使用场景和方法。开发过列表布局的同学们应该对<code>Slivers</code>系列的控件不陌生，或多或少都用过这个库中的控件，来解决复杂的滑动嵌套布局。</p><p>比如之前讲Hero的时候提到的下面这个界面，使用普通的GridView的话是没法实现的，我们选择使用<code>CustomScrollView</code>，然后在<code>slivers</code>属性中添加子控件，在这个例子里，我们可以用SliverToBoxAdapter来做HeaderView，GridView来做主体布局，整体为一个CustomScrollView，完全不会出现任何滑动冲突的问题。</p><p><img src="https://s2.ax1x.com/2019/08/16/mZwbY6.png" alt></p><p>Flutter中的<code>Slivers</code>大家族基本都是配合<code>CustomScrollView</code>来实现的，除了上面提到的滑动布局嵌套，你还可以使用<code>Slivers</code>来实现页面头部展开/收起、<br>AppBar随手势变换等等功能。官方的Sliver库里面的控件很多，可以去Flutter<br>API网站搜一下，这篇文章我只讲一些常用的控件。   OK, Let’s start !!</p><h2 id="SliverAppBar"><a href="#SliverAppBar" class="headerlink" title="SliverAppBar"></a>SliverAppBar</h2><p>如果你是一名Android开发者，一定使用过<code>CollapsingToolbarLayout</code>这个布局来实现AppBar展开/收起的功能，在Flutter里面则对应<code>SliverAppBar</code>控件。给<code>SliverAppBar</code>设置<code>flexibleSpace</code>和<code>expandedHeight</code>属性，就可以轻松完成AppBar展开/收起的功能：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">CustomScrollView(</span><br><span class="line">  slivers: &lt;Widget&gt;[</span><br><span class="line">    SliverAppBar(</span><br><span class="line">      actions: &lt;Widget&gt;[</span><br><span class="line">        _buildAction(),</span><br><span class="line">      ],</span><br><span class="line">      title: Text(<span class="string">'SliverAppBar'</span>),</span><br><span class="line">      backgroundColor: Theme.of(context).accentColor,</span><br><span class="line">      expandedHeight: <span class="number">200.0</span>,</span><br><span class="line">      flexibleSpace: FlexibleSpaceBar(</span><br><span class="line">        background: Image.asset(<span class="string">'images/food01.jpeg'</span>, fit: BoxFit.cover),</span><br><span class="line">      ),</span><br><span class="line">      <span class="comment">// floating: floating,</span></span><br><span class="line">      <span class="comment">// snap: snap,</span></span><br><span class="line">      <span class="comment">// pinned: pinned,</span></span><br><span class="line">    ),</span><br><span class="line">    SliverFixedExtentList(</span><br><span class="line">      itemExtent: <span class="number">120.0</span>,</span><br><span class="line">      delegate: SliverChildListDelegate(</span><br><span class="line">        products.map((product) &#123;</span><br><span class="line">          <span class="keyword">return</span> _buildItem(product);</span><br><span class="line">        &#125;).toList(),</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>​ <img src="https://s2.ax1x.com/2019/08/16/mZdBUx.gif" alt></p><p>​ 如果设置<code>floating</code>属性为<code>true</code>，那么AppBar会在你做出下拉手势时就立即展开（即使ListView并没有到达顶部），该展开状态不显示flexibleSpace：</p><p><img src="https://s2.ax1x.com/2019/08/16/mZdD56.gif" alt></p><p>如果同时设置<code>floating</code>和<code>snap</code>属性为<code>true</code>，那么AppBar会在你做出下拉手势时就立即全部展开（即使ListView并没有到达顶部），该展开状态显示flexibleSpace：</p><p><img src="https://s2.ax1x.com/2019/08/16/mZdsPK.gif" alt></p><p>如果不想AppBar消失，则设置<code>pinned</code>属性为<code>true</code>即可：</p><p><img src="https://s2.ax1x.com/2019/08/16/mZdtv4.gif" alt></p><h2 id="SliverList"><a href="#SliverList" class="headerlink" title="SliverList "></a>SliverList</h2><p><code>SliverList</code>的使用非常简单，只需设置<code>delegate</code>属性即可，我们一般使用<code>SliverChildBuilderDelegate</code>，注意记得设置<code>childCount</code>，否则Flutter没法知道怎么绘制：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">CustomScrollView(</span><br><span class="line">  slivers: &lt;Widget&gt;[</span><br><span class="line">    SliverList(</span><br><span class="line">      delegate: SliverChildBuilderDelegate(</span><br><span class="line">            (BuildContext context, <span class="built_in">int</span> index) &#123;</span><br><span class="line">          <span class="keyword">return</span> _buildItem(context, products[index]);</span><br><span class="line">        &#125;,</span><br><span class="line">        childCount: <span class="number">3</span>,</span><br><span class="line">      ),</span><br><span class="line">    )</span><br><span class="line">  ],</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/16/mZ0ONq.png" alt></p><p>你也可以通过下面的方式来设置childCount，如果不设置childCount，Flutter一旦发现delegate的某个index返回了null，就会认为childCount就是这个index。</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">delegate: SliverChildBuilderDelegate(</span><br><span class="line">    (BuildContext context, <span class="built_in">int</span> index) &#123;</span><br><span class="line">      <span class="keyword">if</span>(index&gt;products.length)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">      &#125;</span><br><span class="line">  <span class="keyword">return</span> _buildItem(context, products[index]);</span><br><span class="line">&#125;,</span><br></pre></td></tr></table></figure><p>你也可以使用<code>SliverChildListDelegate</code>来构建delegate：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">delegate: SliverChildListDelegate([</span><br><span class="line">  _buildItem(),</span><br><span class="line">  _buildItem(),</span><br><span class="line">  _buildItem(),</span><br><span class="line">]),</span><br></pre></td></tr></table></figure><p><code>SliverChildListDelegate</code>和<code>SliverChildBuilderDelegate</code>的区别：</p><ul><li>SliverChildListDelegate一般用来构item建数量明确的列表，会提前build好所有的子item，所以在效率上会有问题，适合item数量不多的情况（不超过一屏）。</li><li>SliverChildBuilderDelegate构建的列表理论上是可以无限长的，因为使用来lazily<br>construct优化。<br>（两者的区别有些类似于ListView和ListView.builder()的区别。）</li></ul><h2 id="SliverGrid"><a href="#SliverGrid" class="headerlink" title="SliverGrid "></a>SliverGrid</h2><p><code>SliverGrid</code>有三个构造函数：<code>SliverGrid.count()</code>、<code>SliverGrid.extent</code>和<code>SliverGrid()</code>。</p><ul><li><code>SliverGrid.count()</code>指定了一行展示多少个item，下面的例子表示一行展示4个：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SliverGrid.count(children: scrollItems, crossAxisCount: <span class="number">4</span>)</span><br></pre></td></tr></table></figure><p>​</p><ul><li><code>SliverGrid.extent</code>可以指定item的最大宽度，然后让Flutter自己决定一行展示多少个item：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">SliverGrid.extent(children: scrollItems, maxCrossAxisExtent: <span class="number">90.0</span>)</span><br></pre></td></tr></table></figure><p>​</p><ul><li><code>SliverGrid()</code>则是需要指定一个gridDelegate，它提供给了程序员一个自定义Delegate的入口，你可以自己决定每一个item怎么排列：</li></ul><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">SliverGrid(</span><br><span class="line">  gridDelegate: SliverGridDelegateWithFixedCrossAxisCount(</span><br><span class="line">    crossAxisCount: products.length,</span><br><span class="line">  ),</span><br><span class="line">  delegate: SliverChildBuilderDelegate(</span><br><span class="line">    (BuildContext context, <span class="built_in">int</span> index) &#123;</span><br><span class="line">      <span class="keyword">return</span> _buildItem(products[index]);;</span><br><span class="line">    &#125;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p><img src="https://s2.ax1x.com/2019/08/16/mZ0LEn.png" alt></p><h2 id="SliverPersistentHeader"><a href="#SliverPersistentHeader" class="headerlink" title="SliverPersistentHeader "></a>SliverPersistentHeader</h2><p><code>SliverPersistentHeader</code>顾名思义，就是给一个可滑动的视图添加一个头（实际上，在CustomScrollView的slivers列表中，header可以出现在视图的任意位置，不一定要是在顶部）。<strong>这个Header会随着滑动而展开/收起</strong>，使用<code>pinned</code>和<code>floating</code>属性来控制收起时Header是否展示（<code>pinned</code>和<code>floating</code>属性不可以同时为<code>true</code>）,<code>pinned</code>和<code>floating</code>属性的具体意义和SliverAppBar中相同，这里就不再次解释了。</p><p><img src="https://s2.ax1x.com/2019/08/16/mZd62D.gif" alt></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">SliverPersistentHeader(</span><br><span class="line">  pinned: pinned,</span><br><span class="line">  floating: floating,</span><br><span class="line">  delegate: _SliverAppBarDelegate(</span><br><span class="line">    minHeight: <span class="number">60.0</span>,</span><br><span class="line">    maxHeight: <span class="number">180.0</span>,</span><br><span class="line">    child: Container(),</span><br><span class="line">  ),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>构建一个<code>SliverPersistentHeader</code>需要传入一个delegate，这个delegate是SliverPersistentHeaderDelegate类型的，而SliverPersistentHeaderDelegate是一个abstract类，我们不能直接new一个SliverPersistentHeaderDelegate出来，因此，我们需要自定义一个delegate来实现SliverPersistentHeaderDelegate类：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_SliverAppBarDelegate</span> <span class="keyword">extends</span> <span class="title">SliverPersistentHeaderDelegate</span> </span>&#123;</span><br><span class="line">  _SliverAppBarDelegate(&#123;</span><br><span class="line">    <span class="meta">@required</span> <span class="keyword">this</span>.minHeight,</span><br><span class="line">    <span class="meta">@required</span> <span class="keyword">this</span>.maxHeight,</span><br><span class="line">    <span class="meta">@required</span> <span class="keyword">this</span>.child,</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> minHeight;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> maxHeight;</span><br><span class="line">  <span class="keyword">final</span> Widget child;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">double</span> <span class="keyword">get</span> minExtent =&gt; minHeight;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">double</span> <span class="keyword">get</span> maxExtent =&gt; math.max(maxHeight, minHeight);</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(</span><br><span class="line">      BuildContext context, <span class="built_in">double</span> shrinkOffset, <span class="built_in">bool</span> overlapsContent) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> SizedBox.expand(child: child);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="built_in">bool</span> shouldRebuild(_SliverAppBarDelegate oldDelegate) &#123;</span><br><span class="line">    <span class="keyword">return</span> maxHeight != oldDelegate.maxHeight ||</span><br><span class="line">        minHeight != oldDelegate.minHeight ||</span><br><span class="line">        child != oldDelegate.child;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>写一个自定义SliverPersistentHeaderDelegate很简单，只需重写<code>build()</code>、<code>get maxExtent</code>、<code>get minExtent</code>和<code>shouldRebuild()</code>这四个方法，上面就是一个最简单的SliverPersistentHeaderDelegate的实现。其中，<code>maxExtent</code>表示header完全展开时的高度，<code>minExtent</code>表示header在收起时的最小高度。因此，对于我们上面的那个自定义Delegate，如果将<code>minHeight</code>和<code>maxHeight</code>的值设置为相同时，header就不会收缩了，这样的Header跟我们平常理解的Header更像。\</p><p>之前也提到了，实际使用时，header不一定要放在slivers列表的最前面，可以随意混搭，当然，一般来说不会有这种视觉需求的：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">CustomScrollView(</span><br><span class="line">  slivers: &lt;Widget&gt;[</span><br><span class="line">    _buildHeader(<span class="number">0</span>),</span><br><span class="line">    SliverGrid.count(</span><br><span class="line">      crossAxisCount: <span class="number">3</span>,</span><br><span class="line">      children: _products.map((product) &#123;</span><br><span class="line">        <span class="keyword">return</span> _buildItemGrid(product);</span><br><span class="line">      &#125;).toList(),</span><br><span class="line">    ),</span><br><span class="line">    _buildHeader(<span class="number">1</span>),</span><br><span class="line">    SliverFixedExtentList(</span><br><span class="line">      itemExtent: <span class="number">100.0</span>,</span><br><span class="line">      delegate: SliverChildListDelegate(</span><br><span class="line">        products.map((product) &#123;</span><br><span class="line">          <span class="keyword">return</span> _buildItemList(product);</span><br><span class="line">        &#125;).toList(),</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">    _buildHeader(<span class="number">2</span>),</span><br><span class="line">    SliverGrid(</span><br><span class="line">      gridDelegate: <span class="keyword">new</span> SliverGridDelegateWithMaxCrossAxisExtent(</span><br><span class="line">        maxCrossAxisExtent: <span class="number">200.0</span>,</span><br><span class="line">        mainAxisSpacing: <span class="number">10.0</span>,</span><br><span class="line">        crossAxisSpacing: <span class="number">10.0</span>,</span><br><span class="line">        childAspectRatio: <span class="number">3.0</span>,</span><br><span class="line">      ),</span><br><span class="line">      delegate: <span class="keyword">new</span> SliverChildBuilderDelegate(</span><br><span class="line">        (BuildContext context, <span class="built_in">int</span> index) &#123;</span><br><span class="line">          <span class="keyword">return</span> _buildItemGrid2(_products2[index]);</span><br><span class="line">        &#125;,</span><br><span class="line">        childCount: _products2.length,</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h2 id="SliverToBoxAdapter"><a href="#SliverToBoxAdapter" class="headerlink" title="SliverToBoxAdapter "></a>SliverToBoxAdapter</h2><p>SliverPersistentHeader一般来说都是会展开/收起的（除非minExtent和maxExtent值相同），那么如果想要在滚动视图中添加一个普通的控件，那么就可以使用<code>SliverToBoxAdapter</code>来将各种视图组合在一起，放在CustomListView中。</p><p><img src="https://s2.ax1x.com/2019/08/16/mZ0X40.png" alt></p><p>上图中框起来的部分全部都是SliverToBoxAdapter，结合SliverToBoxAdapter，滚动视图可以任意组合：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">CustomScrollView(</span><br><span class="line">  physics: ScrollPhysics(),</span><br><span class="line">  slivers: &lt;Widget&gt;[</span><br><span class="line">    SliverToBoxAdapter(</span><br><span class="line">      child: _buildHeader(),</span><br><span class="line">    ),</span><br><span class="line">    SliverGrid.count(</span><br><span class="line">      crossAxisCount: <span class="number">3</span>,</span><br><span class="line">      children: products.map((product) &#123;</span><br><span class="line">        <span class="keyword">return</span> _buildItemGrid(product);</span><br><span class="line">      &#125;).toList(),</span><br><span class="line">    ),</span><br><span class="line">    SliverToBoxAdapter(</span><br><span class="line">      child: _buildSearch(),</span><br><span class="line">    ),</span><br><span class="line">    SliverFixedExtentList(</span><br><span class="line">      itemExtent: <span class="number">100.0</span>,</span><br><span class="line">      delegate: SliverChildListDelegate(</span><br><span class="line">        products.map((product) &#123;</span><br><span class="line">          <span class="keyword">return</span> _buildItemList(product);</span><br><span class="line">        &#125;).toList(),</span><br><span class="line">      ),</span><br><span class="line">    ),</span><br><span class="line">    SliverToBoxAdapter(</span><br><span class="line">      child: _buildFooter(),</span><br><span class="line">    ),</span><br><span class="line">  ],</span><br><span class="line">);</span><br></pre></td></tr></table></figure><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> Android </tag>
            
            <tag> Slivers </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Flutter之drawer详细分析（你要的操作都有）</title>
      <link href="/blog/2019/06/28/03-Flutter%E4%B9%8Bdrawer%E8%AF%A6%E7%BB%86%E5%88%86%E6%9E%90/"/>
      <url>/blog/2019/06/28/03-Flutter%E4%B9%8Bdrawer%E8%AF%A6%E7%BB%86%E5%88%86%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<!-- build time:Tue Jan 07 2020 15:15:23 GMT+0800 (GMT+08:00) --><h2 id="1-简介"><a href="#1-简介" class="headerlink" title="1. 简介"></a>1. 简介</h2><hr><blockquote><p>这篇文章主要讲解有关drawer的一切。</p></blockquote><h2 id="2-初探"><a href="#2-初探" class="headerlink" title="2. 初探"></a>2. 初探</h2><hr><p>我们先来看看简单的<code>drawer</code>在Flutter的应用</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">HomePage</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _HomePageState createState() =&gt; _HomePageState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_HomePageState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">HomePage</span>&gt; </span>&#123;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: _appbar,</span><br><span class="line">      drawer: _drawer,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">get</span> _appbar=&gt;AppBar(</span><br><span class="line">    title: Text(<span class="string">'Drawer Test'</span>),</span><br><span class="line">  );</span><br><span class="line"></span><br><span class="line">  <span class="keyword">get</span> _drawer =&gt;Drawer(</span><br><span class="line">    child: Text(<span class="string">'This is Drawer'</span>),</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>​</p><p>然后运行一下项目： 如下图所示</p><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f758986113a6b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f7589866fd0db?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>可以看到，根据我们对<code>drawer</code>的认识，并不是想要的结果，所以这个<code>drawer</code>并不完整，然后我们继续添加代码，修改<code>drawer</code></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///...</span></span><br><span class="line">  <span class="keyword">get</span> _drawer =&gt; Drawer(</span><br><span class="line">    <span class="comment">///edit start</span></span><br><span class="line">        child: ListView(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            DrawerHeader(</span><br><span class="line">              decoration: BoxDecoration(</span><br><span class="line">                color: Colors.lightBlueAccent,</span><br><span class="line">              ),</span><br><span class="line">              child: Center(</span><br><span class="line">                child: SizedBox(</span><br><span class="line">                  width: <span class="number">60.0</span>,</span><br><span class="line">                  height: <span class="number">60.0</span>,</span><br><span class="line">                  child: CircleAvatar(</span><br><span class="line">                    child: Text(<span class="string">'R'</span>),</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line"></span><br><span class="line">            ListTile(</span><br><span class="line">              leading: Icon(Icons.settings),</span><br><span class="line">              title: Text(<span class="string">'设置'</span>),</span><br><span class="line">            )</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">    <span class="comment">///edit end</span></span><br><span class="line">      );</span><br></pre></td></tr></table></figure><p>我这里添加了 <code>ListView</code> =&gt; 装载抽屉的部件 <code>DrawerHeader</code> =&gt;抽屉的头部<br><code>SizeBox</code> =&gt; 用于限制CircleAvatar的大小 <code>CircleAvatar</code> =&gt; 头像部件<br><code>ListTile</code> =&gt; 一个名为”设置”的点击项 然后我们热部署一下</p><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f7589868b4bbd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>Oh，emmm….还是很丑的一个<code>drawer</code>嘢！上面那坨灰色的东西是怎么肥事！不急不急，我们慢慢来分析</p><h2 id="3-解决Drawer灰色头部"><a href="#3-解决Drawer灰色头部" class="headerlink" title="3. 解决Drawer灰色头部"></a>3. 解决Drawer灰色头部</h2><hr><p>因为加了一个<code>DrawerHeader</code>,所以，我们需要看看<code>DrawerHeader</code>里面是什么原因导致添加灰色的地方<code>DrawerHeader</code>源码：</p><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f761452c84b4b?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>可以看到: <code>Container</code>=&gt;限制高度（默认高度+状态栏高度）<code>BoxDecoration</code>=&gt; 底部添加毫无用处的分割线 <code>AnimatedContainer</code>=&gt;动画版的<code>Container</code>添加默认内边距+顶部状态栏高度的内边距嗯，感觉没错啊，这是怎么肥事，<code>MediaQuery.of(context).padding.top</code>是获取状态栏的高度，然后自身高度加上状态栏的高度，应该是显示蓝色才对,那会不会跟<code>ListView</code>有关系呢？<br>我们将<code>DrawerHeader</code>去掉看看</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">  <span class="keyword">get</span> _drawer =&gt; Drawer(</span><br><span class="line">        child: ListView(</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            <span class="comment">///edit start</span></span><br><span class="line"><span class="comment">//            DrawerHeader(</span></span><br><span class="line"><span class="comment">//              decoration: BoxDecoration(</span></span><br><span class="line"><span class="comment">//                color: Colors.lightBlueAccent,</span></span><br><span class="line"><span class="comment">//              ),</span></span><br><span class="line"><span class="comment">//              child: Center(</span></span><br><span class="line"><span class="comment">//                child: SizedBox(</span></span><br><span class="line"><span class="comment">//                  width: 60.0,</span></span><br><span class="line"><span class="comment">//                  height: 60.0,</span></span><br><span class="line"><span class="comment">//                  child: CircleAvatar(</span></span><br><span class="line"><span class="comment">//                    child: Text('R'),</span></span><br><span class="line"><span class="comment">//                  ),</span></span><br><span class="line"><span class="comment">//                ),</span></span><br><span class="line"><span class="comment">//              ),</span></span><br><span class="line"><span class="comment">//            ),</span></span><br><span class="line">            <span class="comment">///edit end</span></span><br><span class="line">            ListTile(</span><br><span class="line">              leading: Icon(Icons.settings),</span><br><span class="line">              title: Text(<span class="string">'设置'</span>),</span><br><span class="line">            )</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      );</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f7589870f2389?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>确实，跟<code>ListView</code>有关，这是什么原因导致<code>ListView</code>加上一个<code>statusBarHeight</code>大小的内边距呢？我们可以继续找<code>ListView</code>的源码</p><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f75898710734f?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>可以直接点击<code>ListView</code>的构造方法，跳转到455行可看到<br>1.当<code>ListView</code>的属性<code>padding</code>为空时，获取<code>MediaQueryData</code>的信息</p><p>2.因为<code>ListView</code>的滚动方向默认为垂直，会使用<code>mediaQueryVerticalPadding</code></p><p>3.<code>sliver</code>添加一层<code>MediaQuery</code>，这个表明<code>sliver</code>的子部件会使用该<code>MediaQuery</code>的值，根据判断，子部件会使用<code>mediaQueryHorizontalPadding</code>，而上面的两个复制：</p><p><code>mediaQueryHorizontalPadding</code><br>=&gt;将原有的<code>MediaQuery</code>的padding复制为<code>top</code>和<code>bottom</code>都为0，该值会被子部件使用，所以可以知道，DrawerHeader使用了该值，导致statusBarHeader为0<br><code>mediaQueryVerticalPadding</code><br>=&gt;将原有的<code>MediaQuery</code>的padding复制为<code>left</code>和<code>right</code>都为0</p><blockquote><p>所以，我们只要不让<code>ListView</code>的<code>padding</code>属性为空就可以了，这里我传入一个zero给ListView，然后把DrawerHeader的注释去掉，热部署一下</p></blockquote><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">get</span> _drawer =&gt; Drawer(</span><br><span class="line">      child: ListView(</span><br><span class="line">          <span class="comment">///edit start</span></span><br><span class="line">        padding: EdgeInsets.zero,</span><br><span class="line">          <span class="comment">///edit end</span></span><br><span class="line">        children: &lt;Widget&gt;[</span><br><span class="line">          DrawerHeader(</span><br><span class="line">            decoration: BoxDecoration(</span><br><span class="line">              color: Colors.lightBlueAccent,</span><br><span class="line">            ),</span><br><span class="line">            child: Center(</span><br><span class="line">              child: SizedBox(</span><br><span class="line">                width: <span class="number">60.0</span>,</span><br><span class="line">                height: <span class="number">60.0</span>,</span><br><span class="line">                child: CircleAvatar(</span><br><span class="line">                  child: Text(<span class="string">'R'</span>),</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">          ),</span><br><span class="line">          ListTile(</span><br><span class="line">            leading: Icon(Icons.settings),</span><br><span class="line">            title: Text(<span class="string">'设置'</span>),</span><br><span class="line">          )</span><br><span class="line">        ],</span><br><span class="line">      ),</span><br><span class="line">    );</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f7589a82b10cc?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>ok，我们成功解决了Drawer灰色头部</p><h2 id="4-定制Drawer的滑出大小"><a href="#4-定制Drawer的滑出大小" class="headerlink" title="4. 定制Drawer的滑出大小"></a>4. 定制Drawer的滑出大小</h2><hr><p>我们来看看<code>drawer</code>的源码，<strong>其实看源码并不是一件痛苦的事，我们一般直接跳到build方法就好</strong></p><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f761454d2fff6?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>可以看到Drawer这个部件就是我们平常的一些部件组合而成 <code>Semantics</code>=&gt;<br>语义，用于给无障碍的 <code>ConstrainedBox</code> =&gt;<br>限制Drawer的宽度的，以至于<code>Drawer</code>不会铺满你的屏幕 <code>Material</code> =&gt;<br>添加阴影的<br>咦！听我这样解(Hu)释(Che)，是不是对<code>Drawer</code>这个部件清晰了不少呀！<br>所以，其实<code>Drawer</code>就是一个普通的<code>StatelessWidget</code>，我们完全可以定(Fu)制(Zhi)我们的<code>Drawer</code>，比如定制<code>Drawer</code>的滑出大小</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SmartDrawer</span> <span class="keyword">extends</span> <span class="title">StatelessWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> elevation;</span><br><span class="line">  <span class="keyword">final</span> Widget child;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> semanticLabel;</span><br><span class="line"><span class="comment">///new start</span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> widthPercent;</span><br><span class="line"><span class="comment">///new end</span></span><br><span class="line">  <span class="keyword">const</span> SmartDrawer(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="keyword">this</span>.elevation = <span class="number">16.0</span>,</span><br><span class="line">    <span class="keyword">this</span>.child,</span><br><span class="line">    <span class="keyword">this</span>.semanticLabel,</span><br><span class="line"><span class="comment">///new start</span></span><br><span class="line">    <span class="keyword">this</span>.widthPercent = <span class="number">0.7</span>,</span><br><span class="line"><span class="comment">///new end</span></span><br><span class="line">  &#125;) : </span><br><span class="line"><span class="comment">///new start</span></span><br><span class="line">   <span class="keyword">assert</span>(widthPercent!=<span class="keyword">null</span>&amp;&amp;widthPercent&lt;<span class="number">1.0</span>&amp;&amp;widthPercent&gt;<span class="number">0.0</span>)</span><br><span class="line"><span class="comment">///new end</span></span><br><span class="line">   ,<span class="keyword">super</span>(key: key);</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">assert</span>(debugCheckHasMaterialLocalizations(context));</span><br><span class="line">    <span class="built_in">String</span> label = semanticLabel;</span><br><span class="line">    <span class="keyword">switch</span> (defaultTargetPlatform) &#123;</span><br><span class="line">      <span class="keyword">case</span> TargetPlatform.iOS:</span><br><span class="line">        label = semanticLabel;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> TargetPlatform.android:</span><br><span class="line">      <span class="keyword">case</span> TargetPlatform.fuchsia:</span><br><span class="line">        label = semanticLabel ?? MaterialLocalizations.of(context)?.drawerLabel;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">///new start</span></span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">double</span> _width=MediaQuery.of(context).size.width*widthPercent;</span><br><span class="line"><span class="comment">///new end</span></span><br><span class="line">    <span class="keyword">return</span> Semantics(</span><br><span class="line">      scopesRoute: <span class="keyword">true</span>,</span><br><span class="line">      namesRoute: <span class="keyword">true</span>,</span><br><span class="line">      explicitChildNodes: <span class="keyword">true</span>,</span><br><span class="line">      label: label,</span><br><span class="line">      child: ConstrainedBox(</span><br><span class="line"><span class="comment">///edit start</span></span><br><span class="line">        constraints: BoxConstraints.expand(width: _width),</span><br><span class="line"><span class="comment">///edit end</span></span><br><span class="line">        child: Material(</span><br><span class="line">          elevation: elevation,</span><br><span class="line">          child: child,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我这里将原来的<code>Drawer</code>代码基础上修改<code>_kWidth</code>的值，把它暴露给用户自己去定制，让他能传入一个<code>double</code>类型的宽度百分比，弹出根据屏幕的百分之几的<code>Drawer</code>，该值只允许传入大于0小于1的值，默认为0.7<br>下面我们将上面的Drawer改为我们的<code>SmartDrawer</code></p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///edit</span></span><br><span class="line"><span class="keyword">get</span> _drawer =&gt; SmartDrawer(</span><br><span class="line">        widthPercent: <span class="number">0.4</span>,</span><br><span class="line"><span class="comment">///edit</span></span><br><span class="line">        child: ListView(</span><br><span class="line">          padding: EdgeInsets.zero,</span><br><span class="line">          children: &lt;Widget&gt;[</span><br><span class="line">            DrawerHeader(</span><br><span class="line">              decoration: BoxDecoration(</span><br><span class="line">                color: Colors.lightBlueAccent,</span><br><span class="line">              ),</span><br><span class="line">              child: Center(</span><br><span class="line">                child: SizedBox(</span><br><span class="line">                  width: <span class="number">60.0</span>,</span><br><span class="line">                  height: <span class="number">60.0</span>,</span><br><span class="line">                  child: CircleAvatar(</span><br><span class="line">                    child: Text(<span class="string">'R'</span>),</span><br><span class="line">                  ),</span><br><span class="line">                ),</span><br><span class="line">              ),</span><br><span class="line">            ),</span><br><span class="line">            ListTile(</span><br><span class="line">              leading: Icon(Icons.settings),</span><br><span class="line">              title: Text(<span class="string">'设置'</span>),</span><br><span class="line">            )</span><br><span class="line">          ],</span><br><span class="line">        ),</span><br><span class="line">      );</span><br></pre></td></tr></table></figure><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f7589c15d9ab8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>可以看到，我们成功的修改了<code>Drawer</code>弹出的大小</p><h2 id="5-监听Drawer的弹出和关闭"><a href="#5-监听Drawer的弹出和关闭" class="headerlink" title="5. 监听Drawer的弹出和关闭"></a>5. 监听Drawer的弹出和关闭</h2><hr><p>监听<code>Drawer</code>这里官方给我们埋了一个坑<br>监听我们以<code>Tab</code>为例，Flutter会给我我们一个<code>XXXController</code>部件，而<code>Drawer</code>会不会也会有个<code>DrawerController</code>呢？</p><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f7589c84173dd?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>可以看到，Flutter是有一个<code>DrawerController</code>的,然后我们就将<code>DrawerController</code>添加到我们的<code>_drawer</code>中去</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">return</span> Scaffold(</span><br><span class="line">      appBar: _appbar,</span><br><span class="line"><span class="comment">///edit start</span></span><br><span class="line">      drawer: DrawerController(</span><br><span class="line">        child: _drawer,</span><br><span class="line">        alignment: DrawerAlignment.start,</span><br><span class="line">        drawerCallback: (isOpen) &#123;</span><br><span class="line">          <span class="built_in">print</span>(<span class="string">'打开状态：<span class="subst">$isOpen</span>'</span>);</span><br><span class="line">        &#125;,</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line"><span class="comment">///edit end</span></span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>我们来运行一下吧</p><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f7589ca74e7e1?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>当我点击<code>AppBar</code>中左边的按钮是发现，弹出了一个蒙版，<code>Drawer</code>并没有弹出来，这是怎么回事？别急，我们开启一下布局边界</p><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f7589dd65f457?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>点击Toggle Debug Paint按钮</p><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f7589dd795689?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>会发现，你的布局左边有一条矩形，这个是什么，我们在左边矩形区域拖动一下看看</p><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f758a60432cb8?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>诶！我们的<code>Drawer</code>出现了，这是什么回事？为什么要拖动两遍才出现,神奇了？<strong>别急，这一切都可以分析</strong> 我们先来看看<code>Scaffold</code>是怎么定义<code>Drawer</code>的 <code>Scaffold</code>源码</p><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f761458c93b9c?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>该代码比较简单： 1.先判断<code>drawer</code>是否为空，若不为空添加<code>drawer</code></p><ol start="2"><li><p><code>_addIfNonNull</code>该方法从命名可以看出若不为空添加到children里面</p></li><li><p>这里被添加了一个<code>DrawerController</code>，可知道Flutter写死了一个DrawerController（这个真的很郁闷，还不把<code>callback</code>放出来给用户）<br>由此可以点击<code>_drawerOpendCallback</code>看看做了什么操作<br><code>_drawerOpendCallback</code>部分代码：</p><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f758a614eacab?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>这里将值给了<code>_drawerOpened</code>,用于</p><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f758a6140427a?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>给endDrawer打开做判断,emmm….这个不合理吧！</p></li></ol><blockquote><p>到这里，我们可以总结：<code>Scaffold</code>为我们添加了一个<code>DrawerController</code>后，我们又添加了一个<code>DrawerController</code>导致需要滑动两次才能显示我们的<code>Drawer</code>,所以，我们可以猜测<code>DrawerController</code>就是控制弹出跟关闭的一个部件</p></blockquote><p>那么，到这里，我们基本上想要监听<code>drawer</code>的弹出跟关闭就是死路一条了。<br>要怎样监听呢？我们可不可以通过我们定制的<code>SmartDrawer</code>去监听呢？<br>这里先做一个埋点，先来看一段代码</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">///edit start</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SmartDrawer</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line"><span class="comment">///edit end</span></span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> elevation;</span><br><span class="line">  <span class="keyword">final</span> Widget child;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> semanticLabel;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> widthPercent;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> SmartDrawer(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="keyword">this</span>.elevation = <span class="number">16.0</span>,</span><br><span class="line">    <span class="keyword">this</span>.child,</span><br><span class="line">    <span class="keyword">this</span>.semanticLabel,</span><br><span class="line">    <span class="keyword">this</span>.widthPercent,</span><br><span class="line">  &#125;)  : <span class="keyword">assert</span>(widthPercent &lt; <span class="number">1.0</span> &amp;&amp; widthPercent &gt; <span class="number">0.0</span>),</span><br><span class="line">        <span class="keyword">super</span>(key: key);</span><br><span class="line"></span><br><span class="line"><span class="comment">///edit start</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _SmartDrawerState createState() =&gt; _SmartDrawerState();</span><br><span class="line"><span class="comment">///edit end</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_SmartDrawerState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">SmartDrawer</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">///add start</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'initState'</span>);</span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> dispose() &#123;</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">'dispose'</span>);</span><br><span class="line">    <span class="keyword">super</span>.dispose();</span><br><span class="line">  &#125;</span><br><span class="line"><span class="comment">///add end</span></span><br><span class="line"></span><br><span class="line"><span class="comment">///edit xxx 2  width.xxx start</span></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">assert</span>(debugCheckHasMaterialLocalizations(context));</span><br><span class="line">    <span class="built_in">String</span> label = widget.semanticLabel;</span><br><span class="line">    <span class="keyword">switch</span> (defaultTargetPlatform) &#123;</span><br><span class="line">      <span class="keyword">case</span> TargetPlatform.iOS:</span><br><span class="line">        label = widget.semanticLabel;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> TargetPlatform.android:</span><br><span class="line">      <span class="keyword">case</span> TargetPlatform.fuchsia:</span><br><span class="line">        label = widget.semanticLabel ?? MaterialLocalizations.of(context)?.drawerLabel;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">double</span> _width = MediaQuery.of(context).size.width * widget.widthPercent;</span><br><span class="line">    <span class="keyword">return</span> Semantics(</span><br><span class="line">      scopesRoute: <span class="keyword">true</span>,</span><br><span class="line">      namesRoute: <span class="keyword">true</span>,</span><br><span class="line">      explicitChildNodes: <span class="keyword">true</span>,</span><br><span class="line">      label: label,</span><br><span class="line">      child: ConstrainedBox(</span><br><span class="line">        constraints: BoxConstraints.expand(width: _width),</span><br><span class="line">        child: Material(</span><br><span class="line">          elevation: widget.elevation,</span><br><span class="line">          child: widget.child,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">///edit xxx 2  width.xxx end</span></span><br></pre></td></tr></table></figure><p>先把<code>SmartDrawer</code>的父类由<code>StatelessWidget</code>改为<code>StatefulWidget</code>，然后添加部件的两个生命周期（创建和销毁）然后继续热部署进行使用,正常的打开和关闭<code>Drawer</code></p><p><img src="https://user-gold-cdn.xitu.io/2018/11/9/166f758a616b2a78?imageView2/0/w/1280/h/960/format/webp/ignore-error/1" alt></p><p>诶，可以看到，每次的打开会触发<code>initState</code>，每次的关闭会触发<code>dispose</code>，这个不就是我们一直想要的<code>Drawer</code>打开和关闭吗？于是可以改成这样：</p><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">SmartDrawer</span> <span class="keyword">extends</span> <span class="title">StatefulWidget</span> </span>&#123;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> elevation;</span><br><span class="line">  <span class="keyword">final</span> Widget child;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">String</span> semanticLabel;</span><br><span class="line">  <span class="keyword">final</span> <span class="built_in">double</span> widthPercent;</span><br><span class="line"><span class="comment">///add start</span></span><br><span class="line">  <span class="keyword">final</span> DrawerCallback callback;</span><br><span class="line"><span class="comment">///add end</span></span><br><span class="line">  <span class="keyword">const</span> SmartDrawer(&#123;</span><br><span class="line">    Key key,</span><br><span class="line">    <span class="keyword">this</span>.elevation = <span class="number">16.0</span>,</span><br><span class="line">    <span class="keyword">this</span>.child,</span><br><span class="line">    <span class="keyword">this</span>.semanticLabel,</span><br><span class="line">    <span class="keyword">this</span>.widthPercent,</span><br><span class="line"><span class="comment">///add start</span></span><br><span class="line">    <span class="keyword">this</span>.callback,</span><br><span class="line"><span class="comment">///add end</span></span><br><span class="line">  &#125;)  : <span class="keyword">assert</span>(widthPercent &lt; <span class="number">1.0</span> &amp;&amp; widthPercent &gt; <span class="number">0.0</span>),</span><br><span class="line">        <span class="keyword">super</span>(key: key);</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  _SmartDrawerState createState() =&gt; _SmartDrawerState();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">_SmartDrawerState</span> <span class="keyword">extends</span> <span class="title">State</span>&lt;<span class="title">SmartDrawer</span>&gt; </span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> initState() &#123;</span><br><span class="line"><span class="comment">///add start</span></span><br><span class="line">    <span class="keyword">if</span>(widget.callback!=<span class="keyword">null</span>)&#123;</span><br><span class="line">      widget.callback(<span class="keyword">true</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">///add end</span></span><br><span class="line">    <span class="keyword">super</span>.initState();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  <span class="keyword">void</span> dispose() &#123;</span><br><span class="line"><span class="comment">///add start</span></span><br><span class="line">    <span class="keyword">if</span>(widget.callback!=<span class="keyword">null</span>)&#123;</span><br><span class="line">      widget.callback(<span class="keyword">false</span>);</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">///add end</span></span><br><span class="line">    <span class="keyword">super</span>.dispose();</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@override</span></span><br><span class="line">  Widget build(BuildContext context) &#123;</span><br><span class="line">    <span class="keyword">assert</span>(debugCheckHasMaterialLocalizations(context));</span><br><span class="line">    <span class="built_in">String</span> label = widget.semanticLabel;</span><br><span class="line">    <span class="keyword">switch</span> (defaultTargetPlatform) &#123;</span><br><span class="line">      <span class="keyword">case</span> TargetPlatform.iOS:</span><br><span class="line">        label = widget.semanticLabel;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> TargetPlatform.android:</span><br><span class="line">      <span class="keyword">case</span> TargetPlatform.fuchsia:</span><br><span class="line">        label = widget.semanticLabel ?? MaterialLocalizations.of(context)?.drawerLabel;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">double</span> _width = MediaQuery.of(context).size.width * widget.widthPercent;</span><br><span class="line">    <span class="keyword">return</span> Semantics(</span><br><span class="line">      scopesRoute: <span class="keyword">true</span>,</span><br><span class="line">      namesRoute: <span class="keyword">true</span>,</span><br><span class="line">      explicitChildNodes: <span class="keyword">true</span>,</span><br><span class="line">      label: label,</span><br><span class="line">      child: ConstrainedBox(</span><br><span class="line">        constraints: BoxConstraints.expand(width: _width),</span><br><span class="line">        child: Material(</span><br><span class="line">          elevation: widget.elevation,</span><br><span class="line">          child: widget.child,</span><br><span class="line">        ),</span><br><span class="line">      ),</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>现在就可以监听到<code>drawer</code>的打开了，完美！</p><blockquote><p>如果这篇文章对你有所帮助，希望求个打赏，谢谢！</p></blockquote><p><a href="https://juejin.im/post/5be5356bf265da61602c6f68" target="_blank" rel="noopener">转自掘金</a></p><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Flutter </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> drawer </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>仿微博导航条</title>
      <link href="/blog/2019/06/27/01-%E4%BB%BF%E5%BE%AE%E5%8D%9A%E5%AF%BC%E8%88%AA%E6%9D%A1/"/>
      <url>/blog/2019/06/27/01-%E4%BB%BF%E5%BE%AE%E5%8D%9A%E5%AF%BC%E8%88%AA%E6%9D%A1/</url>
      
        <content type="html"><![CDATA[<!-- build time:Tue Jan 07 2020 15:15:23 GMT+0800 (GMT+08:00) --><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>忘记什么时候开始看微博时，无意中注意到微博的导航条，好有趣，就无聊的拖过来拖过去。不多说，上图。</p><p><img src="https://ws1.sinaimg.cn/large/00799utCgy1g4fk3trhqcg30dl08bhdu.gif" alt="微博导航条"></p><blockquote><p>可以看下微博，自己滑动试一试。</p></blockquote><p>看到上面的黄色的条条，可长可短，邪恶~~</p><p>两个TAB页，关注和热门。<br>几个特点：</p><blockquote><ul><li>关注页面滑到页面的一半宽度以上时会自动切换到热门页面，这是ViewPager的特性。</li><li>关键看黄条的长度。当关注页面滑动一半时，黄条的长度 到达“热门”两个字的接近右边，不会边长。反之，亦然。</li><li>选中的页面的字体大小与颜色均有变化。</li><li>黄色线的颜色是渐变的（可以自己认真看下微博导航条的颜色）</li></ul></blockquote><p>看下我的实现：</p><p><img src="https://ws1.sinaimg.cn/large/00799utCgy1g4fk8t5c38g30hs0vmnpg.gif" alt></p><h1 id="开鲁"><a href="#开鲁" class="headerlink" title="开鲁"></a>开鲁</h1><p><img src="https://ws1.sinaimg.cn/large/00799utCgy1g4fk8r0o8oj30jo08274f.jpg" alt="导航条的整体构造"></p><h3 id="制作导航条的TextView"><a href="#制作导航条的TextView" class="headerlink" title="制作导航条的TextView"></a>制作导航条的TextView</h3><p><img src="https://ws1.sinaimg.cn/large/00799utCgy1g4fk8r2eurg30f807wjx6.gif" alt="导航条的滑动"></p><p>我们从上到下看看这个导航条是怎么制作的。对于这个，我们可以使用现成的HorizontalScrollView。也就是这个水平滑动的ScollView。使用TextView填充HorizontalScrollView时，会出现两种情况：</p><p><img src="https://ws1.sinaimg.cn/large/00799utCgy1g4fk8r0lt5j30gj08awem.jpg" alt="HorizontalScrollView与TextView"></p><p>分析：</p><ul><li>根据计算所有TextView的长度+TextView的左右边距与屏幕宽度比较，判断TextView的总长度大于小于屏幕宽度。</li><li>导航条上面的分类字数较少时，没有盛满，我们要首先计算平分的每个TextView字体的宽度，然后指定TextView的左右边距。</li><li>字数长时，我们设置TextView的左右边距为默认边距</li></ul><p><strong>根据TextView的实际长度计算其左右边距代码</strong>：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">/**</span><br><span class="line">     *</span><br><span class="line">     * @param titleAry TextView的String字符串 “关注” “推荐”</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    private int getTextViewMargins(String[] titleAry) &#123;</span><br><span class="line">        int defaultMargins = 30;</span><br><span class="line">        float countLength = 0;</span><br><span class="line">        TextView textView = new TextView(getContext());</span><br><span class="line">        textView.setTextSize(defaultTextSize);</span><br><span class="line">        TextPaint paint = textView.getPaint();</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">        for (int i = 0; i &lt; titleAry.length; i++) &#123;</span><br><span class="line">            countLength = countLength + defaultMargins + paint.measureText(titleAry[i]) + defaultMargins;</span><br><span class="line">        &#125;</span><br><span class="line">        int screenWidth = getScreenWidth(getContext());</span><br><span class="line"></span><br><span class="line">        if (countLength &lt;= screenWidth) &#123; //TextView总长度小于屏幕宽度</span><br><span class="line">            allTextViewLength = screenWidth;</span><br><span class="line">            return (screenWidth / titleAry.length - (int) paint.measureText(titleAry[0])) / 2;</span><br><span class="line">        &#125; else &#123; //TextView总长度大于屏幕宽度</span><br><span class="line">            allTextViewLength = (int) countLength;</span><br><span class="line">            return defaultMargins;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>知道了每个TextView的左右边距后（每个边距均一致，美观，并且绝大多数APP都是这样设计的，UED懂的），然后在一个个创建TextView添加到textViewLl中即可。</p></blockquote><p><strong>将所有TextView添加到contentLl中</strong></p><h5 id="ViewPagerTitle"><a href="#ViewPagerTitle" class="headerlink" title="ViewPagerTitle"></a>ViewPagerTitle</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by lovexujh on 2017/7/3</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">ViewPagerTitle</span> <span class="keyword">extends</span> <span class="title">HorizontalScrollView</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String[] titles;<span class="comment">//导航条的字符串：关注、推荐 、视频。。。</span></span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;TextView&gt; textViews = <span class="keyword">new</span> ArrayList&lt;&gt;();  <span class="comment">//导航条的所有TextView</span></span><br><span class="line">    <span class="keyword">private</span> DynamicLine dynamicLine;</span><br><span class="line">    <span class="keyword">private</span> ViewPager viewPager;</span><br><span class="line">    <span class="keyword">private</span> MyOnPageChangeListener onPageChangeListener;<span class="comment">//ViewPager的滑动监听</span></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> margin;<span class="comment">//导航条的每两个TextView之间的间距</span></span><br><span class="line">    <span class="keyword">private</span> LinearLayout.LayoutParams contentParams = <span class="keyword">new</span> LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);</span><br><span class="line">    <span class="keyword">private</span> LinearLayout.LayoutParams textViewParams = <span class="keyword">new</span> LinearLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT, ViewGroup.LayoutParams.WRAP_CONTENT);</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> defaultTextSize = <span class="number">18</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> selectedTextSize = <span class="number">22</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> defaultTextColor = Color.GRAY;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> selectedTextColor = Color.BLACK;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> allTextViewLength;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ViewPagerTitle</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ViewPagerTitle</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">ViewPagerTitle</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">initData</span><span class="params">(String[] titles, ViewPager viewPager, <span class="keyword">int</span> defaultIndex)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.titles = titles;</span><br><span class="line">        <span class="keyword">this</span>.viewPager = viewPager;</span><br><span class="line">        createDynamicLine();</span><br><span class="line">        createTextViews(titles);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> fixLeftDis = getFixLeftDis();</span><br><span class="line">        onPageChangeListener = <span class="keyword">new</span> MyOnPageChangeListener(getContext(), viewPager, dynamicLine, <span class="keyword">this</span>, allTextViewLength, margin, fixLeftDis);</span><br><span class="line">        setDefaultIndex(defaultIndex);</span><br><span class="line"></span><br><span class="line">        viewPager.addOnPageChangeListener(onPageChangeListener);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 这个方法是来修正TextView的左右边距的，</span></span><br><span class="line"><span class="comment">     * 因为每个TextView而言 ： leftMargins + TextViewLength + rightMargins 这三个的值要一致，</span></span><br><span class="line"><span class="comment">     * 被选中的TExtView的TextViewLength要比默认没有选中的TextView的TextViewLength大，</span></span><br><span class="line"><span class="comment">     * 所以选中的字体的左右边距要偏小。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getFixLeftDis</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        TextView textView = <span class="keyword">new</span> TextView(getContext());</span><br><span class="line">        textView.setTextSize(defaultTextSize);</span><br><span class="line">        textView.setText(titles[<span class="number">0</span>]);</span><br><span class="line">        <span class="keyword">float</span> defaultTextSize = getTextViewLength(textView);</span><br><span class="line">        textView.setTextSize(selectedTextSize);</span><br><span class="line">        <span class="keyword">float</span> selectTextSize = getTextViewLength(textView);</span><br><span class="line">        <span class="keyword">return</span> (<span class="keyword">int</span>)(selectTextSize - defaultTextSize) / <span class="number">2</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> ArrayList&lt;TextView&gt; <span class="title">getTextView</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> textViews;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">createDynamicLine</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        ViewGroup.LayoutParams params = <span class="keyword">new</span> ViewGroup.LayoutParams(ViewGroup.LayoutParams.MATCH_PARENT, ViewGroup.LayoutParams.WRAP_CONTENT);</span><br><span class="line">        dynamicLine = <span class="keyword">new</span> DynamicLine(getContext());</span><br><span class="line">        dynamicLine.setLayoutParams(params);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">createTextViews</span><span class="params">(String[] titles)</span> </span>&#123;</span><br><span class="line">        LinearLayout contentLl = <span class="keyword">new</span> LinearLayout(getContext());</span><br><span class="line">        contentLl.setBackgroundColor(Color.parseColor(<span class="string">"#fffacd"</span>));</span><br><span class="line">        contentLl.setLayoutParams(contentParams);</span><br><span class="line">        contentLl.setOrientation(LinearLayout.VERTICAL);</span><br><span class="line">        addView(contentLl);</span><br><span class="line">        LinearLayout textViewLl = <span class="keyword">new</span> LinearLayout(getContext());</span><br><span class="line">        textViewLl.setLayoutParams(contentParams);</span><br><span class="line">        textViewLl.setOrientation(LinearLayout.HORIZONTAL);</span><br><span class="line"></span><br><span class="line">        margin = getTextViewMargins(titles);</span><br><span class="line"></span><br><span class="line">        textViewParams.setMargins(margin, <span class="number">0</span>, margin, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; titles.length; i++) &#123;</span><br><span class="line">            TextView textView = <span class="keyword">new</span> TextView(getContext());</span><br><span class="line">            textView.setText(titles[i]);</span><br><span class="line">            textView.setTextColor(Color.GRAY);</span><br><span class="line">            textView.setTextSize(defaultTextSize);</span><br><span class="line">            textView.setLayoutParams(textViewParams);</span><br><span class="line">            textView.setGravity(Gravity.CENTER_HORIZONTAL);</span><br><span class="line">            textView.setOnClickListener(onClickListener);</span><br><span class="line">            textView.setTag(i);</span><br><span class="line">            textViews.add(textView);</span><br><span class="line">            textViewLl.addView(textView);</span><br><span class="line">        &#125;</span><br><span class="line">        contentLl.addView(textViewLl);  <span class="comment">//将所有的TextView所在的LinerLayout添加到HorizontalScrollView的contentLl中</span></span><br><span class="line">        contentLl.addView(dynamicLine);<span class="comment">//dynamicLine是左右跑动的黄色的线</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> titleAry TextView的String字符串 “关注” “推荐”</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">int</span> <span class="title">getTextViewMargins</span><span class="params">(String[] titleAry)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> defaultMargins = <span class="number">30</span>;</span><br><span class="line">        <span class="keyword">float</span> countLength = <span class="number">0</span>;</span><br><span class="line">        TextView textView = <span class="keyword">new</span> TextView(getContext());</span><br><span class="line">        textView.setTextSize(defaultTextSize);</span><br><span class="line">        TextPaint paint = textView.getPaint();</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; titleAry.length; i++) &#123;</span><br><span class="line">            countLength = countLength + defaultMargins + paint.measureText(titleAry[i]) + defaultMargins;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">int</span> screenWidth = getScreenWidth(getContext());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (countLength &lt;= screenWidth) &#123; <span class="comment">//TextView总长度小于屏幕宽度</span></span><br><span class="line">            allTextViewLength = screenWidth;</span><br><span class="line">            <span class="keyword">return</span> (screenWidth / titleAry.length - (<span class="keyword">int</span>) paint.measureText(titleAry[<span class="number">0</span>])) / <span class="number">2</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">//TextView总长度大于屏幕宽度</span></span><br><span class="line">            allTextViewLength = (<span class="keyword">int</span>) countLength;</span><br><span class="line">            <span class="keyword">return</span> defaultMargins;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">private</span> OnClickListener onClickListener = <span class="keyword">new</span> OnClickListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View v)</span> </span>&#123;</span><br><span class="line">            setCurrentItem((<span class="keyword">int</span>) v.getTag());</span><br><span class="line">            viewPager.setCurrentItem((<span class="keyword">int</span>) v.getTag());</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setDefaultIndex</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        setCurrentItem(index);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setCurrentItem</span><span class="params">(<span class="keyword">int</span> index)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; textViews.size(); i++) &#123;</span><br><span class="line">            <span class="keyword">if</span> (i == index) &#123;</span><br><span class="line">                textViews.get(i).setTextColor(selectedTextColor);</span><br><span class="line">                textViews.get(i).setTextSize(selectedTextSize);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                textViews.get(i).setTextColor(defaultTextColor);</span><br><span class="line">                textViews.get(i).setTextSize(defaultTextSize);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDetachedFromWindow</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDetachedFromWindow();</span><br><span class="line">        viewPager.removeOnPageChangeListener(onPageChangeListener);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="黄色的线-DynamicLine"><a href="#黄色的线-DynamicLine" class="headerlink" title="黄色的线-DynamicLine"></a>黄色的线-DynamicLine</h2><p>可以看到黄色的线并不是一条线，而是一个圆角矩形。这就可以使用drawRoundRect(@NonNull<br>RectF rect, float rx, float ry, @NonNull Paint paint) 这个API。</p><p><strong>关键点在于，黄色圆角矩形的移动，只要更改圆角矩形的起始X坐标与终止X坐标。这样就可以让黄色条条进行移动了</strong><br>来自定义一个DynamicLine继承View，代码及说明如下：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">DynamicLine</span> <span class="keyword">extends</span> <span class="title">View</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> startX, stopX;<span class="comment">//的起始X,终止X坐标。</span></span><br><span class="line">    <span class="keyword">private</span> Paint paint;</span><br><span class="line">    <span class="keyword">private</span> RectF rectF = <span class="keyword">new</span> RectF(startX, <span class="number">0</span>, stopX, <span class="number">0</span>);<span class="comment">//RectF指的是float精度的矩形</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DynamicLine</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, <span class="keyword">null</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DynamicLine</span><span class="params">(Context context, AttributeSet attrs)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>(context, attrs, <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">DynamicLine</span><span class="params">(Context context, AttributeSet attrs, <span class="keyword">int</span> defStyleAttr)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>(context, attrs, defStyleAttr);</span><br><span class="line">        init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">init</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        paint = <span class="keyword">new</span> Paint();</span><br><span class="line">        paint.setAntiAlias(<span class="keyword">true</span>);<span class="comment">//抗锯齿</span></span><br><span class="line">        paint.setStyle(Paint.Style.FILL);<span class="comment">//填充</span></span><br><span class="line">        paint.setStrokeWidth(<span class="number">5</span>);<span class="comment">//画笔宽度</span></span><br><span class="line">        paint.setShader(<span class="keyword">new</span> LinearGradient(<span class="number">0</span>, <span class="number">100</span>, getScreenWidth(getContext()), <span class="number">100</span>, Color.parseColor(<span class="string">"#ffc125"</span>), Color.parseColor(<span class="string">"#ff4500"</span>), Shader.TileMode.MIRROR));<span class="comment">//设置画笔渐变色</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onMeasure</span><span class="params">(<span class="keyword">int</span> widthMeasureSpec, <span class="keyword">int</span> heightMeasureSpec)</span> </span>&#123;<span class="comment">//自定义DynamicLine的高度</span></span><br><span class="line">        heightMeasureSpec = MeasureSpec.makeMeasureSpec(<span class="number">20</span>, MeasureSpec.getMode(heightMeasureSpec));</span><br><span class="line">        <span class="keyword">super</span>.onMeasure(widthMeasureSpec, heightMeasureSpec);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDraw</span><span class="params">(Canvas canvas)</span> </span>&#123;</span><br><span class="line">        rectF.set(startX, <span class="number">0</span>, stopX, <span class="number">10</span>);</span><br><span class="line">        canvas.drawRoundRect(rectF, <span class="number">5</span>, <span class="number">5</span>, paint);<span class="comment">//圆角矩形的圆角的曲率</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 根据起始、终止坐标更新黄色圆角，进行重新绘制</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> startX</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> stopX</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">updateView</span><span class="params">(<span class="keyword">float</span> startX, <span class="keyword">float</span> stopX)</span> </span>&#123;<span class="comment">//</span></span><br><span class="line">        <span class="keyword">this</span>.startX = startX;</span><br><span class="line">        <span class="keyword">this</span>.stopX = stopX;</span><br><span class="line">        invalidate();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>我们把DynamicLine放到activity中添加下面代码，测试一下，效果：</p></blockquote><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> DynamicLine dynamicLine;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">float</span> startX, stopX;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line">        setContentView(R.layout.activity_main);</span><br><span class="line">        dynamicLine = (DynamicLine)findViewById(R.id.dynamicLine);</span><br><span class="line"><span class="comment">//        init();</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">dispatchTouchEvent</span><span class="params">(MotionEvent ev)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (ev.getAction())&#123;</span><br><span class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</span><br><span class="line">                startX = ev.getRawX();</span><br><span class="line">           <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</span><br><span class="line">               stopX = ev.getRawX();</span><br><span class="line">               dynamicLine.updateView(startX, stopX);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">super</span>.dispatchTouchEvent(ev);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/00799utCgy1g4fk8r18e2g30f005n3z7.gif" alt="DynamicLine"></p><p>有渐变色，有效果。可以，没问题。</p><blockquote><p>后面我们需要知道当viewpager切换时动作与DynamicLine的startX与stopX的具体对应关系。可以使用ViewPager的addOnPageChangeListener(OnPageChangeListener<br>listener)方法。</p></blockquote><p><strong>OnPageChangeListener 的实现</strong></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MyOnPageChangeListener</span> <span class="keyword">implements</span> <span class="title">ViewPager</span>.<span class="title">OnPageChangeListener</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> fixLeftDis;</span><br><span class="line">    <span class="keyword">private</span> ArrayList&lt;TextView&gt; textViews;</span><br><span class="line">    <span class="keyword">private</span> ViewPagerTitle viewPagerTitle;</span><br><span class="line">    <span class="keyword">private</span> DynamicLine dynamicLine;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> ViewPager pager;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> pagerCount;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> screenWidth;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> lineWidth;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> everyLength;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> lastPosition;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> dis;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span>[] location = <span class="keyword">new</span> <span class="keyword">int</span>[<span class="number">2</span>];</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> viewPager</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dynamicLine</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> viewPagerTitle</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> allLength 所有的TextView的总长度。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> margin TextView的左右边距。</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fixLeftDis TextView的修正的距离</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">MyOnPageChangeListener</span><span class="params">(Context context, ViewPager viewPager, DynamicLine dynamicLine, ViewPagerTitle viewPagerTitle, <span class="keyword">int</span> allLength, <span class="keyword">int</span> margin, <span class="keyword">int</span> fixLeftDis)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.viewPagerTitle = viewPagerTitle;</span><br><span class="line">        <span class="keyword">this</span>.pager = viewPager;</span><br><span class="line">        <span class="keyword">this</span>.dynamicLine = dynamicLine;</span><br><span class="line">        textViews = viewPagerTitle.getTextView();</span><br><span class="line">        pagerCount = textViews.size();</span><br><span class="line">        screenWidth = getScreenWidth(context);</span><br><span class="line"></span><br><span class="line">        lineWidth = (<span class="keyword">int</span>) getTextViewLength(textViews.get(<span class="number">0</span>));</span><br><span class="line"></span><br><span class="line">        everyLength = allLength / pagerCount;</span><br><span class="line">        dis = margin;</span><br><span class="line">        <span class="keyword">this</span>.fixLeftDis = fixLeftDis;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> position</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> positionOffset 当前页面的便宜百分小数 [0, 1)</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> positionOffsetPixels 当前页面的偏移像素 0 ~ 屏幕宽度</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageScrolled</span><span class="params">(<span class="keyword">int</span> position, <span class="keyword">float</span> positionOffset, <span class="keyword">int</span> positionOffsetPixels)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (lastPosition &gt; position) &#123;<span class="comment">//页面向右滚动</span></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 档页面向右滚动时，dynamicLine的右边的stopX位置不变，startX在变化。</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            dynamicLine.updateView((position + positionOffset) * everyLength + dis + fixLeftDis, (lastPosition + <span class="number">1</span>) * everyLength - dis);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123; <span class="comment">//页面向左滚动</span></span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 档页面向左滚动时，dynamicLine的左边的startX位置不变，stopX在变化。</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">if</span> (positionOffset &gt; <span class="number">0.5f</span>) &#123;</span><br><span class="line">                positionOffset = <span class="number">0.5f</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            dynamicLine.updateView(lastPosition * everyLength + dis + fixLeftDis, (position + positionOffset * <span class="number">2</span>) * everyLength + dis + lineWidth);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageSelected</span><span class="params">(<span class="keyword">int</span> position)</span> </span>&#123;</span><br><span class="line">        viewPagerTitle.setCurrentItem(position);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * state 的几个状态：</span></span><br><span class="line"><span class="comment">     * SCROLL_STATE_IDLE  挂起，空闲，页面处于静止状态</span></span><br><span class="line"><span class="comment">     * SCROLL_STATE_DRAGGING 拖拽，页面处于拖拽状态</span></span><br><span class="line"><span class="comment">     * SCROLL_STATE_SETTLING 设置，手指滑动后当手指离开页面时</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> state</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageScrollStateChanged</span><span class="params">(<span class="keyword">int</span> state)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">boolean</span> scrollRight;<span class="comment">//页面向右</span></span><br><span class="line">        <span class="keyword">if</span> (state == SCROLL_STATE_SETTLING) &#123;</span><br><span class="line">            scrollRight = lastPosition &lt; pager.getCurrentItem();</span><br><span class="line">            lastPosition = pager.getCurrentItem();</span><br><span class="line">            <span class="comment">/**</span></span><br><span class="line"><span class="comment">             * 下面几行代码，解决页面滑到的TAB页时对应的TextView对应，TextView处于屏幕外面，</span></span><br><span class="line"><span class="comment">             * 这个时候就需要将HorizontalScrollView滑动到屏幕中间。</span></span><br><span class="line"><span class="comment">             */</span></span><br><span class="line">            <span class="keyword">if</span> (lastPosition + <span class="number">1</span> &lt; textViews.size() &amp;&amp; lastPosition - <span class="number">1</span> &gt;= <span class="number">0</span>) &#123;</span><br><span class="line">                textViews.get(scrollRight ? lastPosition + <span class="number">1</span> : lastPosition - <span class="number">1</span>).getLocationOnScreen(location);</span><br><span class="line">                <span class="keyword">if</span> (location[<span class="number">0</span>] &gt; screenWidth) &#123;</span><br><span class="line">                    viewPagerTitle.smoothScrollBy(screenWidth / <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">                &#125; <span class="keyword">else</span> <span class="keyword">if</span> (location[<span class="number">0</span>] &lt; <span class="number">0</span>) &#123;</span><br><span class="line">                    viewPagerTitle.smoothScrollBy(-screenWidth / <span class="number">2</span>, <span class="number">0</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Tool-工具类"><a href="#Tool-工具类" class="headerlink" title="Tool 工具类"></a>Tool 工具类</h5><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by lovexujh on 2017/7/4</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Tool</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">float</span> <span class="title">getTextViewLength</span><span class="params">(TextView textView)</span> </span>&#123;</span><br><span class="line">        TextPaint paint = textView.getPaint();</span><br><span class="line">        <span class="keyword">return</span> paint.measureText(textView.getText().toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">float</span> <span class="title">getTextViewLength</span><span class="params">(TextView textView, <span class="keyword">float</span> textSize)</span> </span>&#123;</span><br><span class="line">        TextPaint paint = textView.getPaint();</span><br><span class="line">        paint.setTextSize(textSize);</span><br><span class="line">        <span class="keyword">return</span> paint.measureText(textView.getText().toString());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getScreenWidth</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">        WindowManager wm = (WindowManager) context.getSystemService(Context.WINDOW_SERVICE);</span><br><span class="line">        DisplayMetrics dm = <span class="keyword">new</span> DisplayMetrics();</span><br><span class="line">        wm.getDefaultDisplay().getMetrics(dm);</span><br><span class="line">        <span class="keyword">return</span> dm.widthPixels;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://ws1.sinaimg.cn/large/00799utCgy1g4fk8t5c38g30hs0vmnpg.gif" alt="最终实现"></p><h1 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h1><p><img src="https://ws1.sinaimg.cn/large/00799utCgy1g4fk8r1mptj305k05kmy5.jpg" alt="能看到这的都是神人了"></p><blockquote><p>其实，整个文章的难点在于如何设计DynamicLine,刚开始想着很简单<br>，但是真到你自己去写写，很多问题。比如，如何确定滑动时的DynamicLine位置，以及当一个TextView被选中时，它的字体宽度是变大了，这个时候DynamicLine的起末位置怎么办<br>等等。不信，大神你撸一把试试。</p></blockquote><!-- rebuild by neat -->]]></content>
      
      
      <categories>
          
          <category> Android </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Flutter </tag>
            
            <tag> Android </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
