// build time:Tue Jan 07 2020 15:15:28 GMT+0800 (GMT+08:00)
THREE.SpriteCanvasMaterial=function(e){THREE.Material.call(this);this.type="SpriteCanvasMaterial";this.color=new THREE.Color(16777215);this.program=function(e,i){};this.setValues(e)};THREE.SpriteCanvasMaterial.prototype=Object.create(THREE.Material.prototype);THREE.SpriteCanvasMaterial.prototype.constructor=THREE.SpriteCanvasMaterial;THREE.SpriteCanvasMaterial.prototype.clone=function(){var e=new THREE.SpriteCanvasMaterial;e.copy(this);e.color.copy(this.color);e.program=this.program;return e};THREE.CanvasRenderer=function(e){console.log("THREE.CanvasRenderer",THREE.REVISION);e=e||{};var i=this,t,n,r,o=new THREE.Projector,a=e.canvas!==undefined?e.canvas:document.createElement("canvas"),s=a.width,l=a.height,c=Math.floor(s/2),f=Math.floor(l/2),p=0,E=0,d=s,u=l,h=1,m=a.getContext("2d",{alpha:e.alpha===true}),v=new THREE.Color(0),x=e.alpha===true?0:1,y=1,R=0,g=null,T=null,S=null,w=null,H=null,C=[],M,b,L,B,P,V=new THREE.RenderableVertex,W=new THREE.RenderableVertex,z,j,k,D,F,I,N,O,A,G,U,q,J=new THREE.Color,K=new THREE.Color,Q=new THREE.Color,X=new THREE.Color,Y=new THREE.Color,Z=new THREE.Color,$=new THREE.Color,_=new THREE.Color,ee={},ie,te,ne,re,oe,ae,se,le,ce=new THREE.Box2,fe=new THREE.Box2,pe=new THREE.Box2,Ee=new THREE.Color,de=new THREE.Color,ue=new THREE.Color,he=new THREE.Vector3,me=new THREE.Vector3,ve=new THREE.Vector3,xe=new THREE.Matrix3;if(m.setLineDash===undefined){m.setLineDash=function(){}}this.domElement=a;this.autoClear=true;this.sortObjects=true;this.sortElements=true;this.info={render:{vertices:0,faces:0}};this.supportsVertexTextures=function(){};this.setFaceCulling=function(){};this.getContext=function(){return m};this.getContextAttributes=function(){return m.getContextAttributes()};this.getPixelRatio=function(){return h};this.setPixelRatio=function(e){if(e!==undefined)h=e};this.setSize=function(e,i,t){s=e*h;l=i*h;a.width=s;a.height=l;c=Math.floor(s/2);f=Math.floor(l/2);if(t!==false){a.style.width=e+"px";a.style.height=i+"px"}ce.min.set(-c,-f);ce.max.set(c,f);fe.min.set(-c,-f);fe.max.set(c,f);y=1;R=0;g=null;T=null;S=null;w=null;H=null;this.setViewport(0,0,e,i)};this.setViewport=function(e,i,t,n){p=e*h;E=i*h;d=t*h;u=n*h};this.setScissor=function(){};this.setScissorTest=function(){};this.setClearColor=function(e,i){v.set(e);x=i!==undefined?i:1;fe.min.set(-c,-f);fe.max.set(c,f)};this.setClearColorHex=function(e,i){console.warn("THREE.CanvasRenderer: .setClearColorHex() is being removed. Use .setClearColor() instead.");this.setClearColor(e,i)};this.getClearColor=function(){return v};this.getClearAlpha=function(){return x};this.getMaxAnisotropy=function(){return 0};this.clear=function(){if(fe.isEmpty()===false){fe.intersect(ce);fe.expandByScalar(2);fe.min.x=fe.min.x+c;fe.min.y=-fe.min.y+f;fe.max.x=fe.max.x+c;fe.max.y=-fe.max.y+f;if(x<1){m.clearRect(fe.min.x|0,fe.max.y|0,fe.max.x-fe.min.x|0,fe.min.y-fe.max.y|0)}if(x>0){Ve(THREE.NormalBlending);Pe(1);De("rgba("+Math.floor(v.r*255)+","+Math.floor(v.g*255)+","+Math.floor(v.b*255)+","+x+")");m.fillRect(fe.min.x|0,fe.max.y|0,fe.max.x-fe.min.x|0,fe.min.y-fe.max.y|0)}fe.makeEmpty()}};this.clearColor=function(){};this.clearDepth=function(){};this.clearStencil=function(){};this.render=function(e,a){if(a instanceof THREE.Camera===false){console.error("THREE.CanvasRenderer.render: camera is not an instance of THREE.Camera.");return}var h=e.background;if(h&&h.isColor){De("rgb("+Math.floor(h.r*255)+","+Math.floor(h.g*255)+","+Math.floor(h.b*255)+")");m.fillRect(0,0,s,l)}else if(this.autoClear===true){this.clear()}i.info.render.vertices=0;i.info.render.faces=0;m.setTransform(d/s,0,0,-u/l,p,l-E);m.translate(c,f);t=o.projectScene(e,a,this.sortObjects,this.sortElements);n=t.elements;r=t.lights;M=a;xe.getNormalMatrix(a.matrixWorldInverse);ye();for(var v=0,x=n.length;v<x;v++){var y=n[v];var R=y.material;if(R===undefined||R.opacity===0)continue;pe.makeEmpty();if(y instanceof THREE.RenderableSprite){b=y;b.x*=c;b.y*=f;ge(b,y,R)}else if(y instanceof THREE.RenderableLine){b=y.v1;L=y.v2;b.positionScreen.x*=c;b.positionScreen.y*=f;L.positionScreen.x*=c;L.positionScreen.y*=f;pe.setFromPoints([b.positionScreen,L.positionScreen]);if(ce.intersectsBox(pe)===true){Te(b,L,y,R)}}else if(y instanceof THREE.RenderableFace){b=y.v1;L=y.v2;B=y.v3;if(b.positionScreen.z<-1||b.positionScreen.z>1)continue;if(L.positionScreen.z<-1||L.positionScreen.z>1)continue;if(B.positionScreen.z<-1||B.positionScreen.z>1)continue;b.positionScreen.x*=c;b.positionScreen.y*=f;L.positionScreen.x*=c;L.positionScreen.y*=f;B.positionScreen.x*=c;B.positionScreen.y*=f;if(R.overdraw>0){Be(b.positionScreen,L.positionScreen,R.overdraw);Be(L.positionScreen,B.positionScreen,R.overdraw);Be(B.positionScreen,b.positionScreen,R.overdraw)}pe.setFromPoints([b.positionScreen,L.positionScreen,B.positionScreen]);if(ce.intersectsBox(pe)===true){Se(b,L,B,0,1,2,y,R)}}fe.union(pe)}m.setTransform(1,0,0,1,0,0)};function ye(){Ee.setRGB(0,0,0);de.setRGB(0,0,0);ue.setRGB(0,0,0);for(var e=0,i=r.length;e<i;e++){var t=r[e];var n=t.color;if(t instanceof THREE.AmbientLight){Ee.add(n)}else if(t instanceof THREE.DirectionalLight){de.add(n)}else if(t instanceof THREE.PointLight){ue.add(n)}}}function Re(e,i,t){for(var n=0,o=r.length;n<o;n++){var a=r[n];_.copy(a.color);if(a instanceof THREE.DirectionalLight){var s=he.setFromMatrixPosition(a.matrixWorld).normalize();var l=i.dot(s);if(l<=0)continue;l*=a.intensity;t.add(_.multiplyScalar(l))}else if(a instanceof THREE.PointLight){var s=he.setFromMatrixPosition(a.matrixWorld);var l=i.dot(he.subVectors(s,e).normalize());if(l<=0)continue;l*=a.distance==0?1:1-Math.min(e.distanceTo(s)/a.distance,1);if(l==0)continue;l*=a.intensity;t.add(_.multiplyScalar(l))}}}function ge(e,i,t){Pe(t.opacity);Ve(t.blending);var n=i.scale.x*c;var r=i.scale.y*f;var o=.5*Math.sqrt(n*n+r*r);pe.min.set(e.x-o,e.y-o);pe.max.set(e.x+o,e.y+o);if(t instanceof THREE.SpriteMaterial){var a=t.map;if(a!==null){var s=ee[a.id];if(s===undefined||s.version!==a.version){s=Me(a);ee[a.id]=s}if(s.canvas!==undefined){De(s.canvas);var l=a.image;var p=l.width*a.offset.x;var E=l.height*a.offset.y;var d=l.width*a.repeat.x;var u=l.height*a.repeat.y;var h=n/d;var v=r/u;m.save();m.translate(e.x,e.y);if(t.rotation!==0)m.rotate(t.rotation);m.translate(-n/2,-r/2);m.scale(h,v);m.translate(-p,-E);m.fillRect(p,E,d,u);m.restore()}}else{De(t.color.getStyle());m.save();m.translate(e.x,e.y);if(t.rotation!==0)m.rotate(t.rotation);m.scale(n,-r);m.fillRect(-.5,-.5,1,1);m.restore()}}else if(t instanceof THREE.SpriteCanvasMaterial){ke(t.color.getStyle());De(t.color.getStyle());m.save();m.translate(e.x,e.y);if(t.rotation!==0)m.rotate(t.rotation);m.scale(n,r);t.program(m);m.restore()}}function Te(e,i,t,n){Pe(n.opacity);Ve(n.blending);m.beginPath();m.moveTo(e.positionScreen.x,e.positionScreen.y);m.lineTo(i.positionScreen.x,i.positionScreen.y);if(n instanceof THREE.LineBasicMaterial){We(n.linewidth);ze(n.linecap);je(n.linejoin);if(n.vertexColors!==THREE.VertexColors){ke(n.color.getStyle())}else{var r=t.vertexColors[0].getStyle();var o=t.vertexColors[1].getStyle();if(r===o){ke(r)}else{try{var a=m.createLinearGradient(e.positionScreen.x,e.positionScreen.y,i.positionScreen.x,i.positionScreen.y);a.addColorStop(0,r);a.addColorStop(1,o)}catch(s){a=r}ke(a)}}m.stroke();pe.expandByScalar(n.linewidth*2)}else if(n instanceof THREE.LineDashedMaterial){We(n.linewidth);ze(n.linecap);je(n.linejoin);ke(n.color.getStyle());Fe([n.dashSize,n.gapSize]);m.stroke();pe.expandByScalar(n.linewidth*2);Fe([])}}function Se(e,t,n,r,o,a,s,l){i.info.render.vertices+=3;i.info.render.faces++;Pe(l.opacity);Ve(l.blending);z=e.positionScreen.x;j=e.positionScreen.y;k=t.positionScreen.x;D=t.positionScreen.y;F=n.positionScreen.x;I=n.positionScreen.y;we(z,j,k,D,F,I);if((l instanceof THREE.MeshLambertMaterial||l instanceof THREE.MeshPhongMaterial)&&l.map===null){Z.copy(l.color);$.copy(l.emissive);if(l.vertexColors===THREE.FaceColors){Z.multiply(s.color)}J.copy(Ee);me.copy(e.positionWorld).add(t.positionWorld).add(n.positionWorld).divideScalar(3);Re(me,s.normalModel,J);J.multiply(Z).add($);l.wireframe===true?He(J,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):Ce(J)}else if(l instanceof THREE.MeshBasicMaterial||l instanceof THREE.MeshLambertMaterial||l instanceof THREE.MeshPhongMaterial){if(l.map!==null){var c=l.map.mapping;if(c===THREE.UVMapping){te=s.uvs;be(z,j,k,D,F,I,te[r].x,te[r].y,te[o].x,te[o].y,te[a].x,te[a].y,l.map)}}else if(l.envMap!==null){if(l.envMap.mapping===THREE.SphericalReflectionMapping){ve.copy(s.vertexNormalsModel[r]).applyMatrix3(xe);ne=.5*ve.x+.5;re=.5*ve.y+.5;ve.copy(s.vertexNormalsModel[o]).applyMatrix3(xe);oe=.5*ve.x+.5;ae=.5*ve.y+.5;ve.copy(s.vertexNormalsModel[a]).applyMatrix3(xe);se=.5*ve.x+.5;le=.5*ve.y+.5;be(z,j,k,D,F,I,ne,re,oe,ae,se,le,l.envMap)}}else{J.copy(l.color);if(l.vertexColors===THREE.FaceColors){J.multiply(s.color)}l.wireframe===true?He(J,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):Ce(J)}}else if(l instanceof THREE.MeshNormalMaterial){ve.copy(s.normalModel).applyMatrix3(xe);J.setRGB(ve.x,ve.y,ve.z).multiplyScalar(.5).addScalar(.5);l.wireframe===true?He(J,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):Ce(J)}else{J.setRGB(1,1,1);l.wireframe===true?He(J,l.wireframeLinewidth,l.wireframeLinecap,l.wireframeLinejoin):Ce(J)}}function we(e,i,t,n,r,o){m.beginPath();m.moveTo(e,i);m.lineTo(t,n);m.lineTo(r,o);m.closePath()}function He(e,i,t,n){We(i);ze(t);je(n);ke(e.getStyle());m.stroke();pe.expandByScalar(i*2)}function Ce(e){De(e.getStyle());m.fill()}function Me(e){if(e.version===0||e instanceof THREE.CompressedTexture||e instanceof THREE.DataTexture){return{canvas:undefined,version:e.version}}var i=e.image;if(i.complete===false){return{canvas:undefined,version:0}}var t=e.wrapS===THREE.RepeatWrapping||e.wrapS===THREE.MirroredRepeatWrapping;var n=e.wrapT===THREE.RepeatWrapping||e.wrapT===THREE.MirroredRepeatWrapping;var r=e.wrapS===THREE.MirroredRepeatWrapping;var o=e.wrapT===THREE.MirroredRepeatWrapping;var a=document.createElement("canvas");a.width=i.width*(r?2:1);a.height=i.height*(o?2:1);var s=a.getContext("2d");s.setTransform(1,0,0,-1,0,i.height);s.drawImage(i,0,0);if(r===true){s.setTransform(-1,0,0,-1,i.width,i.height);s.drawImage(i,-i.width,0)}if(o===true){s.setTransform(1,0,0,1,0,0);s.drawImage(i,0,i.height)}if(r===true&&o===true){s.setTransform(-1,0,0,1,i.width,0);s.drawImage(i,-i.width,i.height)}var l="no-repeat";if(t===true&&n===true){l="repeat"}else if(t===true){l="repeat-x"}else if(n===true){l="repeat-y"}var c=m.createPattern(a,l);if(e.onUpdate)e.onUpdate(e);return{canvas:c,version:e.version}}function be(e,i,t,n,r,o,a,s,l,c,f,p,E){var d=ee[E.id];if(d===undefined||d.version!==E.version){d=Me(E);ee[E.id]=d}if(d.canvas!==undefined){De(d.canvas)}else{De("rgba( 0, 0, 0, 1)");m.fill();return}var u,h,v,x,y,R,g,T,S=E.offset.x/E.repeat.x,w=E.offset.y/E.repeat.y,H=E.image.width*E.repeat.x,C=E.image.height*E.repeat.y;a=(a+S)*H;s=(s+w)*C;l=(l+S)*H;c=(c+w)*C;f=(f+S)*H;p=(p+w)*C;t-=e;n-=i;r-=e;o-=i;l-=a;c-=s;f-=a;p-=s;g=l*p-f*c;if(g===0)return;T=1/g;u=(p*t-c*r)*T;h=(p*n-c*o)*T;v=(l*r-f*t)*T;x=(l*o-f*n)*T;y=e-u*a-v*s;R=i-h*a-x*s;m.save();m.transform(u,h,v,x,y,R);m.fill();m.restore()}function Le(e,i,t,n,r,o,a,s,l,c,f,p,E){var d,u,h,v,x,y,R,g,T=E.width-1,S=E.height-1;a*=T;s*=S;l*=T;c*=S;f*=T;p*=S;t-=e;n-=i;r-=e;o-=i;l-=a;c-=s;f-=a;p-=s;R=l*p-f*c;g=1/R;d=(p*t-c*r)*g;u=(p*n-c*o)*g;h=(l*r-f*t)*g;v=(l*o-f*n)*g;x=e-d*a-h*s;y=i-u*a-v*s;m.save();m.transform(d,u,h,v,x,y);m.clip();m.drawImage(E,0,0);m.restore()}function Be(e,i,t){var n=i.x-e.x,r=i.y-e.y,o=n*n+r*r,a;if(o===0)return;a=t/Math.sqrt(o);n*=a;r*=a;i.x+=n;i.y+=r;e.x-=n;e.y-=r}function Pe(e){if(y!==e){m.globalAlpha=e;y=e}}function Ve(e){if(R!==e){if(e===THREE.NormalBlending){m.globalCompositeOperation="source-over"}else if(e===THREE.AdditiveBlending){m.globalCompositeOperation="lighter"}else if(e===THREE.SubtractiveBlending){m.globalCompositeOperation="darker"}else if(e===THREE.MultiplyBlending){m.globalCompositeOperation="multiply"}R=e}}function We(e){if(S!==e){m.lineWidth=e;S=e}}function ze(e){if(w!==e){m.lineCap=e;w=e}}function je(e){if(H!==e){m.lineJoin=e;H=e}}function ke(e){if(g!==e){m.strokeStyle=e;g=e}}function De(e){if(T!==e){m.fillStyle=e;T=e}}function Fe(e){if(C.length!==e.length){m.setLineDash(e);C=e}}};
//rebuild by neat 